
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000bbc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b48  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000008e1  00800200  00800200  00000bbc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000bbc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00000c30  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cee  00000000  00000000  00000d28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000403  00000000  00000000  00001a16  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000094a  00000000  00000000  00001e19  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000264  00000000  00000000  00002764  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000496  00000000  00000000  000029c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ac6  00000000  00000000  00002e5e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00003924  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	79 c0       	rjmp	.+242    	; 0xf4 <__ctors_end>
   2:	00 00       	nop
   4:	89 c0       	rjmp	.+274    	; 0x118 <__bad_interrupt>
   6:	00 00       	nop
   8:	87 c0       	rjmp	.+270    	; 0x118 <__bad_interrupt>
   a:	00 00       	nop
   c:	85 c0       	rjmp	.+266    	; 0x118 <__bad_interrupt>
   e:	00 00       	nop
  10:	83 c0       	rjmp	.+262    	; 0x118 <__bad_interrupt>
  12:	00 00       	nop
  14:	81 c0       	rjmp	.+258    	; 0x118 <__bad_interrupt>
  16:	00 00       	nop
  18:	7f c0       	rjmp	.+254    	; 0x118 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	7d c0       	rjmp	.+250    	; 0x118 <__bad_interrupt>
  1e:	00 00       	nop
  20:	7b c0       	rjmp	.+246    	; 0x118 <__bad_interrupt>
  22:	00 00       	nop
  24:	79 c0       	rjmp	.+242    	; 0x118 <__bad_interrupt>
  26:	00 00       	nop
  28:	77 c0       	rjmp	.+238    	; 0x118 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	75 c0       	rjmp	.+234    	; 0x118 <__bad_interrupt>
  2e:	00 00       	nop
  30:	73 c0       	rjmp	.+230    	; 0x118 <__bad_interrupt>
  32:	00 00       	nop
  34:	71 c0       	rjmp	.+226    	; 0x118 <__bad_interrupt>
  36:	00 00       	nop
  38:	6f c0       	rjmp	.+222    	; 0x118 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	6d c0       	rjmp	.+218    	; 0x118 <__bad_interrupt>
  3e:	00 00       	nop
  40:	6b c0       	rjmp	.+214    	; 0x118 <__bad_interrupt>
  42:	00 00       	nop
  44:	06 c5       	rjmp	.+2572   	; 0xa52 <__vector_17>
  46:	00 00       	nop
  48:	67 c0       	rjmp	.+206    	; 0x118 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	65 c0       	rjmp	.+202    	; 0x118 <__bad_interrupt>
  4e:	00 00       	nop
  50:	63 c0       	rjmp	.+198    	; 0x118 <__bad_interrupt>
  52:	00 00       	nop
  54:	61 c0       	rjmp	.+194    	; 0x118 <__bad_interrupt>
  56:	00 00       	nop
  58:	5f c0       	rjmp	.+190    	; 0x118 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	5d c0       	rjmp	.+186    	; 0x118 <__bad_interrupt>
  5e:	00 00       	nop
  60:	5b c0       	rjmp	.+182    	; 0x118 <__bad_interrupt>
  62:	00 00       	nop
  64:	59 c0       	rjmp	.+178    	; 0x118 <__bad_interrupt>
  66:	00 00       	nop
  68:	57 c0       	rjmp	.+174    	; 0x118 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	55 c0       	rjmp	.+170    	; 0x118 <__bad_interrupt>
  6e:	00 00       	nop
  70:	53 c0       	rjmp	.+166    	; 0x118 <__bad_interrupt>
  72:	00 00       	nop
  74:	51 c0       	rjmp	.+162    	; 0x118 <__bad_interrupt>
  76:	00 00       	nop
  78:	4f c0       	rjmp	.+158    	; 0x118 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	4d c0       	rjmp	.+154    	; 0x118 <__bad_interrupt>
  7e:	00 00       	nop
  80:	4b c0       	rjmp	.+150    	; 0x118 <__bad_interrupt>
  82:	00 00       	nop
  84:	49 c0       	rjmp	.+146    	; 0x118 <__bad_interrupt>
  86:	00 00       	nop
  88:	47 c0       	rjmp	.+142    	; 0x118 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	45 c0       	rjmp	.+138    	; 0x118 <__bad_interrupt>
  8e:	00 00       	nop
  90:	43 c0       	rjmp	.+134    	; 0x118 <__bad_interrupt>
  92:	00 00       	nop
  94:	41 c0       	rjmp	.+130    	; 0x118 <__bad_interrupt>
  96:	00 00       	nop
  98:	3f c0       	rjmp	.+126    	; 0x118 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	3d c0       	rjmp	.+122    	; 0x118 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	3b c0       	rjmp	.+118    	; 0x118 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	39 c0       	rjmp	.+114    	; 0x118 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	37 c0       	rjmp	.+110    	; 0x118 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	35 c0       	rjmp	.+106    	; 0x118 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	33 c0       	rjmp	.+102    	; 0x118 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	31 c0       	rjmp	.+98     	; 0x118 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	2f c0       	rjmp	.+94     	; 0x118 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2d c0       	rjmp	.+90     	; 0x118 <__bad_interrupt>
  be:	00 00       	nop
  c0:	2b c0       	rjmp	.+86     	; 0x118 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	29 c0       	rjmp	.+82     	; 0x118 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	27 c0       	rjmp	.+78     	; 0x118 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	25 c0       	rjmp	.+74     	; 0x118 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	23 c0       	rjmp	.+70     	; 0x118 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	21 c0       	rjmp	.+66     	; 0x118 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	1f c0       	rjmp	.+62     	; 0x118 <__bad_interrupt>
  da:	00 00       	nop
  dc:	1d c0       	rjmp	.+58     	; 0x118 <__bad_interrupt>
  de:	00 00       	nop
  e0:	1b c0       	rjmp	.+54     	; 0x118 <__bad_interrupt>
  e2:	00 00       	nop
  e4:	93 03       	fmuls	r17, r19
  e6:	a3 03       	fmuls	r18, r19
  e8:	d1 03       	fmuls	r21, r17
  ea:	db 03       	fmulsu	r21, r19
  ec:	b9 03       	fmulsu	r19, r17
  ee:	a8 03       	fmulsu	r18, r16
  f0:	cf 03       	fmulsu	r20, r23
  f2:	80 04       	cpc	r8, r0

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	d1 e2       	ldi	r29, 0x21	; 33
  fc:	de bf       	out	0x3e, r29	; 62
  fe:	cd bf       	out	0x3d, r28	; 61
 100:	00 e0       	ldi	r16, 0x00	; 0
 102:	0c bf       	out	0x3c, r16	; 60

00000104 <__do_clear_bss>:
 104:	2a e0       	ldi	r18, 0x0A	; 10
 106:	a0 e0       	ldi	r26, 0x00	; 0
 108:	b2 e0       	ldi	r27, 0x02	; 2
 10a:	01 c0       	rjmp	.+2      	; 0x10e <.do_clear_bss_start>

0000010c <.do_clear_bss_loop>:
 10c:	1d 92       	st	X+, r1

0000010e <.do_clear_bss_start>:
 10e:	a1 3e       	cpi	r26, 0xE1	; 225
 110:	b2 07       	cpc	r27, r18
 112:	e1 f7       	brne	.-8      	; 0x10c <.do_clear_bss_loop>
 114:	f0 d4       	rcall	.+2528   	; 0xaf6 <main>
 116:	16 c5       	rjmp	.+2604   	; 0xb44 <_exit>

00000118 <__bad_interrupt>:
 118:	73 cf       	rjmp	.-282    	; 0x0 <__vectors>

0000011a <CSwitch>:
Exit_Kernel:
        /* 
          * This is the "top" half of CSwitch(), generally called by the kernel.
          * Assume I = 0, i.e., all interrupts are disabled.
          */
        SAVECTX
 11a:	0f 92       	push	r0
 11c:	1f 92       	push	r1
 11e:	2f 92       	push	r2
 120:	3f 92       	push	r3
 122:	4f 92       	push	r4
 124:	5f 92       	push	r5
 126:	6f 92       	push	r6
 128:	7f 92       	push	r7
 12a:	8f 92       	push	r8
 12c:	9f 92       	push	r9
 12e:	af 92       	push	r10
 130:	bf 92       	push	r11
 132:	cf 92       	push	r12
 134:	df 92       	push	r13
 136:	ef 92       	push	r14
 138:	ff 92       	push	r15
 13a:	0f 93       	push	r16
 13c:	1f 93       	push	r17
 13e:	2f 93       	push	r18
 140:	3f 93       	push	r19
 142:	4f 93       	push	r20
 144:	5f 93       	push	r21
 146:	6f 93       	push	r22
 148:	7f 93       	push	r23
 14a:	8f 93       	push	r24
 14c:	9f 93       	push	r25
 14e:	af 93       	push	r26
 150:	bf 93       	push	r27
 152:	cf 93       	push	r28
 154:	df 93       	push	r29
 156:	ef 93       	push	r30
 158:	ff 93       	push	r31
 15a:	0c b7       	in	r16, 0x3c	; 60
 15c:	0f 93       	push	r16
 15e:	ff b7       	in	r31, 0x3f	; 63
 160:	ff 93       	push	r31
        /* 
          * Now, we have saved the kernel's context.
          * Save the current H/W stack pointer into KernelSp.
          */
        in   r30, SPL
 162:	ed b7       	in	r30, 0x3d	; 61
        in   r31, SPH
 164:	fe b7       	in	r31, 0x3e	; 62
		  in   r16, EIND
 166:	0c b7       	in	r16, 0x3c	; 60
        sts  KernelSp, r30
 168:	e0 93 df 0a 	sts	0x0ADF, r30
        sts  KernelSp+1, r31
 16c:	f0 93 e0 0a 	sts	0x0AE0, r31

        /*
          * We are now ready to restore Cp's context, i.e.,
          * switching the H/W stack pointer to CurrentSp.
          */ 
        lds  r30, CurrentSp
 170:	e0 91 dd 0a 	lds	r30, 0x0ADD
        lds  r31, CurrentSp+1
 174:	f0 91 de 0a 	lds	r31, 0x0ADE
        out  SPL, r30
 178:	ed bf       	out	0x3d, r30	; 61
        out  SPH, r31
 17a:	fe bf       	out	0x3e, r31	; 62
		  out  EIND, r16
 17c:	0c bf       	out	0x3c, r16	; 60
        /*
          * We are now executing in Cp's stack.
          * Note: at the bottom of the Cp's context is its return address.
          */
        RESTORECTX
 17e:	ff 91       	pop	r31
 180:	ff bf       	out	0x3f, r31	; 63
 182:	0f 91       	pop	r16
 184:	0c bf       	out	0x3c, r16	; 60
 186:	ff 91       	pop	r31
 188:	ef 91       	pop	r30
 18a:	df 91       	pop	r29
 18c:	cf 91       	pop	r28
 18e:	bf 91       	pop	r27
 190:	af 91       	pop	r26
 192:	9f 91       	pop	r25
 194:	8f 91       	pop	r24
 196:	7f 91       	pop	r23
 198:	6f 91       	pop	r22
 19a:	5f 91       	pop	r21
 19c:	4f 91       	pop	r20
 19e:	3f 91       	pop	r19
 1a0:	2f 91       	pop	r18
 1a2:	1f 91       	pop	r17
 1a4:	0f 91       	pop	r16
 1a6:	ff 90       	pop	r15
 1a8:	ef 90       	pop	r14
 1aa:	df 90       	pop	r13
 1ac:	cf 90       	pop	r12
 1ae:	bf 90       	pop	r11
 1b0:	af 90       	pop	r10
 1b2:	9f 90       	pop	r9
 1b4:	8f 90       	pop	r8
 1b6:	7f 90       	pop	r7
 1b8:	6f 90       	pop	r6
 1ba:	5f 90       	pop	r5
 1bc:	4f 90       	pop	r4
 1be:	3f 90       	pop	r3
 1c0:	2f 90       	pop	r2
 1c2:	1f 90       	pop	r1
 1c4:	0f 90       	pop	r0
        reti         /* re-enable all global interrupts */
 1c6:	18 95       	reti

000001c8 <Enter_Kernel>:
Enter_Kernel:   
        /*
          * This is the "bottom" half of CSwitch(). We are still executing in
          * Cp's context.
          */
        SAVECTX
 1c8:	0f 92       	push	r0
 1ca:	1f 92       	push	r1
 1cc:	2f 92       	push	r2
 1ce:	3f 92       	push	r3
 1d0:	4f 92       	push	r4
 1d2:	5f 92       	push	r5
 1d4:	6f 92       	push	r6
 1d6:	7f 92       	push	r7
 1d8:	8f 92       	push	r8
 1da:	9f 92       	push	r9
 1dc:	af 92       	push	r10
 1de:	bf 92       	push	r11
 1e0:	cf 92       	push	r12
 1e2:	df 92       	push	r13
 1e4:	ef 92       	push	r14
 1e6:	ff 92       	push	r15
 1e8:	0f 93       	push	r16
 1ea:	1f 93       	push	r17
 1ec:	2f 93       	push	r18
 1ee:	3f 93       	push	r19
 1f0:	4f 93       	push	r20
 1f2:	5f 93       	push	r21
 1f4:	6f 93       	push	r22
 1f6:	7f 93       	push	r23
 1f8:	8f 93       	push	r24
 1fa:	9f 93       	push	r25
 1fc:	af 93       	push	r26
 1fe:	bf 93       	push	r27
 200:	cf 93       	push	r28
 202:	df 93       	push	r29
 204:	ef 93       	push	r30
 206:	ff 93       	push	r31
 208:	0c b7       	in	r16, 0x3c	; 60
 20a:	0f 93       	push	r16
 20c:	ff b7       	in	r31, 0x3f	; 63
 20e:	ff 93       	push	r31
        /* 
          * Now, we have saved the Cp's context.
          * Save the current H/W stack pointer into CurrentSp.
          */
        in   r30, SPL
 210:	ed b7       	in	r30, 0x3d	; 61
        in   r31, SPH
 212:	fe b7       	in	r31, 0x3e	; 62
		  in   r16, EIND
 214:	0c b7       	in	r16, 0x3c	; 60
        sts  CurrentSp, r30
 216:	e0 93 dd 0a 	sts	0x0ADD, r30
        sts  CurrentSp+1, r31
 21a:	f0 93 de 0a 	sts	0x0ADE, r31
        /*
          * We are now ready to restore kernel's context, i.e.,
          * switching the H/W stack pointer back to KernelSp.
          */ 
        lds  r30, KernelSp
 21e:	e0 91 df 0a 	lds	r30, 0x0ADF
        lds  r31, KernelSp+1
 222:	f0 91 e0 0a 	lds	r31, 0x0AE0
        out  SPL, r30
 226:	ed bf       	out	0x3d, r30	; 61
        out  SPH, r31
 228:	fe bf       	out	0x3e, r31	; 62
		  out  EIND, r16
 22a:	0c bf       	out	0x3c, r16	; 60
        /*
          * We are now executing in kernel's stack.
          */
       RESTORECTX
 22c:	ff 91       	pop	r31
 22e:	ff bf       	out	0x3f, r31	; 63
 230:	0f 91       	pop	r16
 232:	0c bf       	out	0x3c, r16	; 60
 234:	ff 91       	pop	r31
 236:	ef 91       	pop	r30
 238:	df 91       	pop	r29
 23a:	cf 91       	pop	r28
 23c:	bf 91       	pop	r27
 23e:	af 91       	pop	r26
 240:	9f 91       	pop	r25
 242:	8f 91       	pop	r24
 244:	7f 91       	pop	r23
 246:	6f 91       	pop	r22
 248:	5f 91       	pop	r21
 24a:	4f 91       	pop	r20
 24c:	3f 91       	pop	r19
 24e:	2f 91       	pop	r18
 250:	1f 91       	pop	r17
 252:	0f 91       	pop	r16
 254:	ff 90       	pop	r15
 256:	ef 90       	pop	r14
 258:	df 90       	pop	r13
 25a:	cf 90       	pop	r12
 25c:	bf 90       	pop	r11
 25e:	af 90       	pop	r10
 260:	9f 90       	pop	r9
 262:	8f 90       	pop	r8
 264:	7f 90       	pop	r7
 266:	6f 90       	pop	r6
 268:	5f 90       	pop	r5
 26a:	4f 90       	pop	r4
 26c:	3f 90       	pop	r3
 26e:	2f 90       	pop	r2
 270:	1f 90       	pop	r1
 272:	0f 90       	pop	r0
        /* 
          * We are ready to return to the caller of CSwitch() (or Exit_Kernel()).
          * Note: We should NOT re-enable interrupts while kernel is running.
          *         Therefore, we use "ret", and not "reti".
          */
       ret
 274:	08 95       	ret

00000276 <enqueue>:
		/*for(x=0;x<32000;x++);
		for(x=0;x<32000;x++);
		for(x=0;x<32000;x++);
		for(x=0;x<32000;x++);*/
		Task_Sleep(500);
	}
 276:	fc 01       	movw	r30, r24
 278:	db 01       	movw	r26, r22
 27a:	af 5e       	subi	r26, 0xEF	; 239
 27c:	be 4f       	sbci	r27, 0xFE	; 254
 27e:	11 96       	adiw	r26, 0x01	; 1
 280:	1c 92       	st	X, r1
 282:	1e 92       	st	-X, r1
 284:	80 81       	ld	r24, Z
 286:	91 81       	ldd	r25, Z+1	; 0x01
 288:	89 2b       	or	r24, r25
 28a:	29 f4       	brne	.+10     	; 0x296 <enqueue+0x20>
 28c:	71 83       	std	Z+1, r23	; 0x01
 28e:	60 83       	st	Z, r22
 290:	73 83       	std	Z+3, r23	; 0x03
 292:	62 83       	std	Z+2, r22	; 0x02
 294:	08 95       	ret
 296:	a2 81       	ldd	r26, Z+2	; 0x02
 298:	b3 81       	ldd	r27, Z+3	; 0x03
 29a:	af 5e       	subi	r26, 0xEF	; 239
 29c:	be 4f       	sbci	r27, 0xFE	; 254
 29e:	11 96       	adiw	r26, 0x01	; 1
 2a0:	7c 93       	st	X, r23
 2a2:	6e 93       	st	-X, r22
 2a4:	73 83       	std	Z+3, r23	; 0x03
 2a6:	62 83       	std	Z+2, r22	; 0x02
 2a8:	08 95       	ret

000002aa <Kernel_Create_Task>:
 2aa:	0f 93       	push	r16
 2ac:	1f 93       	push	r17
 2ae:	cf 93       	push	r28
 2b0:	df 93       	push	r29
 2b2:	20 91 07 02 	lds	r18, 0x0207
 2b6:	30 91 08 02 	lds	r19, 0x0208
 2ba:	28 30       	cpi	r18, 0x08	; 8
 2bc:	31 05       	cpc	r19, r1
 2be:	09 f4       	brne	.+2      	; 0x2c2 <Kernel_Create_Task+0x18>
 2c0:	5b c0       	rjmp	.+182    	; 0x378 <Kernel_Create_Task+0xce>
 2c2:	c0 91 11 02 	lds	r28, 0x0211
 2c6:	d0 91 12 02 	lds	r29, 0x0212
 2ca:	20 97       	sbiw	r28, 0x00	; 0
 2cc:	59 f0       	breq	.+22     	; 0x2e4 <Kernel_Create_Task+0x3a>
 2ce:	fe 01       	movw	r30, r28
 2d0:	ef 5e       	subi	r30, 0xEF	; 239
 2d2:	fe 4f       	sbci	r31, 0xFE	; 254
 2d4:	20 81       	ld	r18, Z
 2d6:	31 81       	ldd	r19, Z+1	; 0x01
 2d8:	30 93 12 02 	sts	0x0212, r19
 2dc:	20 93 11 02 	sts	0x0211, r18
 2e0:	11 82       	std	Z+1, r1	; 0x01
 2e2:	10 82       	st	Z, r1
 2e4:	20 91 07 02 	lds	r18, 0x0207
 2e8:	30 91 08 02 	lds	r19, 0x0208
 2ec:	2f 5f       	subi	r18, 0xFF	; 255
 2ee:	3f 4f       	sbci	r19, 0xFF	; 255
 2f0:	30 93 08 02 	sts	0x0208, r19
 2f4:	20 93 07 02 	sts	0x0207, r18
 2f8:	fe 01       	movw	r30, r28
 2fa:	32 96       	adiw	r30, 0x02	; 2
 2fc:	20 e0       	ldi	r18, 0x00	; 0
 2fe:	31 e0       	ldi	r19, 0x01	; 1
 300:	df 01       	movw	r26, r30
 302:	89 01       	movw	r16, r18
 304:	1d 92       	st	X+, r1
 306:	01 50       	subi	r16, 0x01	; 1
 308:	10 40       	sbci	r17, 0x00	; 0
 30a:	e1 f7       	brne	.-8      	; 0x304 <Kernel_Create_Task+0x5a>
 30c:	e1 50       	subi	r30, 0x01	; 1
 30e:	ff 4f       	sbci	r31, 0xFF	; 255
 310:	23 ec       	ldi	r18, 0xC3	; 195
 312:	31 e0       	ldi	r19, 0x01	; 1
 314:	20 83       	st	Z, r18
 316:	31 97       	sbiw	r30, 0x01	; 1
 318:	30 83       	st	Z, r19
 31a:	31 97       	sbiw	r30, 0x01	; 1
 31c:	10 82       	st	Z, r1
 31e:	31 97       	sbiw	r30, 0x01	; 1
 320:	80 83       	st	Z, r24
 322:	31 97       	sbiw	r30, 0x01	; 1
 324:	90 83       	st	Z, r25
 326:	31 97       	sbiw	r30, 0x01	; 1
 328:	10 82       	st	Z, r1
 32a:	9e 01       	movw	r18, r28
 32c:	27 52       	subi	r18, 0x27	; 39
 32e:	3f 4f       	sbci	r19, 0xFF	; 255
 330:	39 83       	std	Y+1, r19	; 0x01
 332:	28 83       	st	Y, r18
 334:	37 96       	adiw	r30, 0x07	; 7
 336:	91 83       	std	Z+1, r25	; 0x01
 338:	80 83       	st	Z, r24
 33a:	32 96       	adiw	r30, 0x02	; 2
 33c:	10 82       	st	Z, r1
 33e:	36 96       	adiw	r30, 0x06	; 6
 340:	51 83       	std	Z+1, r21	; 0x01
 342:	40 83       	st	Z, r20
 344:	33 97       	sbiw	r30, 0x03	; 3
 346:	60 83       	st	Z, r22
 348:	de 01       	movw	r26, r28
 34a:	a1 5f       	subi	r26, 0xF1	; 241
 34c:	be 4f       	sbci	r27, 0xFE	; 254
 34e:	11 96       	adiw	r26, 0x01	; 1
 350:	1c 92       	st	X, r1
 352:	1e 92       	st	-X, r1
 354:	1d 97       	sbiw	r26, 0x0d	; 13
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	8c 93       	st	X, r24
 35a:	80 81       	ld	r24, Z
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	88 0f       	add	r24, r24
 360:	99 1f       	adc	r25, r25
 362:	88 0f       	add	r24, r24
 364:	99 1f       	adc	r25, r25
 366:	be 01       	movw	r22, r28
 368:	87 5e       	subi	r24, 0xE7	; 231
 36a:	9d 4f       	sbci	r25, 0xFD	; 253
 36c:	84 df       	rcall	.-248    	; 0x276 <enqueue>
 36e:	c7 5f       	subi	r28, 0xF7	; 247
 370:	de 4f       	sbci	r29, 0xFE	; 254
 372:	88 81       	ld	r24, Y
 374:	99 81       	ldd	r25, Y+1	; 0x01
 376:	02 c0       	rjmp	.+4      	; 0x37c <Kernel_Create_Task+0xd2>
 378:	8f ef       	ldi	r24, 0xFF	; 255
 37a:	9f ef       	ldi	r25, 0xFF	; 255
 37c:	df 91       	pop	r29
 37e:	cf 91       	pop	r28
 380:	1f 91       	pop	r17
 382:	0f 91       	pop	r16
 384:	08 95       	ret

00000386 <Task_Terminate>:
 386:	80 91 09 02 	lds	r24, 0x0209
 38a:	90 91 0a 02 	lds	r25, 0x020A
 38e:	89 2b       	or	r24, r25
 390:	51 f0       	breq	.+20     	; 0x3a6 <Task_Terminate+0x20>
 392:	f8 94       	cli
 394:	e0 91 0f 02 	lds	r30, 0x020F
 398:	f0 91 10 02 	lds	r31, 0x0210
 39c:	eb 5f       	subi	r30, 0xFB	; 251
 39e:	fe 4f       	sbci	r31, 0xFE	; 254
 3a0:	83 e0       	ldi	r24, 0x03	; 3
 3a2:	80 83       	st	Z, r24
 3a4:	11 cf       	rjmp	.-478    	; 0x1c8 <Enter_Kernel>
 3a6:	08 95       	ret

000003a8 <Dispatch>:
 3a8:	a9 e1       	ldi	r26, 0x19	; 25
 3aa:	b2 e0       	ldi	r27, 0x02	; 2
 3ac:	60 e0       	ldi	r22, 0x00	; 0
 3ae:	70 e0       	ldi	r23, 0x00	; 0
 3b0:	2d 91       	ld	r18, X+
 3b2:	3c 91       	ld	r19, X
 3b4:	11 97       	sbiw	r26, 0x01	; 1
 3b6:	21 15       	cp	r18, r1
 3b8:	31 05       	cpc	r19, r1
 3ba:	09 f4       	brne	.+2      	; 0x3be <Dispatch+0x16>
 3bc:	7a c0       	rjmp	.+244    	; 0x4b2 <Dispatch+0x10a>
 3be:	f9 01       	movw	r30, r18
 3c0:	e1 5f       	subi	r30, 0xF1	; 241
 3c2:	fe 4f       	sbci	r31, 0xFE	; 254
 3c4:	80 81       	ld	r24, Z
 3c6:	91 81       	ldd	r25, Z+1	; 0x01
 3c8:	89 2b       	or	r24, r25
 3ca:	61 f0       	breq	.+24     	; 0x3e4 <Dispatch+0x3c>
 3cc:	c9 01       	movw	r24, r18
 3ce:	69 c0       	rjmp	.+210    	; 0x4a2 <Dispatch+0xfa>
 3d0:	fc 01       	movw	r30, r24
 3d2:	e1 5f       	subi	r30, 0xF1	; 241
 3d4:	fe 4f       	sbci	r31, 0xFE	; 254
 3d6:	40 81       	ld	r20, Z
 3d8:	51 81       	ldd	r21, Z+1	; 0x01
 3da:	45 2b       	or	r20, r21
 3dc:	09 f0       	breq	.+2      	; 0x3e0 <Dispatch+0x38>
 3de:	61 c0       	rjmp	.+194    	; 0x4a2 <Dispatch+0xfa>
 3e0:	c9 01       	movw	r24, r18
 3e2:	01 c0       	rjmp	.+2      	; 0x3e6 <Dispatch+0x3e>
 3e4:	c9 01       	movw	r24, r18
 3e6:	fc 01       	movw	r30, r24
 3e8:	e1 5f       	subi	r30, 0xF1	; 241
 3ea:	fe 4f       	sbci	r31, 0xFE	; 254
 3ec:	40 81       	ld	r20, Z
 3ee:	51 81       	ldd	r21, Z+1	; 0x01
 3f0:	45 2b       	or	r20, r21
 3f2:	a1 f4       	brne	.+40     	; 0x41c <Dispatch+0x74>
 3f4:	dc 01       	movw	r26, r24
 3f6:	af 5e       	subi	r26, 0xEF	; 239
 3f8:	be 4f       	sbci	r27, 0xFE	; 254
 3fa:	8d 91       	ld	r24, X+
 3fc:	9c 91       	ld	r25, X
 3fe:	11 97       	sbiw	r26, 0x01	; 1
 400:	66 0f       	add	r22, r22
 402:	77 1f       	adc	r23, r23
 404:	66 0f       	add	r22, r22
 406:	77 1f       	adc	r23, r23
 408:	fb 01       	movw	r30, r22
 40a:	e7 5e       	subi	r30, 0xE7	; 231
 40c:	fd 4f       	sbci	r31, 0xFD	; 253
 40e:	91 83       	std	Z+1, r25	; 0x01
 410:	80 83       	st	Z, r24
 412:	11 96       	adiw	r26, 0x01	; 1
 414:	1c 92       	st	X, r1
 416:	1e 92       	st	-X, r1
 418:	f9 01       	movw	r30, r18
 41a:	33 c0       	rjmp	.+102    	; 0x482 <Dispatch+0xda>
 41c:	fc 01       	movw	r30, r24
 41e:	ef 5e       	subi	r30, 0xEF	; 239
 420:	fe 4f       	sbci	r31, 0xFE	; 254
 422:	80 81       	ld	r24, Z
 424:	91 81       	ldd	r25, Z+1	; 0x01
 426:	00 97       	sbiw	r24, 0x00	; 0
 428:	59 f1       	breq	.+86     	; 0x480 <Dispatch+0xd8>
 42a:	fc 01       	movw	r30, r24
 42c:	e1 5f       	subi	r30, 0xF1	; 241
 42e:	fe 4f       	sbci	r31, 0xFE	; 254
 430:	40 81       	ld	r20, Z
 432:	51 81       	ldd	r21, Z+1	; 0x01
 434:	45 2b       	or	r20, r21
 436:	c1 f4       	brne	.+48     	; 0x468 <Dispatch+0xc0>
 438:	07 c0       	rjmp	.+14     	; 0x448 <Dispatch+0xa0>
 43a:	fc 01       	movw	r30, r24
 43c:	e1 5f       	subi	r30, 0xF1	; 241
 43e:	fe 4f       	sbci	r31, 0xFE	; 254
 440:	40 81       	ld	r20, Z
 442:	51 81       	ldd	r21, Z+1	; 0x01
 444:	45 2b       	or	r20, r21
 446:	81 f4       	brne	.+32     	; 0x468 <Dispatch+0xc0>
 448:	dc 01       	movw	r26, r24
 44a:	af 5e       	subi	r26, 0xEF	; 239
 44c:	be 4f       	sbci	r27, 0xFE	; 254
 44e:	4d 91       	ld	r20, X+
 450:	5c 91       	ld	r21, X
 452:	11 97       	sbiw	r26, 0x01	; 1
 454:	f9 01       	movw	r30, r18
 456:	ef 5e       	subi	r30, 0xEF	; 239
 458:	fe 4f       	sbci	r31, 0xFE	; 254
 45a:	51 83       	std	Z+1, r21	; 0x01
 45c:	40 83       	st	Z, r20
 45e:	11 96       	adiw	r26, 0x01	; 1
 460:	1c 92       	st	X, r1
 462:	1e 92       	st	-X, r1
 464:	fc 01       	movw	r30, r24
 466:	0d c0       	rjmp	.+26     	; 0x482 <Dispatch+0xda>
 468:	f9 01       	movw	r30, r18
 46a:	ef 5e       	subi	r30, 0xEF	; 239
 46c:	fe 4f       	sbci	r31, 0xFE	; 254
 46e:	20 81       	ld	r18, Z
 470:	31 81       	ldd	r19, Z+1	; 0x01
 472:	fc 01       	movw	r30, r24
 474:	ef 5e       	subi	r30, 0xEF	; 239
 476:	fe 4f       	sbci	r31, 0xFE	; 254
 478:	80 81       	ld	r24, Z
 47a:	91 81       	ldd	r25, Z+1	; 0x01
 47c:	00 97       	sbiw	r24, 0x00	; 0
 47e:	e9 f6       	brne	.-70     	; 0x43a <Dispatch+0x92>
 480:	ff cf       	rjmp	.-2      	; 0x480 <Dispatch+0xd8>
 482:	f0 93 10 02 	sts	0x0210, r31
 486:	e0 93 0f 02 	sts	0x020F, r30
 48a:	80 81       	ld	r24, Z
 48c:	91 81       	ldd	r25, Z+1	; 0x01
 48e:	90 93 de 0a 	sts	0x0ADE, r25
 492:	80 93 dd 0a 	sts	0x0ADD, r24
 496:	ee 5f       	subi	r30, 0xFE	; 254
 498:	fe 4f       	sbci	r31, 0xFE	; 254
 49a:	83 e0       	ldi	r24, 0x03	; 3
 49c:	80 83       	st	Z, r24
 49e:	78 94       	sei
 4a0:	08 95       	ret
 4a2:	fc 01       	movw	r30, r24
 4a4:	ef 5e       	subi	r30, 0xEF	; 239
 4a6:	fe 4f       	sbci	r31, 0xFE	; 254
 4a8:	80 81       	ld	r24, Z
 4aa:	91 81       	ldd	r25, Z+1	; 0x01
 4ac:	00 97       	sbiw	r24, 0x00	; 0
 4ae:	09 f0       	breq	.+2      	; 0x4b2 <Dispatch+0x10a>
 4b0:	8f cf       	rjmp	.-226    	; 0x3d0 <Dispatch+0x28>
 4b2:	6f 5f       	subi	r22, 0xFF	; 255
 4b4:	7f 4f       	sbci	r23, 0xFF	; 255
 4b6:	14 96       	adiw	r26, 0x04	; 4
 4b8:	6b 30       	cpi	r22, 0x0B	; 11
 4ba:	71 05       	cpc	r23, r1
 4bc:	09 f0       	breq	.+2      	; 0x4c0 <Dispatch+0x118>
 4be:	78 cf       	rjmp	.-272    	; 0x3b0 <Dispatch+0x8>
 4c0:	ff cf       	rjmp	.-2      	; 0x4c0 <Dispatch+0x118>

000004c2 <check_rqueue>:
 4c2:	cf 93       	push	r28
 4c4:	df 93       	push	r29
 4c6:	c0 91 0f 02 	lds	r28, 0x020F
 4ca:	d0 91 10 02 	lds	r29, 0x0210
 4ce:	fe 01       	movw	r30, r28
 4d0:	e8 5f       	subi	r30, 0xF8	; 248
 4d2:	fe 4f       	sbci	r31, 0xFE	; 254
 4d4:	80 81       	ld	r24, Z
 4d6:	88 23       	and	r24, r24
 4d8:	59 f1       	breq	.+86     	; 0x530 <check_rqueue+0x6e>
 4da:	a9 e1       	ldi	r26, 0x19	; 25
 4dc:	b2 e0       	ldi	r27, 0x02	; 2
 4de:	40 e0       	ldi	r20, 0x00	; 0
 4e0:	50 e0       	ldi	r21, 0x00	; 0
 4e2:	ef 01       	movw	r28, r30
 4e4:	8d 91       	ld	r24, X+
 4e6:	9c 91       	ld	r25, X
 4e8:	11 97       	sbiw	r26, 0x01	; 1
 4ea:	00 97       	sbiw	r24, 0x00	; 0
 4ec:	b1 f0       	breq	.+44     	; 0x51a <check_rqueue+0x58>
 4ee:	fc 01       	movw	r30, r24
 4f0:	e1 5f       	subi	r30, 0xF1	; 241
 4f2:	fe 4f       	sbci	r31, 0xFE	; 254
 4f4:	20 81       	ld	r18, Z
 4f6:	31 81       	ldd	r19, Z+1	; 0x01
 4f8:	23 2b       	or	r18, r19
 4fa:	41 f4       	brne	.+16     	; 0x50c <check_rqueue+0x4a>
 4fc:	1c c0       	rjmp	.+56     	; 0x536 <check_rqueue+0x74>
 4fe:	fc 01       	movw	r30, r24
 500:	e1 5f       	subi	r30, 0xF1	; 241
 502:	fe 4f       	sbci	r31, 0xFE	; 254
 504:	20 81       	ld	r18, Z
 506:	31 81       	ldd	r19, Z+1	; 0x01
 508:	23 2b       	or	r18, r19
 50a:	c1 f0       	breq	.+48     	; 0x53c <check_rqueue+0x7a>
 50c:	fc 01       	movw	r30, r24
 50e:	ef 5e       	subi	r30, 0xEF	; 239
 510:	fe 4f       	sbci	r31, 0xFE	; 254
 512:	80 81       	ld	r24, Z
 514:	91 81       	ldd	r25, Z+1	; 0x01
 516:	00 97       	sbiw	r24, 0x00	; 0
 518:	91 f7       	brne	.-28     	; 0x4fe <check_rqueue+0x3c>
 51a:	4f 5f       	subi	r20, 0xFF	; 255
 51c:	5f 4f       	sbci	r21, 0xFF	; 255
 51e:	88 81       	ld	r24, Y
 520:	14 96       	adiw	r26, 0x04	; 4
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	48 17       	cp	r20, r24
 526:	59 07       	cpc	r21, r25
 528:	ec f2       	brlt	.-70     	; 0x4e4 <check_rqueue+0x22>
 52a:	80 e0       	ldi	r24, 0x00	; 0
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	08 c0       	rjmp	.+16     	; 0x540 <check_rqueue+0x7e>
 530:	80 e0       	ldi	r24, 0x00	; 0
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	05 c0       	rjmp	.+10     	; 0x540 <check_rqueue+0x7e>
 536:	81 e0       	ldi	r24, 0x01	; 1
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	02 c0       	rjmp	.+4      	; 0x540 <check_rqueue+0x7e>
 53c:	81 e0       	ldi	r24, 0x01	; 1
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	df 91       	pop	r29
 542:	cf 91       	pop	r28
 544:	08 95       	ret

00000546 <preemption>:
 546:	bd df       	rcall	.-134    	; 0x4c2 <check_rqueue>
 548:	89 2b       	or	r24, r25
 54a:	31 f1       	breq	.+76     	; 0x598 <preemption+0x52>
 54c:	80 91 0f 02 	lds	r24, 0x020F
 550:	90 91 10 02 	lds	r25, 0x0210
 554:	fc 01       	movw	r30, r24
 556:	ee 5f       	subi	r30, 0xFE	; 254
 558:	fe 4f       	sbci	r31, 0xFE	; 254
 55a:	21 e0       	ldi	r18, 0x01	; 1
 55c:	20 83       	st	Z, r18
 55e:	dc 01       	movw	r26, r24
 560:	a8 5f       	subi	r26, 0xF8	; 248
 562:	be 4f       	sbci	r27, 0xFE	; 254
 564:	ec 91       	ld	r30, X
 566:	f0 e0       	ldi	r31, 0x00	; 0
 568:	ee 0f       	add	r30, r30
 56a:	ff 1f       	adc	r31, r31
 56c:	ee 0f       	add	r30, r30
 56e:	ff 1f       	adc	r31, r31
 570:	e7 5e       	subi	r30, 0xE7	; 231
 572:	fd 4f       	sbci	r31, 0xFD	; 253
 574:	20 81       	ld	r18, Z
 576:	31 81       	ldd	r19, Z+1	; 0x01
 578:	fc 01       	movw	r30, r24
 57a:	ef 5e       	subi	r30, 0xEF	; 239
 57c:	fe 4f       	sbci	r31, 0xFE	; 254
 57e:	31 83       	std	Z+1, r19	; 0x01
 580:	20 83       	st	Z, r18
 582:	ec 91       	ld	r30, X
 584:	f0 e0       	ldi	r31, 0x00	; 0
 586:	ee 0f       	add	r30, r30
 588:	ff 1f       	adc	r31, r31
 58a:	ee 0f       	add	r30, r30
 58c:	ff 1f       	adc	r31, r31
 58e:	e7 5e       	subi	r30, 0xE7	; 231
 590:	fd 4f       	sbci	r31, 0xFD	; 253
 592:	91 83       	std	Z+1, r25	; 0x01
 594:	80 83       	st	Z, r24
 596:	08 cf       	rjmp	.-496    	; 0x3a8 <Dispatch>
 598:	08 95       	ret

0000059a <set_timer>:
 59a:	10 92 80 00 	sts	0x0080, r1
 59e:	e1 e8       	ldi	r30, 0x81	; 129
 5a0:	f0 e0       	ldi	r31, 0x00	; 0
 5a2:	10 82       	st	Z, r1
 5a4:	80 81       	ld	r24, Z
 5a6:	88 60       	ori	r24, 0x08	; 8
 5a8:	80 83       	st	Z, r24
 5aa:	80 81       	ld	r24, Z
 5ac:	82 60       	ori	r24, 0x02	; 2
 5ae:	80 83       	st	Z, r24
 5b0:	80 e2       	ldi	r24, 0x20	; 32
 5b2:	9e e4       	ldi	r25, 0x4E	; 78
 5b4:	90 93 89 00 	sts	0x0089, r25
 5b8:	80 93 88 00 	sts	0x0088, r24
 5bc:	ef e6       	ldi	r30, 0x6F	; 111
 5be:	f0 e0       	ldi	r31, 0x00	; 0
 5c0:	80 81       	ld	r24, Z
 5c2:	82 60       	ori	r24, 0x02	; 2
 5c4:	80 83       	st	Z, r24
 5c6:	08 95       	ret

000005c8 <OS_Init>:
 5c8:	81 e0       	ldi	r24, 0x01	; 1
 5ca:	81 b9       	out	0x01, r24	; 1
 5cc:	09 9a       	sbi	0x01, 1	; 1
 5ce:	10 98       	cbi	0x02, 0	; 2
 5d0:	11 98       	cbi	0x02, 1	; 2
 5d2:	e3 df       	rcall	.-58     	; 0x59a <set_timer>
 5d4:	10 92 08 02 	sts	0x0208, r1
 5d8:	10 92 07 02 	sts	0x0207, r1
 5dc:	10 92 0a 02 	sts	0x020A, r1
 5e0:	10 92 09 02 	sts	0x0209, r1
 5e4:	10 92 0c 02 	sts	0x020C, r1
 5e8:	10 92 0b 02 	sts	0x020B, r1
 5ec:	a5 e4       	ldi	r26, 0x45	; 69
 5ee:	b2 e0       	ldi	r27, 0x02	; 2
 5f0:	20 e0       	ldi	r18, 0x00	; 0
 5f2:	30 e0       	ldi	r19, 0x00	; 0
 5f4:	43 e1       	ldi	r20, 0x13	; 19
 5f6:	51 e0       	ldi	r21, 0x01	; 1
 5f8:	fd 01       	movw	r30, r26
 5fa:	ca 01       	movw	r24, r20
 5fc:	11 92       	st	Z+, r1
 5fe:	01 97       	sbiw	r24, 0x01	; 1
 600:	e9 f7       	brne	.-6      	; 0x5fc <OS_Init+0x34>
 602:	24 9f       	mul	r18, r20
 604:	c0 01       	movw	r24, r0
 606:	25 9f       	mul	r18, r21
 608:	90 0d       	add	r25, r0
 60a:	34 9f       	mul	r19, r20
 60c:	90 0d       	add	r25, r0
 60e:	11 24       	eor	r1, r1
 610:	8b 5b       	subi	r24, 0xBB	; 187
 612:	9d 4f       	sbci	r25, 0xFD	; 253
 614:	fc 01       	movw	r30, r24
 616:	ee 5f       	subi	r30, 0xFE	; 254
 618:	fe 4f       	sbci	r31, 0xFE	; 254
 61a:	10 82       	st	Z, r1
 61c:	37 96       	adiw	r30, 0x07	; 7
 61e:	31 83       	std	Z+1, r19	; 0x01
 620:	20 83       	st	Z, r18
 622:	ad 5e       	subi	r26, 0xED	; 237
 624:	be 4f       	sbci	r27, 0xFE	; 254
 626:	38 96       	adiw	r30, 0x08	; 8
 628:	b1 83       	std	Z+1, r27	; 0x01
 62a:	a0 83       	st	Z, r26
 62c:	2f 5f       	subi	r18, 0xFF	; 255
 62e:	3f 4f       	sbci	r19, 0xFF	; 255
 630:	27 30       	cpi	r18, 0x07	; 7
 632:	31 05       	cpc	r19, r1
 634:	09 f7       	brne	.-62     	; 0x5f8 <OS_Init+0x30>
 636:	10 92 cc 0a 	sts	0x0ACC, r1
 63a:	10 92 dc 0a 	sts	0x0ADC, r1
 63e:	10 92 db 0a 	sts	0x0ADB, r1
 642:	e1 e1       	ldi	r30, 0x11	; 17
 644:	f2 e0       	ldi	r31, 0x02	; 2
 646:	85 e4       	ldi	r24, 0x45	; 69
 648:	92 e0       	ldi	r25, 0x02	; 2
 64a:	91 83       	std	Z+1, r25	; 0x01
 64c:	80 83       	st	Z, r24
 64e:	8a ec       	ldi	r24, 0xCA	; 202
 650:	99 e0       	ldi	r25, 0x09	; 9
 652:	93 83       	std	Z+3, r25	; 0x03
 654:	82 83       	std	Z+2, r24	; 0x02
 656:	08 95       	ret

00000658 <OS_Start>:
 658:	2f 92       	push	r2
 65a:	3f 92       	push	r3
 65c:	4f 92       	push	r4
 65e:	5f 92       	push	r5
 660:	6f 92       	push	r6
 662:	7f 92       	push	r7
 664:	8f 92       	push	r8
 666:	9f 92       	push	r9
 668:	af 92       	push	r10
 66a:	bf 92       	push	r11
 66c:	cf 92       	push	r12
 66e:	df 92       	push	r13
 670:	ef 92       	push	r14
 672:	ff 92       	push	r15
 674:	0f 93       	push	r16
 676:	1f 93       	push	r17
 678:	cf 93       	push	r28
 67a:	df 93       	push	r29
 67c:	80 91 09 02 	lds	r24, 0x0209
 680:	90 91 0a 02 	lds	r25, 0x020A
 684:	89 2b       	or	r24, r25
 686:	09 f0       	breq	.+2      	; 0x68a <OS_Start+0x32>
 688:	5d c1       	rjmp	.+698    	; 0x944 <OS_Start+0x2ec>
 68a:	80 91 07 02 	lds	r24, 0x0207
 68e:	90 91 08 02 	lds	r25, 0x0208
 692:	89 2b       	or	r24, r25
 694:	09 f4       	brne	.+2      	; 0x698 <OS_Start+0x40>
 696:	56 c1       	rjmp	.+684    	; 0x944 <OS_Start+0x2ec>
 698:	f8 94       	cli
 69a:	81 e0       	ldi	r24, 0x01	; 1
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	90 93 0a 02 	sts	0x020A, r25
 6a2:	80 93 09 02 	sts	0x0209, r24
 6a6:	80 de       	rcall	.-768    	; 0x3a8 <Dispatch>
 6a8:	05 e1       	ldi	r16, 0x15	; 21
 6aa:	12 e0       	ldi	r17, 0x02	; 2
 6ac:	68 94       	set
 6ae:	22 24       	eor	r2, r2
 6b0:	22 f8       	bld	r2, 2
 6b2:	0f 2e       	mov	r0, r31
 6b4:	66 24       	eor	r6, r6
 6b6:	6a 94       	dec	r6
 6b8:	ff e7       	ldi	r31, 0x7F	; 127
 6ba:	7f 2e       	mov	r7, r31
 6bc:	f0 2d       	mov	r31, r0
 6be:	33 24       	eor	r3, r3
 6c0:	33 94       	inc	r3
 6c2:	0f 2e       	mov	r0, r31
 6c4:	f0 e0       	ldi	r31, 0x00	; 0
 6c6:	cf 2e       	mov	r12, r31
 6c8:	f2 e0       	ldi	r31, 0x02	; 2
 6ca:	df 2e       	mov	r13, r31
 6cc:	f0 2d       	mov	r31, r0
 6ce:	e0 91 0f 02 	lds	r30, 0x020F
 6d2:	f0 91 10 02 	lds	r31, 0x0210
 6d6:	80 81       	ld	r24, Z
 6d8:	91 81       	ldd	r25, Z+1	; 0x01
 6da:	90 93 de 0a 	sts	0x0ADE, r25
 6de:	80 93 dd 0a 	sts	0x0ADD, r24
 6e2:	e1 5f       	subi	r30, 0xF1	; 241
 6e4:	fe 4f       	sbci	r31, 0xFE	; 254
 6e6:	80 81       	ld	r24, Z
 6e8:	91 81       	ldd	r25, Z+1	; 0x01
 6ea:	89 2b       	or	r24, r25
 6ec:	09 f0       	breq	.+2      	; 0x6f0 <OS_Start+0x98>
 6ee:	ff cf       	rjmp	.-2      	; 0x6ee <OS_Start+0x96>
 6f0:	14 dd       	rcall	.-1496   	; 0x11a <CSwitch>
 6f2:	c0 91 0f 02 	lds	r28, 0x020F
 6f6:	d0 91 10 02 	lds	r29, 0x0210
 6fa:	80 91 dd 0a 	lds	r24, 0x0ADD
 6fe:	90 91 de 0a 	lds	r25, 0x0ADE
 702:	99 83       	std	Y+1, r25	; 0x01
 704:	88 83       	st	Y, r24
 706:	fe 01       	movw	r30, r28
 708:	eb 5f       	subi	r30, 0xFB	; 251
 70a:	fe 4f       	sbci	r31, 0xFE	; 254
 70c:	e0 81       	ld	r30, Z
 70e:	8e 2f       	mov	r24, r30
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	fc 01       	movw	r30, r24
 714:	31 97       	sbiw	r30, 0x01	; 1
 716:	e8 30       	cpi	r30, 0x08	; 8
 718:	f1 05       	cpc	r31, r1
 71a:	c8 f6       	brcc	.-78     	; 0x6ce <OS_Start+0x76>
 71c:	88 27       	eor	r24, r24
 71e:	ee 58       	subi	r30, 0x8E	; 142
 720:	ff 4f       	sbci	r31, 0xFF	; 255
 722:	8f 4f       	sbci	r24, 0xFF	; 255
 724:	07 c2       	rjmp	.+1038   	; 0xb34 <__tablejump2__>
 726:	d6 01       	movw	r26, r12
 728:	12 96       	adiw	r26, 0x02	; 2
 72a:	4d 91       	ld	r20, X+
 72c:	5c 91       	ld	r21, X
 72e:	13 97       	sbiw	r26, 0x03	; 3
 730:	14 96       	adiw	r26, 0x04	; 4
 732:	6c 91       	ld	r22, X
 734:	14 97       	sbiw	r26, 0x04	; 4
 736:	8d 91       	ld	r24, X+
 738:	9c 91       	ld	r25, X
 73a:	b7 dd       	rcall	.-1170   	; 0x2aa <Kernel_Create_Task>
 73c:	f6 01       	movw	r30, r12
 73e:	96 83       	std	Z+6, r25	; 0x06
 740:	85 83       	std	Z+5, r24	; 0x05
 742:	01 df       	rcall	.-510    	; 0x546 <preemption>
 744:	c4 cf       	rjmp	.-120    	; 0x6ce <OS_Start+0x76>
 746:	ce 5f       	subi	r28, 0xFE	; 254
 748:	de 4f       	sbci	r29, 0xFE	; 254
 74a:	38 82       	st	Y, r3
 74c:	2d de       	rcall	.-934    	; 0x3a8 <Dispatch>
 74e:	bf cf       	rjmp	.-130    	; 0x6ce <OS_Start+0x76>
 750:	fe 01       	movw	r30, r28
 752:	ee 5f       	subi	r30, 0xFE	; 254
 754:	fe 4f       	sbci	r31, 0xFE	; 254
 756:	30 82       	st	Z, r3
 758:	36 96       	adiw	r30, 0x06	; 6
 75a:	80 81       	ld	r24, Z
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	88 0f       	add	r24, r24
 760:	99 1f       	adc	r25, r25
 762:	88 0f       	add	r24, r24
 764:	99 1f       	adc	r25, r25
 766:	be 01       	movw	r22, r28
 768:	87 5e       	subi	r24, 0xE7	; 231
 76a:	9d 4f       	sbci	r25, 0xFD	; 253
 76c:	84 dd       	rcall	.-1272   	; 0x276 <enqueue>
 76e:	1c de       	rcall	.-968    	; 0x3a8 <Dispatch>
 770:	ae cf       	rjmp	.-164    	; 0x6ce <OS_Start+0x76>
 772:	fe 01       	movw	r30, r28
 774:	ee 5f       	subi	r30, 0xFE	; 254
 776:	fe 4f       	sbci	r31, 0xFE	; 254
 778:	30 82       	st	Z, r3
 77a:	3d 96       	adiw	r30, 0x0d	; 13
 77c:	81 e0       	ldi	r24, 0x01	; 1
 77e:	90 e0       	ldi	r25, 0x00	; 0
 780:	91 83       	std	Z+1, r25	; 0x01
 782:	80 83       	st	Z, r24
 784:	37 97       	sbiw	r30, 0x07	; 7
 786:	80 81       	ld	r24, Z
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	88 0f       	add	r24, r24
 78c:	99 1f       	adc	r25, r25
 78e:	88 0f       	add	r24, r24
 790:	99 1f       	adc	r25, r25
 792:	be 01       	movw	r22, r28
 794:	87 5e       	subi	r24, 0xE7	; 231
 796:	9d 4f       	sbci	r25, 0xFD	; 253
 798:	6e dd       	rcall	.-1316   	; 0x276 <enqueue>
 79a:	06 de       	rcall	.-1012   	; 0x3a8 <Dispatch>
 79c:	98 cf       	rjmp	.-208    	; 0x6ce <OS_Start+0x76>
 79e:	d3 de       	rcall	.-602    	; 0x546 <preemption>
 7a0:	96 cf       	rjmp	.-212    	; 0x6ce <OS_Start+0x76>
 7a2:	fe 01       	movw	r30, r28
 7a4:	ee 5f       	subi	r30, 0xFE	; 254
 7a6:	fe 4f       	sbci	r31, 0xFE	; 254
 7a8:	10 82       	st	Z, r1
 7aa:	be 01       	movw	r22, r28
 7ac:	81 e1       	ldi	r24, 0x11	; 17
 7ae:	92 e0       	ldi	r25, 0x02	; 2
 7b0:	62 dd       	rcall	.-1340   	; 0x276 <enqueue>
 7b2:	fa dd       	rcall	.-1036   	; 0x3a8 <Dispatch>
 7b4:	8c cf       	rjmp	.-232    	; 0x6ce <OS_Start+0x76>
 7b6:	fe 01       	movw	r30, r28
 7b8:	ee 5f       	subi	r30, 0xFE	; 254
 7ba:	fe 4f       	sbci	r31, 0xFE	; 254
 7bc:	20 82       	st	Z, r2
 7be:	3f 96       	adiw	r30, 0x0f	; 15
 7c0:	11 82       	std	Z+1, r1	; 0x01
 7c2:	10 82       	st	Z, r1
 7c4:	3b 97       	sbiw	r30, 0x0b	; 11
 7c6:	80 81       	ld	r24, Z
 7c8:	91 81       	ldd	r25, Z+1	; 0x01
 7ca:	b3 01       	movw	r22, r6
 7cc:	9f d1       	rcall	.+830    	; 0xb0c <__udivmodhi4>
 7ce:	7b 01       	movw	r14, r22
 7d0:	80 80       	ld	r8, Z
 7d2:	91 80       	ldd	r9, Z+1	; 0x01
 7d4:	d8 01       	movw	r26, r16
 7d6:	2d 91       	ld	r18, X+
 7d8:	3c 91       	ld	r19, X
 7da:	11 97       	sbiw	r26, 0x01	; 1
 7dc:	21 15       	cp	r18, r1
 7de:	31 05       	cpc	r19, r1
 7e0:	41 f4       	brne	.+16     	; 0x7f2 <OS_Start+0x19a>
 7e2:	11 96       	adiw	r26, 0x01	; 1
 7e4:	dc 93       	st	X, r29
 7e6:	ce 93       	st	-X, r28
 7e8:	13 96       	adiw	r26, 0x03	; 3
 7ea:	dc 93       	st	X, r29
 7ec:	ce 93       	st	-X, r28
 7ee:	12 97       	sbiw	r26, 0x02	; 2
 7f0:	85 c0       	rjmp	.+266    	; 0x8fc <OS_Start+0x2a4>
 7f2:	59 01       	movw	r10, r18
 7f4:	ba ef       	ldi	r27, 0xFA	; 250
 7f6:	ab 1a       	sub	r10, r27
 7f8:	be ef       	ldi	r27, 0xFE	; 254
 7fa:	bb 0a       	sbc	r11, r27
 7fc:	f5 01       	movw	r30, r10
 7fe:	80 81       	ld	r24, Z
 800:	91 81       	ldd	r25, Z+1	; 0x01
 802:	b3 01       	movw	r22, r6
 804:	83 d1       	rcall	.+774    	; 0xb0c <__udivmodhi4>
 806:	fb 01       	movw	r30, r22
 808:	d5 01       	movw	r26, r10
 80a:	ad 90       	ld	r10, X+
 80c:	bc 90       	ld	r11, X
 80e:	e6 16       	cp	r14, r22
 810:	f7 06       	cpc	r15, r23
 812:	44 f4       	brge	.+16     	; 0x824 <OS_Start+0x1cc>
 814:	f8 01       	movw	r30, r16
 816:	d1 83       	std	Z+1, r29	; 0x01
 818:	c0 83       	st	Z, r28
 81a:	cf 5e       	subi	r28, 0xEF	; 239
 81c:	de 4f       	sbci	r29, 0xFE	; 254
 81e:	39 83       	std	Y+1, r19	; 0x01
 820:	28 83       	st	Y, r18
 822:	6c c0       	rjmp	.+216    	; 0x8fc <OS_Start+0x2a4>
 824:	c4 01       	movw	r24, r8
 826:	b3 01       	movw	r22, r6
 828:	71 d1       	rcall	.+738    	; 0xb0c <__udivmodhi4>
 82a:	2c 01       	movw	r4, r24
 82c:	ee 16       	cp	r14, r30
 82e:	ff 06       	cpc	r15, r31
 830:	79 f4       	brne	.+30     	; 0x850 <OS_Start+0x1f8>
 832:	c5 01       	movw	r24, r10
 834:	b3 01       	movw	r22, r6
 836:	6a d1       	rcall	.+724    	; 0xb0c <__udivmodhi4>
 838:	48 16       	cp	r4, r24
 83a:	59 06       	cpc	r5, r25
 83c:	0c f0       	brlt	.+2      	; 0x840 <OS_Start+0x1e8>
 83e:	5e c0       	rjmp	.+188    	; 0x8fc <OS_Start+0x2a4>
 840:	d8 01       	movw	r26, r16
 842:	cd 93       	st	X+, r28
 844:	dc 93       	st	X, r29
 846:	cf 5e       	subi	r28, 0xEF	; 239
 848:	de 4f       	sbci	r29, 0xFE	; 254
 84a:	39 83       	std	Y+1, r19	; 0x01
 84c:	28 83       	st	Y, r18
 84e:	56 c0       	rjmp	.+172    	; 0x8fc <OS_Start+0x2a4>
 850:	f9 01       	movw	r30, r18
 852:	ef 5e       	subi	r30, 0xEF	; 239
 854:	fe 4f       	sbci	r31, 0xFE	; 254
 856:	01 90       	ld	r0, Z+
 858:	f0 81       	ld	r31, Z
 85a:	e0 2d       	mov	r30, r0
 85c:	30 97       	sbiw	r30, 0x00	; 0
 85e:	09 f4       	brne	.+2      	; 0x862 <OS_Start+0x20a>
 860:	45 c0       	rjmp	.+138    	; 0x8ec <OS_Start+0x294>
 862:	4f 01       	movw	r8, r30
 864:	ba ef       	ldi	r27, 0xFA	; 250
 866:	8b 1a       	sub	r8, r27
 868:	be ef       	ldi	r27, 0xFE	; 254
 86a:	9b 0a       	sbc	r9, r27
 86c:	d4 01       	movw	r26, r8
 86e:	8d 91       	ld	r24, X+
 870:	9c 91       	ld	r25, X
 872:	b3 01       	movw	r22, r6
 874:	4b d1       	rcall	.+662    	; 0xb0c <__udivmodhi4>
 876:	5b 01       	movw	r10, r22
 878:	d4 01       	movw	r26, r8
 87a:	8d 91       	ld	r24, X+
 87c:	9c 91       	ld	r25, X
 87e:	b3 01       	movw	r22, r6
 880:	45 d1       	rcall	.+650    	; 0xb0c <__udivmodhi4>
 882:	ea 14       	cp	r14, r10
 884:	fb 04       	cpc	r15, r11
 886:	a4 f0       	brlt	.+40     	; 0x8b0 <OS_Start+0x258>
 888:	19 c0       	rjmp	.+50     	; 0x8bc <OS_Start+0x264>
 88a:	4f 01       	movw	r8, r30
 88c:	ba ef       	ldi	r27, 0xFA	; 250
 88e:	8b 1a       	sub	r8, r27
 890:	be ef       	ldi	r27, 0xFE	; 254
 892:	9b 0a       	sbc	r9, r27
 894:	d4 01       	movw	r26, r8
 896:	8d 91       	ld	r24, X+
 898:	9c 91       	ld	r25, X
 89a:	b3 01       	movw	r22, r6
 89c:	37 d1       	rcall	.+622    	; 0xb0c <__udivmodhi4>
 89e:	5b 01       	movw	r10, r22
 8a0:	d4 01       	movw	r26, r8
 8a2:	8d 91       	ld	r24, X+
 8a4:	9c 91       	ld	r25, X
 8a6:	b3 01       	movw	r22, r6
 8a8:	31 d1       	rcall	.+610    	; 0xb0c <__udivmodhi4>
 8aa:	ea 14       	cp	r14, r10
 8ac:	fb 04       	cpc	r15, r11
 8ae:	34 f4       	brge	.+12     	; 0x8bc <OS_Start+0x264>
 8b0:	f9 01       	movw	r30, r18
 8b2:	ef 5e       	subi	r30, 0xEF	; 239
 8b4:	fe 4f       	sbci	r31, 0xFE	; 254
 8b6:	d1 83       	std	Z+1, r29	; 0x01
 8b8:	c0 83       	st	Z, r28
 8ba:	20 c0       	rjmp	.+64     	; 0x8fc <OS_Start+0x2a4>
 8bc:	ea 14       	cp	r14, r10
 8be:	fb 04       	cpc	r15, r11
 8c0:	49 f4       	brne	.+18     	; 0x8d4 <OS_Start+0x27c>
 8c2:	48 16       	cp	r4, r24
 8c4:	59 06       	cpc	r5, r25
 8c6:	34 f4       	brge	.+12     	; 0x8d4 <OS_Start+0x27c>
 8c8:	f9 01       	movw	r30, r18
 8ca:	ef 5e       	subi	r30, 0xEF	; 239
 8cc:	fe 4f       	sbci	r31, 0xFE	; 254
 8ce:	d1 83       	std	Z+1, r29	; 0x01
 8d0:	c0 83       	st	Z, r28
 8d2:	14 c0       	rjmp	.+40     	; 0x8fc <OS_Start+0x2a4>
 8d4:	d9 01       	movw	r26, r18
 8d6:	af 5e       	subi	r26, 0xEF	; 239
 8d8:	be 4f       	sbci	r27, 0xFE	; 254
 8da:	2d 91       	ld	r18, X+
 8dc:	3c 91       	ld	r19, X
 8de:	ef 5e       	subi	r30, 0xEF	; 239
 8e0:	fe 4f       	sbci	r31, 0xFE	; 254
 8e2:	01 90       	ld	r0, Z+
 8e4:	f0 81       	ld	r31, Z
 8e6:	e0 2d       	mov	r30, r0
 8e8:	30 97       	sbiw	r30, 0x00	; 0
 8ea:	79 f6       	brne	.-98     	; 0x88a <OS_Start+0x232>
 8ec:	f9 01       	movw	r30, r18
 8ee:	ef 5e       	subi	r30, 0xEF	; 239
 8f0:	fe 4f       	sbci	r31, 0xFE	; 254
 8f2:	d1 83       	std	Z+1, r29	; 0x01
 8f4:	c0 83       	st	Z, r28
 8f6:	f8 01       	movw	r30, r16
 8f8:	d3 83       	std	Z+3, r29	; 0x03
 8fa:	c2 83       	std	Z+2, r28	; 0x02
 8fc:	55 dd       	rcall	.-1366   	; 0x3a8 <Dispatch>
 8fe:	e7 ce       	rjmp	.-562    	; 0x6ce <OS_Start+0x76>
 900:	d8 01       	movw	r26, r16
 902:	6d 91       	ld	r22, X+
 904:	7c 91       	ld	r23, X
 906:	11 97       	sbiw	r26, 0x01	; 1
 908:	61 15       	cp	r22, r1
 90a:	71 05       	cpc	r23, r1
 90c:	49 f0       	breq	.+18     	; 0x920 <OS_Start+0x2c8>
 90e:	fb 01       	movw	r30, r22
 910:	ef 5e       	subi	r30, 0xEF	; 239
 912:	fe 4f       	sbci	r31, 0xFE	; 254
 914:	80 81       	ld	r24, Z
 916:	91 81       	ldd	r25, Z+1	; 0x01
 918:	8d 93       	st	X+, r24
 91a:	9c 93       	st	X, r25
 91c:	11 82       	std	Z+1, r1	; 0x01
 91e:	10 82       	st	Z, r1
 920:	70 93 0e 02 	sts	0x020E, r23
 924:	60 93 0d 02 	sts	0x020D, r22
 928:	fb 01       	movw	r30, r22
 92a:	e8 5f       	subi	r30, 0xF8	; 248
 92c:	fe 4f       	sbci	r31, 0xFE	; 254
 92e:	80 81       	ld	r24, Z
 930:	90 e0       	ldi	r25, 0x00	; 0
 932:	88 0f       	add	r24, r24
 934:	99 1f       	adc	r25, r25
 936:	88 0f       	add	r24, r24
 938:	99 1f       	adc	r25, r25
 93a:	87 5e       	subi	r24, 0xE7	; 231
 93c:	9d 4f       	sbci	r25, 0xFD	; 253
 93e:	9b dc       	rcall	.-1738   	; 0x276 <enqueue>
 940:	02 de       	rcall	.-1020   	; 0x546 <preemption>
 942:	c5 ce       	rjmp	.-630    	; 0x6ce <OS_Start+0x76>
 944:	df 91       	pop	r29
 946:	cf 91       	pop	r28
 948:	1f 91       	pop	r17
 94a:	0f 91       	pop	r16
 94c:	ff 90       	pop	r15
 94e:	ef 90       	pop	r14
 950:	df 90       	pop	r13
 952:	cf 90       	pop	r12
 954:	bf 90       	pop	r11
 956:	af 90       	pop	r10
 958:	9f 90       	pop	r9
 95a:	8f 90       	pop	r8
 95c:	7f 90       	pop	r7
 95e:	6f 90       	pop	r6
 960:	5f 90       	pop	r5
 962:	4f 90       	pop	r4
 964:	3f 90       	pop	r3
 966:	2f 90       	pop	r2
 968:	08 95       	ret

0000096a <Task_Create>:
 96a:	cf 93       	push	r28
 96c:	df 93       	push	r29
 96e:	20 91 09 02 	lds	r18, 0x0209
 972:	30 91 0a 02 	lds	r19, 0x020A
 976:	23 2b       	or	r18, r19
 978:	a1 f0       	breq	.+40     	; 0x9a2 <Task_Create+0x38>
 97a:	f8 94       	cli
 97c:	c0 e0       	ldi	r28, 0x00	; 0
 97e:	d2 e0       	ldi	r29, 0x02	; 2
 980:	99 83       	std	Y+1, r25	; 0x01
 982:	88 83       	st	Y, r24
 984:	5b 83       	std	Y+3, r21	; 0x03
 986:	4a 83       	std	Y+2, r20	; 0x02
 988:	6c 83       	std	Y+4, r22	; 0x04
 98a:	e0 91 0f 02 	lds	r30, 0x020F
 98e:	f0 91 10 02 	lds	r31, 0x0210
 992:	eb 5f       	subi	r30, 0xFB	; 251
 994:	fe 4f       	sbci	r31, 0xFE	; 254
 996:	81 e0       	ldi	r24, 0x01	; 1
 998:	80 83       	st	Z, r24
 99a:	16 dc       	rcall	.-2004   	; 0x1c8 <Enter_Kernel>
 99c:	8d 81       	ldd	r24, Y+5	; 0x05
 99e:	9e 81       	ldd	r25, Y+6	; 0x06
 9a0:	01 c0       	rjmp	.+2      	; 0x9a4 <Task_Create+0x3a>
 9a2:	83 dc       	rcall	.-1786   	; 0x2aa <Kernel_Create_Task>
 9a4:	df 91       	pop	r29
 9a6:	cf 91       	pop	r28
 9a8:	08 95       	ret

000009aa <a_main>:
 9aa:	40 e0       	ldi	r20, 0x00	; 0
 9ac:	50 e0       	ldi	r21, 0x00	; 0
 9ae:	65 e0       	ldi	r22, 0x05	; 5
 9b0:	81 e2       	ldi	r24, 0x21	; 33
 9b2:	95 e0       	ldi	r25, 0x05	; 5
 9b4:	da df       	rcall	.-76     	; 0x96a <Task_Create>
 9b6:	e7 cc       	rjmp	.-1586   	; 0x386 <Task_Terminate>
 9b8:	08 95       	ret

000009ba <Task_Sleep>:
 9ba:	20 91 09 02 	lds	r18, 0x0209
 9be:	30 91 0a 02 	lds	r19, 0x020A
 9c2:	23 2b       	or	r18, r19
 9c4:	71 f0       	breq	.+28     	; 0x9e2 <Task_Sleep+0x28>
 9c6:	f8 94       	cli
 9c8:	20 91 0f 02 	lds	r18, 0x020F
 9cc:	30 91 10 02 	lds	r19, 0x0210
 9d0:	f9 01       	movw	r30, r18
 9d2:	eb 5f       	subi	r30, 0xFB	; 251
 9d4:	fe 4f       	sbci	r31, 0xFE	; 254
 9d6:	44 e0       	ldi	r20, 0x04	; 4
 9d8:	40 83       	st	Z, r20
 9da:	31 96       	adiw	r30, 0x01	; 1
 9dc:	91 83       	std	Z+1, r25	; 0x01
 9de:	80 83       	st	Z, r24
 9e0:	f3 cb       	rjmp	.-2074   	; 0x1c8 <Enter_Kernel>
 9e2:	08 95       	ret

000009e4 <Pong2>:
 9e4:	10 9a       	sbi	0x02, 0	; 2
 9e6:	10 98       	cbi	0x02, 0	; 2
 9e8:	84 ef       	ldi	r24, 0xF4	; 244
 9ea:	91 e0       	ldi	r25, 0x01	; 1
 9ec:	e6 df       	rcall	.-52     	; 0x9ba <Task_Sleep>
 9ee:	fa cf       	rjmp	.-12     	; 0x9e4 <Pong2>

000009f0 <Task_Yield>:
 9f0:	80 91 09 02 	lds	r24, 0x0209
 9f4:	90 91 0a 02 	lds	r25, 0x020A
 9f8:	89 2b       	or	r24, r25
 9fa:	51 f0       	breq	.+20     	; 0xa10 <Task_Yield+0x20>
 9fc:	f8 94       	cli
 9fe:	e0 91 0f 02 	lds	r30, 0x020F
 a02:	f0 91 10 02 	lds	r31, 0x0210
 a06:	eb 5f       	subi	r30, 0xFB	; 251
 a08:	fe 4f       	sbci	r31, 0xFE	; 254
 a0a:	86 e0       	ldi	r24, 0x06	; 6
 a0c:	80 83       	st	Z, r24
 a0e:	dc cb       	rjmp	.-2120   	; 0x1c8 <Enter_Kernel>
 a10:	08 95       	ret

00000a12 <Ping>:
 a12:	80 e0       	ldi	r24, 0x00	; 0
 a14:	9d e7       	ldi	r25, 0x7D	; 125
 a16:	01 97       	sbiw	r24, 0x01	; 1
 a18:	f1 f7       	brne	.-4      	; 0xa16 <Ping+0x4>
 a1a:	80 e0       	ldi	r24, 0x00	; 0
 a1c:	9d e7       	ldi	r25, 0x7D	; 125
 a1e:	01 97       	sbiw	r24, 0x01	; 1
 a20:	f1 f7       	brne	.-4      	; 0xa1e <Ping+0xc>
 a22:	80 e0       	ldi	r24, 0x00	; 0
 a24:	9d e7       	ldi	r25, 0x7D	; 125
 a26:	01 97       	sbiw	r24, 0x01	; 1
 a28:	f1 f7       	brne	.-4      	; 0xa26 <Ping+0x14>
 a2a:	80 e0       	ldi	r24, 0x00	; 0
 a2c:	9d e7       	ldi	r25, 0x7D	; 125
 a2e:	01 97       	sbiw	r24, 0x01	; 1
 a30:	f1 f7       	brne	.-4      	; 0xa2e <Ping+0x1c>
 a32:	40 e0       	ldi	r20, 0x00	; 0
 a34:	50 e0       	ldi	r21, 0x00	; 0
 a36:	60 e0       	ldi	r22, 0x00	; 0
 a38:	82 ef       	ldi	r24, 0xF2	; 242
 a3a:	94 e0       	ldi	r25, 0x04	; 4
 a3c:	96 df       	rcall	.-212    	; 0x96a <Task_Create>
 a3e:	d8 df       	rcall	.-80     	; 0x9f0 <Task_Yield>
 a40:	fe cf       	rjmp	.-4      	; 0xa3e <Ping+0x2c>

00000a42 <Pong>:
 a42:	40 e0       	ldi	r20, 0x00	; 0
 a44:	50 e0       	ldi	r21, 0x00	; 0
 a46:	61 e0       	ldi	r22, 0x01	; 1
 a48:	89 e0       	ldi	r24, 0x09	; 9
 a4a:	95 e0       	ldi	r25, 0x05	; 5
 a4c:	8e df       	rcall	.-228    	; 0x96a <Task_Create>
 a4e:	d0 df       	rcall	.-96     	; 0x9f0 <Task_Yield>
 a50:	fe cf       	rjmp	.-4      	; 0xa4e <Pong+0xc>

00000a52 <__vector_17>:
	 Task_Terminate();
 }
 

ISR(TIMER1_COMPA_vect)
{
 a52:	1f 92       	push	r1
 a54:	0f 92       	push	r0
 a56:	0f b6       	in	r0, 0x3f	; 63
 a58:	0f 92       	push	r0
 a5a:	11 24       	eor	r1, r1
 a5c:	0b b6       	in	r0, 0x3b	; 59
 a5e:	0f 92       	push	r0
 a60:	2f 93       	push	r18
 a62:	3f 93       	push	r19
 a64:	4f 93       	push	r20
 a66:	5f 93       	push	r21
 a68:	6f 93       	push	r22
 a6a:	7f 93       	push	r23
 a6c:	8f 93       	push	r24
 a6e:	9f 93       	push	r25
 a70:	af 93       	push	r26
 a72:	bf 93       	push	r27
 a74:	ef 93       	push	r30
 a76:	ff 93       	push	r31
	volatile PD* curr;
	curr = sleep_queue.head;
 a78:	40 91 15 02 	lds	r20, 0x0215
 a7c:	50 91 16 02 	lds	r21, 0x0216
	while(curr!= NULL){
 a80:	41 15       	cp	r20, r1
 a82:	51 05       	cpc	r21, r1
 a84:	a9 f0       	breq	.+42     	; 0xab0 <__vector_17+0x5e>
 a86:	ca 01       	movw	r24, r20
		if(curr->tick!=0){
 a88:	fc 01       	movw	r30, r24
 a8a:	ea 5f       	subi	r30, 0xFA	; 250
 a8c:	fe 4f       	sbci	r31, 0xFE	; 254
 a8e:	20 81       	ld	r18, Z
 a90:	31 81       	ldd	r19, Z+1	; 0x01
 a92:	23 2b       	or	r18, r19
 a94:	31 f0       	breq	.+12     	; 0xaa2 <__vector_17+0x50>
			curr->tick--;
 a96:	20 81       	ld	r18, Z
 a98:	31 81       	ldd	r19, Z+1	; 0x01
 a9a:	21 50       	subi	r18, 0x01	; 1
 a9c:	31 09       	sbc	r19, r1
 a9e:	31 83       	std	Z+1, r19	; 0x01
 aa0:	20 83       	st	Z, r18
		}

		curr = curr->next;
 aa2:	fc 01       	movw	r30, r24
 aa4:	ef 5e       	subi	r30, 0xEF	; 239
 aa6:	fe 4f       	sbci	r31, 0xFE	; 254
 aa8:	80 81       	ld	r24, Z
 aaa:	91 81       	ldd	r25, Z+1	; 0x01

ISR(TIMER1_COMPA_vect)
{
	volatile PD* curr;
	curr = sleep_queue.head;
	while(curr!= NULL){
 aac:	00 97       	sbiw	r24, 0x00	; 0
 aae:	61 f7       	brne	.-40     	; 0xa88 <__vector_17+0x36>
			curr->tick--;
		}

		curr = curr->next;
	}
	if(sleep_queue.head->tick == 0)
 ab0:	fa 01       	movw	r30, r20
 ab2:	ea 5f       	subi	r30, 0xFA	; 250
 ab4:	fe 4f       	sbci	r31, 0xFE	; 254
 ab6:	80 81       	ld	r24, Z
 ab8:	91 81       	ldd	r25, Z+1	; 0x01
 aba:	89 2b       	or	r24, r25
 abc:	49 f4       	brne	.+18     	; 0xad0 <__vector_17+0x7e>
	{
		Cp->request = WAKE;
 abe:	e0 91 0f 02 	lds	r30, 0x020F
 ac2:	f0 91 10 02 	lds	r31, 0x0210
 ac6:	eb 5f       	subi	r30, 0xFB	; 251
 ac8:	fe 4f       	sbci	r31, 0xFE	; 254
 aca:	88 e0       	ldi	r24, 0x08	; 8
 acc:	80 83       	st	Z, r24
		Enter_Kernel();
 ace:	7c db       	rcall	.-2312   	; 0x1c8 <Enter_Kernel>
	}

}
 ad0:	ff 91       	pop	r31
 ad2:	ef 91       	pop	r30
 ad4:	bf 91       	pop	r27
 ad6:	af 91       	pop	r26
 ad8:	9f 91       	pop	r25
 ada:	8f 91       	pop	r24
 adc:	7f 91       	pop	r23
 ade:	6f 91       	pop	r22
 ae0:	5f 91       	pop	r21
 ae2:	4f 91       	pop	r20
 ae4:	3f 91       	pop	r19
 ae6:	2f 91       	pop	r18
 ae8:	0f 90       	pop	r0
 aea:	0b be       	out	0x3b, r0	; 59
 aec:	0f 90       	pop	r0
 aee:	0f be       	out	0x3f, r0	; 63
 af0:	0f 90       	pop	r0
 af2:	1f 90       	pop	r1
 af4:	18 95       	reti

00000af6 <main>:

int main() 
{
   OS_Init();
 af6:	68 dd       	rcall	.-1328   	; 0x5c8 <OS_Init>
   Task_Create( a_main , 0, 0 );
 af8:	40 e0       	ldi	r20, 0x00	; 0
 afa:	50 e0       	ldi	r21, 0x00	; 0
 afc:	60 e0       	ldi	r22, 0x00	; 0
 afe:	85 ed       	ldi	r24, 0xD5	; 213
 b00:	94 e0       	ldi	r25, 0x04	; 4
 b02:	33 df       	rcall	.-410    	; 0x96a <Task_Create>
   OS_Start();
 b04:	a9 dd       	rcall	.-1198   	; 0x658 <OS_Start>
}
 b06:	80 e0       	ldi	r24, 0x00	; 0
 b08:	90 e0       	ldi	r25, 0x00	; 0
 b0a:	08 95       	ret

00000b0c <__udivmodhi4>:
 b0c:	aa 1b       	sub	r26, r26
 b0e:	bb 1b       	sub	r27, r27
 b10:	51 e1       	ldi	r21, 0x11	; 17
 b12:	07 c0       	rjmp	.+14     	; 0xb22 <__udivmodhi4_ep>

00000b14 <__udivmodhi4_loop>:
 b14:	aa 1f       	adc	r26, r26
 b16:	bb 1f       	adc	r27, r27
 b18:	a6 17       	cp	r26, r22
 b1a:	b7 07       	cpc	r27, r23
 b1c:	10 f0       	brcs	.+4      	; 0xb22 <__udivmodhi4_ep>
 b1e:	a6 1b       	sub	r26, r22
 b20:	b7 0b       	sbc	r27, r23

00000b22 <__udivmodhi4_ep>:
 b22:	88 1f       	adc	r24, r24
 b24:	99 1f       	adc	r25, r25
 b26:	5a 95       	dec	r21
 b28:	a9 f7       	brne	.-22     	; 0xb14 <__udivmodhi4_loop>
 b2a:	80 95       	com	r24
 b2c:	90 95       	com	r25
 b2e:	bc 01       	movw	r22, r24
 b30:	cd 01       	movw	r24, r26
 b32:	08 95       	ret

00000b34 <__tablejump2__>:
 b34:	ee 0f       	add	r30, r30
 b36:	ff 1f       	adc	r31, r31
 b38:	88 1f       	adc	r24, r24
 b3a:	8b bf       	out	0x3b, r24	; 59
 b3c:	07 90       	elpm	r0, Z+
 b3e:	f6 91       	elpm	r31, Z
 b40:	e0 2d       	mov	r30, r0
 b42:	19 94       	eijmp

00000b44 <_exit>:
 b44:	f8 94       	cli

00000b46 <__stop_program>:
 b46:	ff cf       	rjmp	.-2      	; 0xb46 <__stop_program>
