
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000ba4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b30  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000915  00800200  00800200  00000ba4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ba4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bd4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00000c18  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c71  00000000  00000000  00000d10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000406  00000000  00000000  00001981  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008f3  00000000  00000000  00001d87  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000208  00000000  00000000  0000267c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000496  00000000  00000000  00002884  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000915  00000000  00000000  00002d1a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  0000362f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	7a c0       	rjmp	.+244    	; 0xf6 <__ctors_end>
   2:	00 00       	nop
   4:	8a c0       	rjmp	.+276    	; 0x11a <__bad_interrupt>
   6:	00 00       	nop
   8:	88 c0       	rjmp	.+272    	; 0x11a <__bad_interrupt>
   a:	00 00       	nop
   c:	86 c0       	rjmp	.+268    	; 0x11a <__bad_interrupt>
   e:	00 00       	nop
  10:	84 c0       	rjmp	.+264    	; 0x11a <__bad_interrupt>
  12:	00 00       	nop
  14:	82 c0       	rjmp	.+260    	; 0x11a <__bad_interrupt>
  16:	00 00       	nop
  18:	80 c0       	rjmp	.+256    	; 0x11a <__bad_interrupt>
  1a:	00 00       	nop
  1c:	7e c0       	rjmp	.+252    	; 0x11a <__bad_interrupt>
  1e:	00 00       	nop
  20:	7c c0       	rjmp	.+248    	; 0x11a <__bad_interrupt>
  22:	00 00       	nop
  24:	7a c0       	rjmp	.+244    	; 0x11a <__bad_interrupt>
  26:	00 00       	nop
  28:	78 c0       	rjmp	.+240    	; 0x11a <__bad_interrupt>
  2a:	00 00       	nop
  2c:	76 c0       	rjmp	.+236    	; 0x11a <__bad_interrupt>
  2e:	00 00       	nop
  30:	74 c0       	rjmp	.+232    	; 0x11a <__bad_interrupt>
  32:	00 00       	nop
  34:	72 c0       	rjmp	.+228    	; 0x11a <__bad_interrupt>
  36:	00 00       	nop
  38:	70 c0       	rjmp	.+224    	; 0x11a <__bad_interrupt>
  3a:	00 00       	nop
  3c:	6e c0       	rjmp	.+220    	; 0x11a <__bad_interrupt>
  3e:	00 00       	nop
  40:	6c c0       	rjmp	.+216    	; 0x11a <__bad_interrupt>
  42:	00 00       	nop
  44:	56 c5       	rjmp	.+2732   	; 0xaf2 <__vector_17>
  46:	00 00       	nop
  48:	68 c0       	rjmp	.+208    	; 0x11a <__bad_interrupt>
  4a:	00 00       	nop
  4c:	66 c0       	rjmp	.+204    	; 0x11a <__bad_interrupt>
  4e:	00 00       	nop
  50:	64 c0       	rjmp	.+200    	; 0x11a <__bad_interrupt>
  52:	00 00       	nop
  54:	62 c0       	rjmp	.+196    	; 0x11a <__bad_interrupt>
  56:	00 00       	nop
  58:	60 c0       	rjmp	.+192    	; 0x11a <__bad_interrupt>
  5a:	00 00       	nop
  5c:	5e c0       	rjmp	.+188    	; 0x11a <__bad_interrupt>
  5e:	00 00       	nop
  60:	5c c0       	rjmp	.+184    	; 0x11a <__bad_interrupt>
  62:	00 00       	nop
  64:	5a c0       	rjmp	.+180    	; 0x11a <__bad_interrupt>
  66:	00 00       	nop
  68:	58 c0       	rjmp	.+176    	; 0x11a <__bad_interrupt>
  6a:	00 00       	nop
  6c:	56 c0       	rjmp	.+172    	; 0x11a <__bad_interrupt>
  6e:	00 00       	nop
  70:	54 c0       	rjmp	.+168    	; 0x11a <__bad_interrupt>
  72:	00 00       	nop
  74:	52 c0       	rjmp	.+164    	; 0x11a <__bad_interrupt>
  76:	00 00       	nop
  78:	50 c0       	rjmp	.+160    	; 0x11a <__bad_interrupt>
  7a:	00 00       	nop
  7c:	4e c0       	rjmp	.+156    	; 0x11a <__bad_interrupt>
  7e:	00 00       	nop
  80:	4c c0       	rjmp	.+152    	; 0x11a <__bad_interrupt>
  82:	00 00       	nop
  84:	4a c0       	rjmp	.+148    	; 0x11a <__bad_interrupt>
  86:	00 00       	nop
  88:	48 c0       	rjmp	.+144    	; 0x11a <__bad_interrupt>
  8a:	00 00       	nop
  8c:	46 c0       	rjmp	.+140    	; 0x11a <__bad_interrupt>
  8e:	00 00       	nop
  90:	44 c0       	rjmp	.+136    	; 0x11a <__bad_interrupt>
  92:	00 00       	nop
  94:	42 c0       	rjmp	.+132    	; 0x11a <__bad_interrupt>
  96:	00 00       	nop
  98:	40 c0       	rjmp	.+128    	; 0x11a <__bad_interrupt>
  9a:	00 00       	nop
  9c:	3e c0       	rjmp	.+124    	; 0x11a <__bad_interrupt>
  9e:	00 00       	nop
  a0:	3c c0       	rjmp	.+120    	; 0x11a <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3a c0       	rjmp	.+116    	; 0x11a <__bad_interrupt>
  a6:	00 00       	nop
  a8:	38 c0       	rjmp	.+112    	; 0x11a <__bad_interrupt>
  aa:	00 00       	nop
  ac:	36 c0       	rjmp	.+108    	; 0x11a <__bad_interrupt>
  ae:	00 00       	nop
  b0:	34 c0       	rjmp	.+104    	; 0x11a <__bad_interrupt>
  b2:	00 00       	nop
  b4:	32 c0       	rjmp	.+100    	; 0x11a <__bad_interrupt>
  b6:	00 00       	nop
  b8:	30 c0       	rjmp	.+96     	; 0x11a <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2e c0       	rjmp	.+92     	; 0x11a <__bad_interrupt>
  be:	00 00       	nop
  c0:	2c c0       	rjmp	.+88     	; 0x11a <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2a c0       	rjmp	.+84     	; 0x11a <__bad_interrupt>
  c6:	00 00       	nop
  c8:	28 c0       	rjmp	.+80     	; 0x11a <__bad_interrupt>
  ca:	00 00       	nop
  cc:	26 c0       	rjmp	.+76     	; 0x11a <__bad_interrupt>
  ce:	00 00       	nop
  d0:	24 c0       	rjmp	.+72     	; 0x11a <__bad_interrupt>
  d2:	00 00       	nop
  d4:	22 c0       	rjmp	.+68     	; 0x11a <__bad_interrupt>
  d6:	00 00       	nop
  d8:	20 c0       	rjmp	.+64     	; 0x11a <__bad_interrupt>
  da:	00 00       	nop
  dc:	1e c0       	rjmp	.+60     	; 0x11a <__bad_interrupt>
  de:	00 00       	nop
  e0:	1c c0       	rjmp	.+56     	; 0x11a <__bad_interrupt>
  e2:	00 00       	nop
  e4:	cc 03       	fmulsu	r20, r20
  e6:	d6 03       	fmuls	r21, r22
  e8:	ec 03       	fmulsu	r22, r20
  ea:	a0 03       	fmuls	r18, r16
  ec:	dc 03       	fmulsu	r21, r20
  ee:	ff 03       	fmulsu	r23, r23
  f0:	0a 04       	cpc	r0, r10
  f2:	1b 04       	cpc	r1, r11
  f4:	01 04       	cpc	r0, r1

000000f6 <__ctors_end>:
  f6:	11 24       	eor	r1, r1
  f8:	1f be       	out	0x3f, r1	; 63
  fa:	cf ef       	ldi	r28, 0xFF	; 255
  fc:	d1 e2       	ldi	r29, 0x21	; 33
  fe:	de bf       	out	0x3e, r29	; 62
 100:	cd bf       	out	0x3d, r28	; 61
 102:	00 e0       	ldi	r16, 0x00	; 0
 104:	0c bf       	out	0x3c, r16	; 60

00000106 <__do_clear_bss>:
 106:	2b e0       	ldi	r18, 0x0B	; 11
 108:	a0 e0       	ldi	r26, 0x00	; 0
 10a:	b2 e0       	ldi	r27, 0x02	; 2
 10c:	01 c0       	rjmp	.+2      	; 0x110 <.do_clear_bss_start>

0000010e <.do_clear_bss_loop>:
 10e:	1d 92       	st	X+, r1

00000110 <.do_clear_bss_start>:
 110:	a5 31       	cpi	r26, 0x15	; 21
 112:	b2 07       	cpc	r27, r18
 114:	e1 f7       	brne	.-8      	; 0x10e <.do_clear_bss_loop>
 116:	f7 d4       	rcall	.+2542   	; 0xb06 <main>
 118:	09 c5       	rjmp	.+2578   	; 0xb2c <_exit>

0000011a <__bad_interrupt>:
 11a:	72 cf       	rjmp	.-284    	; 0x0 <__vectors>

0000011c <CSwitch>:
Exit_Kernel:
        /* 
          * This is the "top" half of CSwitch(), generally called by the kernel.
          * Assume I = 0, i.e., all interrupts are disabled.
          */
        SAVECTX
 11c:	0f 92       	push	r0
 11e:	1f 92       	push	r1
 120:	2f 92       	push	r2
 122:	3f 92       	push	r3
 124:	4f 92       	push	r4
 126:	5f 92       	push	r5
 128:	6f 92       	push	r6
 12a:	7f 92       	push	r7
 12c:	8f 92       	push	r8
 12e:	9f 92       	push	r9
 130:	af 92       	push	r10
 132:	bf 92       	push	r11
 134:	cf 92       	push	r12
 136:	df 92       	push	r13
 138:	ef 92       	push	r14
 13a:	ff 92       	push	r15
 13c:	0f 93       	push	r16
 13e:	1f 93       	push	r17
 140:	2f 93       	push	r18
 142:	3f 93       	push	r19
 144:	4f 93       	push	r20
 146:	5f 93       	push	r21
 148:	6f 93       	push	r22
 14a:	7f 93       	push	r23
 14c:	8f 93       	push	r24
 14e:	9f 93       	push	r25
 150:	af 93       	push	r26
 152:	bf 93       	push	r27
 154:	cf 93       	push	r28
 156:	df 93       	push	r29
 158:	ef 93       	push	r30
 15a:	ff 93       	push	r31
 15c:	0c b7       	in	r16, 0x3c	; 60
 15e:	0f 93       	push	r16
 160:	ff b7       	in	r31, 0x3f	; 63
 162:	ff 93       	push	r31
        /* 
          * Now, we have saved the kernel's context.
          * Save the current H/W stack pointer into KernelSp.
          */
        in   r30, SPL
 164:	ed b7       	in	r30, 0x3d	; 61
        in   r31, SPH
 166:	fe b7       	in	r31, 0x3e	; 62
		  in   r16, EIND
 168:	0c b7       	in	r16, 0x3c	; 60
        sts  KernelSp, r30
 16a:	e0 93 13 0b 	sts	0x0B13, r30
        sts  KernelSp+1, r31
 16e:	f0 93 14 0b 	sts	0x0B14, r31

        /*
          * We are now ready to restore Cp's context, i.e.,
          * switching the H/W stack pointer to CurrentSp.
          */ 
        lds  r30, CurrentSp
 172:	e0 91 11 0b 	lds	r30, 0x0B11
        lds  r31, CurrentSp+1
 176:	f0 91 12 0b 	lds	r31, 0x0B12
        out  SPL, r30
 17a:	ed bf       	out	0x3d, r30	; 61
        out  SPH, r31
 17c:	fe bf       	out	0x3e, r31	; 62
		  out  EIND, r16
 17e:	0c bf       	out	0x3c, r16	; 60
        /*
          * We are now executing in Cp's stack.
          * Note: at the bottom of the Cp's context is its return address.
          */
        RESTORECTX
 180:	ff 91       	pop	r31
 182:	ff bf       	out	0x3f, r31	; 63
 184:	0f 91       	pop	r16
 186:	0c bf       	out	0x3c, r16	; 60
 188:	ff 91       	pop	r31
 18a:	ef 91       	pop	r30
 18c:	df 91       	pop	r29
 18e:	cf 91       	pop	r28
 190:	bf 91       	pop	r27
 192:	af 91       	pop	r26
 194:	9f 91       	pop	r25
 196:	8f 91       	pop	r24
 198:	7f 91       	pop	r23
 19a:	6f 91       	pop	r22
 19c:	5f 91       	pop	r21
 19e:	4f 91       	pop	r20
 1a0:	3f 91       	pop	r19
 1a2:	2f 91       	pop	r18
 1a4:	1f 91       	pop	r17
 1a6:	0f 91       	pop	r16
 1a8:	ff 90       	pop	r15
 1aa:	ef 90       	pop	r14
 1ac:	df 90       	pop	r13
 1ae:	cf 90       	pop	r12
 1b0:	bf 90       	pop	r11
 1b2:	af 90       	pop	r10
 1b4:	9f 90       	pop	r9
 1b6:	8f 90       	pop	r8
 1b8:	7f 90       	pop	r7
 1ba:	6f 90       	pop	r6
 1bc:	5f 90       	pop	r5
 1be:	4f 90       	pop	r4
 1c0:	3f 90       	pop	r3
 1c2:	2f 90       	pop	r2
 1c4:	1f 90       	pop	r1
 1c6:	0f 90       	pop	r0
        reti         /* re-enable all global interrupts */
 1c8:	18 95       	reti

000001ca <Enter_Kernel>:
Enter_Kernel:   
        /*
          * This is the "bottom" half of CSwitch(). We are still executing in
          * Cp's context.
          */
        SAVECTX
 1ca:	0f 92       	push	r0
 1cc:	1f 92       	push	r1
 1ce:	2f 92       	push	r2
 1d0:	3f 92       	push	r3
 1d2:	4f 92       	push	r4
 1d4:	5f 92       	push	r5
 1d6:	6f 92       	push	r6
 1d8:	7f 92       	push	r7
 1da:	8f 92       	push	r8
 1dc:	9f 92       	push	r9
 1de:	af 92       	push	r10
 1e0:	bf 92       	push	r11
 1e2:	cf 92       	push	r12
 1e4:	df 92       	push	r13
 1e6:	ef 92       	push	r14
 1e8:	ff 92       	push	r15
 1ea:	0f 93       	push	r16
 1ec:	1f 93       	push	r17
 1ee:	2f 93       	push	r18
 1f0:	3f 93       	push	r19
 1f2:	4f 93       	push	r20
 1f4:	5f 93       	push	r21
 1f6:	6f 93       	push	r22
 1f8:	7f 93       	push	r23
 1fa:	8f 93       	push	r24
 1fc:	9f 93       	push	r25
 1fe:	af 93       	push	r26
 200:	bf 93       	push	r27
 202:	cf 93       	push	r28
 204:	df 93       	push	r29
 206:	ef 93       	push	r30
 208:	ff 93       	push	r31
 20a:	0c b7       	in	r16, 0x3c	; 60
 20c:	0f 93       	push	r16
 20e:	ff b7       	in	r31, 0x3f	; 63
 210:	ff 93       	push	r31
        /* 
          * Now, we have saved the Cp's context.
          * Save the current H/W stack pointer into CurrentSp.
          */
        in   r30, SPL
 212:	ed b7       	in	r30, 0x3d	; 61
        in   r31, SPH
 214:	fe b7       	in	r31, 0x3e	; 62
		  in   r16, EIND
 216:	0c b7       	in	r16, 0x3c	; 60
        sts  CurrentSp, r30
 218:	e0 93 11 0b 	sts	0x0B11, r30
        sts  CurrentSp+1, r31
 21c:	f0 93 12 0b 	sts	0x0B12, r31
        /*
          * We are now ready to restore kernel's context, i.e.,
          * switching the H/W stack pointer back to KernelSp.
          */ 
        lds  r30, KernelSp
 220:	e0 91 13 0b 	lds	r30, 0x0B13
        lds  r31, KernelSp+1
 224:	f0 91 14 0b 	lds	r31, 0x0B14
        out  SPL, r30
 228:	ed bf       	out	0x3d, r30	; 61
        out  SPH, r31
 22a:	fe bf       	out	0x3e, r31	; 62
		  out  EIND, r16
 22c:	0c bf       	out	0x3c, r16	; 60
        /*
          * We are now executing in kernel's stack.
          */
       RESTORECTX
 22e:	ff 91       	pop	r31
 230:	ff bf       	out	0x3f, r31	; 63
 232:	0f 91       	pop	r16
 234:	0c bf       	out	0x3c, r16	; 60
 236:	ff 91       	pop	r31
 238:	ef 91       	pop	r30
 23a:	df 91       	pop	r29
 23c:	cf 91       	pop	r28
 23e:	bf 91       	pop	r27
 240:	af 91       	pop	r26
 242:	9f 91       	pop	r25
 244:	8f 91       	pop	r24
 246:	7f 91       	pop	r23
 248:	6f 91       	pop	r22
 24a:	5f 91       	pop	r21
 24c:	4f 91       	pop	r20
 24e:	3f 91       	pop	r19
 250:	2f 91       	pop	r18
 252:	1f 91       	pop	r17
 254:	0f 91       	pop	r16
 256:	ff 90       	pop	r15
 258:	ef 90       	pop	r14
 25a:	df 90       	pop	r13
 25c:	cf 90       	pop	r12
 25e:	bf 90       	pop	r11
 260:	af 90       	pop	r10
 262:	9f 90       	pop	r9
 264:	8f 90       	pop	r8
 266:	7f 90       	pop	r7
 268:	6f 90       	pop	r6
 26a:	5f 90       	pop	r5
 26c:	4f 90       	pop	r4
 26e:	3f 90       	pop	r3
 270:	2f 90       	pop	r2
 272:	1f 90       	pop	r1
 274:	0f 90       	pop	r0
        /* 
          * We are ready to return to the caller of CSwitch() (or Exit_Kernel()).
          * Note: We should NOT re-enable interrupts while kernel is running.
          *         Therefore, we use "ret", and not "reti".
          */
       ret
 276:	08 95       	ret

00000278 <enqueue>:
		Enter_Kernel();
	}
}  
void Task_Resume( PID p ){
	int i;
	for(i=0;i<11;i++){
 278:	fc 01       	movw	r30, r24
 27a:	db 01       	movw	r26, r22
 27c:	ae 5e       	subi	r26, 0xEE	; 238
 27e:	be 4f       	sbci	r27, 0xFE	; 254
 280:	11 96       	adiw	r26, 0x01	; 1
 282:	1c 92       	st	X, r1
 284:	1e 92       	st	-X, r1
 286:	80 81       	ld	r24, Z
 288:	91 81       	ldd	r25, Z+1	; 0x01
 28a:	89 2b       	or	r24, r25
 28c:	29 f4       	brne	.+10     	; 0x298 <enqueue+0x20>
 28e:	71 83       	std	Z+1, r23	; 0x01
 290:	60 83       	st	Z, r22
 292:	73 83       	std	Z+3, r23	; 0x03
 294:	62 83       	std	Z+2, r22	; 0x02
 296:	08 95       	ret
 298:	a2 81       	ldd	r26, Z+2	; 0x02
 29a:	b3 81       	ldd	r27, Z+3	; 0x03
 29c:	ae 5e       	subi	r26, 0xEE	; 238
 29e:	be 4f       	sbci	r27, 0xFE	; 254
 2a0:	11 96       	adiw	r26, 0x01	; 1
 2a2:	7c 93       	st	X, r23
 2a4:	6e 93       	st	-X, r22
 2a6:	73 83       	std	Z+3, r23	; 0x03
 2a8:	62 83       	std	Z+2, r22	; 0x02
 2aa:	08 95       	ret

000002ac <Kernel_Create_Task>:
 2ac:	0f 93       	push	r16
 2ae:	1f 93       	push	r17
 2b0:	cf 93       	push	r28
 2b2:	df 93       	push	r29
 2b4:	20 91 07 02 	lds	r18, 0x0207
 2b8:	30 91 08 02 	lds	r19, 0x0208
 2bc:	28 30       	cpi	r18, 0x08	; 8
 2be:	31 05       	cpc	r19, r1
 2c0:	09 f4       	brne	.+2      	; 0x2c4 <Kernel_Create_Task+0x18>
 2c2:	5e c0       	rjmp	.+188    	; 0x380 <Kernel_Create_Task+0xd4>
 2c4:	c0 91 11 02 	lds	r28, 0x0211
 2c8:	d0 91 12 02 	lds	r29, 0x0212
 2cc:	20 97       	sbiw	r28, 0x00	; 0
 2ce:	59 f0       	breq	.+22     	; 0x2e6 <Kernel_Create_Task+0x3a>
 2d0:	fe 01       	movw	r30, r28
 2d2:	ee 5e       	subi	r30, 0xEE	; 238
 2d4:	fe 4f       	sbci	r31, 0xFE	; 254
 2d6:	20 81       	ld	r18, Z
 2d8:	31 81       	ldd	r19, Z+1	; 0x01
 2da:	30 93 12 02 	sts	0x0212, r19
 2de:	20 93 11 02 	sts	0x0211, r18
 2e2:	11 82       	std	Z+1, r1	; 0x01
 2e4:	10 82       	st	Z, r1
 2e6:	20 91 07 02 	lds	r18, 0x0207
 2ea:	30 91 08 02 	lds	r19, 0x0208
 2ee:	2f 5f       	subi	r18, 0xFF	; 255
 2f0:	3f 4f       	sbci	r19, 0xFF	; 255
 2f2:	30 93 08 02 	sts	0x0208, r19
 2f6:	20 93 07 02 	sts	0x0207, r18
 2fa:	fe 01       	movw	r30, r28
 2fc:	32 96       	adiw	r30, 0x02	; 2
 2fe:	20 e0       	ldi	r18, 0x00	; 0
 300:	31 e0       	ldi	r19, 0x01	; 1
 302:	df 01       	movw	r26, r30
 304:	89 01       	movw	r16, r18
 306:	1d 92       	st	X+, r1
 308:	01 50       	subi	r16, 0x01	; 1
 30a:	10 40       	sbci	r17, 0x00	; 0
 30c:	e1 f7       	brne	.-8      	; 0x306 <Kernel_Create_Task+0x5a>
 30e:	e1 50       	subi	r30, 0x01	; 1
 310:	ff 4f       	sbci	r31, 0xFF	; 255
 312:	27 ec       	ldi	r18, 0xC7	; 199
 314:	31 e0       	ldi	r19, 0x01	; 1
 316:	20 83       	st	Z, r18
 318:	31 97       	sbiw	r30, 0x01	; 1
 31a:	30 83       	st	Z, r19
 31c:	31 97       	sbiw	r30, 0x01	; 1
 31e:	10 82       	st	Z, r1
 320:	31 97       	sbiw	r30, 0x01	; 1
 322:	80 83       	st	Z, r24
 324:	31 97       	sbiw	r30, 0x01	; 1
 326:	90 83       	st	Z, r25
 328:	31 97       	sbiw	r30, 0x01	; 1
 32a:	10 82       	st	Z, r1
 32c:	9e 01       	movw	r18, r28
 32e:	27 52       	subi	r18, 0x27	; 39
 330:	3f 4f       	sbci	r19, 0xFF	; 255
 332:	39 83       	std	Y+1, r19	; 0x01
 334:	28 83       	st	Y, r18
 336:	37 96       	adiw	r30, 0x07	; 7
 338:	91 83       	std	Z+1, r25	; 0x01
 33a:	80 83       	st	Z, r24
 33c:	32 96       	adiw	r30, 0x02	; 2
 33e:	10 82       	st	Z, r1
 340:	37 96       	adiw	r30, 0x07	; 7
 342:	51 83       	std	Z+1, r21	; 0x01
 344:	40 83       	st	Z, r20
 346:	34 97       	sbiw	r30, 0x04	; 4
 348:	60 83       	st	Z, r22
 34a:	de 01       	movw	r26, r28
 34c:	a7 5f       	subi	r26, 0xF7	; 247
 34e:	be 4f       	sbci	r27, 0xFE	; 254
 350:	8f ef       	ldi	r24, 0xFF	; 255
 352:	8c 93       	st	X, r24
 354:	17 96       	adiw	r26, 0x07	; 7
 356:	11 96       	adiw	r26, 0x01	; 1
 358:	1c 92       	st	X, r1
 35a:	1e 92       	st	-X, r1
 35c:	1e 97       	sbiw	r26, 0x0e	; 14
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	8c 93       	st	X, r24
 362:	80 81       	ld	r24, Z
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	88 0f       	add	r24, r24
 368:	99 1f       	adc	r25, r25
 36a:	88 0f       	add	r24, r24
 36c:	99 1f       	adc	r25, r25
 36e:	be 01       	movw	r22, r28
 370:	8b 5e       	subi	r24, 0xEB	; 235
 372:	9d 4f       	sbci	r25, 0xFD	; 253
 374:	81 df       	rcall	.-254    	; 0x278 <enqueue>
 376:	c6 5f       	subi	r28, 0xF6	; 246
 378:	de 4f       	sbci	r29, 0xFE	; 254
 37a:	88 81       	ld	r24, Y
 37c:	99 81       	ldd	r25, Y+1	; 0x01
 37e:	02 c0       	rjmp	.+4      	; 0x384 <Kernel_Create_Task+0xd8>
 380:	8f ef       	ldi	r24, 0xFF	; 255
 382:	9f ef       	ldi	r25, 0xFF	; 255
 384:	df 91       	pop	r29
 386:	cf 91       	pop	r28
 388:	1f 91       	pop	r17
 38a:	0f 91       	pop	r16
 38c:	08 95       	ret

0000038e <Task_Terminate>:
 38e:	80 91 09 02 	lds	r24, 0x0209
 392:	90 91 0a 02 	lds	r25, 0x020A
 396:	89 2b       	or	r24, r25
 398:	51 f0       	breq	.+20     	; 0x3ae <Task_Terminate+0x20>
 39a:	f8 94       	cli
 39c:	e0 91 0d 02 	lds	r30, 0x020D
 3a0:	f0 91 0e 02 	lds	r31, 0x020E
 3a4:	eb 5f       	subi	r30, 0xFB	; 251
 3a6:	fe 4f       	sbci	r31, 0xFE	; 254
 3a8:	89 e0       	ldi	r24, 0x09	; 9
 3aa:	80 83       	st	Z, r24
 3ac:	0e cf       	rjmp	.-484    	; 0x1ca <Enter_Kernel>
 3ae:	08 95       	ret

000003b0 <Dispatch>:
 3b0:	cf 93       	push	r28
 3b2:	df 93       	push	r29
 3b4:	c5 e1       	ldi	r28, 0x15	; 21
 3b6:	d2 e0       	ldi	r29, 0x02	; 2
 3b8:	60 e0       	ldi	r22, 0x00	; 0
 3ba:	70 e0       	ldi	r23, 0x00	; 0
 3bc:	48 81       	ld	r20, Y
 3be:	59 81       	ldd	r21, Y+1	; 0x01
 3c0:	41 15       	cp	r20, r1
 3c2:	51 05       	cpc	r21, r1
 3c4:	09 f4       	brne	.+2      	; 0x3c8 <Dispatch+0x18>
 3c6:	a3 c0       	rjmp	.+326    	; 0x50e <Dispatch+0x15e>
 3c8:	fa 01       	movw	r30, r20
 3ca:	e0 5f       	subi	r30, 0xF0	; 240
 3cc:	fe 4f       	sbci	r31, 0xFE	; 254
 3ce:	80 81       	ld	r24, Z
 3d0:	91 81       	ldd	r25, Z+1	; 0x01
 3d2:	89 2b       	or	r24, r25
 3d4:	61 f0       	breq	.+24     	; 0x3ee <Dispatch+0x3e>
 3d6:	ca 01       	movw	r24, r20
 3d8:	92 c0       	rjmp	.+292    	; 0x4fe <Dispatch+0x14e>
 3da:	dc 01       	movw	r26, r24
 3dc:	a0 5f       	subi	r26, 0xF0	; 240
 3de:	be 4f       	sbci	r27, 0xFE	; 254
 3e0:	2d 91       	ld	r18, X+
 3e2:	3c 91       	ld	r19, X
 3e4:	23 2b       	or	r18, r19
 3e6:	09 f0       	breq	.+2      	; 0x3ea <Dispatch+0x3a>
 3e8:	8a c0       	rjmp	.+276    	; 0x4fe <Dispatch+0x14e>
 3ea:	ca 01       	movw	r24, r20
 3ec:	01 c0       	rjmp	.+2      	; 0x3f0 <Dispatch+0x40>
 3ee:	ca 01       	movw	r24, r20
 3f0:	fc 01       	movw	r30, r24
 3f2:	e0 5f       	subi	r30, 0xF0	; 240
 3f4:	fe 4f       	sbci	r31, 0xFE	; 254
 3f6:	20 81       	ld	r18, Z
 3f8:	31 81       	ldd	r19, Z+1	; 0x01
 3fa:	23 2b       	or	r18, r19
 3fc:	39 f5       	brne	.+78     	; 0x44c <Dispatch+0x9c>
 3fe:	fb 01       	movw	r30, r22
 400:	ee 0f       	add	r30, r30
 402:	ff 1f       	adc	r31, r31
 404:	ee 0f       	add	r30, r30
 406:	ff 1f       	adc	r31, r31
 408:	eb 5e       	subi	r30, 0xEB	; 235
 40a:	fd 4f       	sbci	r31, 0xFD	; 253
 40c:	22 81       	ldd	r18, Z+2	; 0x02
 40e:	33 81       	ldd	r19, Z+3	; 0x03
 410:	82 17       	cp	r24, r18
 412:	93 07       	cpc	r25, r19
 414:	49 f4       	brne	.+18     	; 0x428 <Dispatch+0x78>
 416:	fb 01       	movw	r30, r22
 418:	ee 0f       	add	r30, r30
 41a:	ff 1f       	adc	r31, r31
 41c:	ee 0f       	add	r30, r30
 41e:	ff 1f       	adc	r31, r31
 420:	eb 5e       	subi	r30, 0xEB	; 235
 422:	fd 4f       	sbci	r31, 0xFD	; 253
 424:	13 82       	std	Z+3, r1	; 0x03
 426:	12 82       	std	Z+2, r1	; 0x02
 428:	fc 01       	movw	r30, r24
 42a:	ee 5e       	subi	r30, 0xEE	; 238
 42c:	fe 4f       	sbci	r31, 0xFE	; 254
 42e:	80 81       	ld	r24, Z
 430:	91 81       	ldd	r25, Z+1	; 0x01
 432:	66 0f       	add	r22, r22
 434:	77 1f       	adc	r23, r23
 436:	66 0f       	add	r22, r22
 438:	77 1f       	adc	r23, r23
 43a:	db 01       	movw	r26, r22
 43c:	ab 5e       	subi	r26, 0xEB	; 235
 43e:	bd 4f       	sbci	r27, 0xFD	; 253
 440:	8d 93       	st	X+, r24
 442:	9c 93       	st	X, r25
 444:	11 82       	std	Z+1, r1	; 0x01
 446:	10 82       	st	Z, r1
 448:	fa 01       	movw	r30, r20
 44a:	49 c0       	rjmp	.+146    	; 0x4de <Dispatch+0x12e>
 44c:	fc 01       	movw	r30, r24
 44e:	ee 5e       	subi	r30, 0xEE	; 238
 450:	fe 4f       	sbci	r31, 0xFE	; 254
 452:	80 81       	ld	r24, Z
 454:	91 81       	ldd	r25, Z+1	; 0x01
 456:	00 97       	sbiw	r24, 0x00	; 0
 458:	09 f4       	brne	.+2      	; 0x45c <Dispatch+0xac>
 45a:	40 c0       	rjmp	.+128    	; 0x4dc <Dispatch+0x12c>
 45c:	fc 01       	movw	r30, r24
 45e:	e0 5f       	subi	r30, 0xF0	; 240
 460:	fe 4f       	sbci	r31, 0xFE	; 254
 462:	20 81       	ld	r18, Z
 464:	31 81       	ldd	r19, Z+1	; 0x01
 466:	23 2b       	or	r18, r19
 468:	69 f5       	brne	.+90     	; 0x4c4 <Dispatch+0x114>
 46a:	07 c0       	rjmp	.+14     	; 0x47a <Dispatch+0xca>
 46c:	fc 01       	movw	r30, r24
 46e:	e0 5f       	subi	r30, 0xF0	; 240
 470:	fe 4f       	sbci	r31, 0xFE	; 254
 472:	20 81       	ld	r18, Z
 474:	31 81       	ldd	r19, Z+1	; 0x01
 476:	23 2b       	or	r18, r19
 478:	29 f5       	brne	.+74     	; 0x4c4 <Dispatch+0x114>
 47a:	fb 01       	movw	r30, r22
 47c:	ee 0f       	add	r30, r30
 47e:	ff 1f       	adc	r31, r31
 480:	ee 0f       	add	r30, r30
 482:	ff 1f       	adc	r31, r31
 484:	eb 5e       	subi	r30, 0xEB	; 235
 486:	fd 4f       	sbci	r31, 0xFD	; 253
 488:	22 81       	ldd	r18, Z+2	; 0x02
 48a:	33 81       	ldd	r19, Z+3	; 0x03
 48c:	82 17       	cp	r24, r18
 48e:	93 07       	cpc	r25, r19
 490:	49 f4       	brne	.+18     	; 0x4a4 <Dispatch+0xf4>
 492:	66 0f       	add	r22, r22
 494:	77 1f       	adc	r23, r23
 496:	66 0f       	add	r22, r22
 498:	77 1f       	adc	r23, r23
 49a:	fb 01       	movw	r30, r22
 49c:	eb 5e       	subi	r30, 0xEB	; 235
 49e:	fd 4f       	sbci	r31, 0xFD	; 253
 4a0:	53 83       	std	Z+3, r21	; 0x03
 4a2:	42 83       	std	Z+2, r20	; 0x02
 4a4:	dc 01       	movw	r26, r24
 4a6:	ae 5e       	subi	r26, 0xEE	; 238
 4a8:	be 4f       	sbci	r27, 0xFE	; 254
 4aa:	2d 91       	ld	r18, X+
 4ac:	3c 91       	ld	r19, X
 4ae:	11 97       	sbiw	r26, 0x01	; 1
 4b0:	fa 01       	movw	r30, r20
 4b2:	ee 5e       	subi	r30, 0xEE	; 238
 4b4:	fe 4f       	sbci	r31, 0xFE	; 254
 4b6:	31 83       	std	Z+1, r19	; 0x01
 4b8:	20 83       	st	Z, r18
 4ba:	11 96       	adiw	r26, 0x01	; 1
 4bc:	1c 92       	st	X, r1
 4be:	1e 92       	st	-X, r1
 4c0:	fc 01       	movw	r30, r24
 4c2:	0d c0       	rjmp	.+26     	; 0x4de <Dispatch+0x12e>
 4c4:	fa 01       	movw	r30, r20
 4c6:	ee 5e       	subi	r30, 0xEE	; 238
 4c8:	fe 4f       	sbci	r31, 0xFE	; 254
 4ca:	40 81       	ld	r20, Z
 4cc:	51 81       	ldd	r21, Z+1	; 0x01
 4ce:	dc 01       	movw	r26, r24
 4d0:	ae 5e       	subi	r26, 0xEE	; 238
 4d2:	be 4f       	sbci	r27, 0xFE	; 254
 4d4:	8d 91       	ld	r24, X+
 4d6:	9c 91       	ld	r25, X
 4d8:	00 97       	sbiw	r24, 0x00	; 0
 4da:	41 f6       	brne	.-112    	; 0x46c <Dispatch+0xbc>
 4dc:	ff cf       	rjmp	.-2      	; 0x4dc <Dispatch+0x12c>
 4de:	f0 93 0e 02 	sts	0x020E, r31
 4e2:	e0 93 0d 02 	sts	0x020D, r30
 4e6:	80 81       	ld	r24, Z
 4e8:	91 81       	ldd	r25, Z+1	; 0x01
 4ea:	90 93 12 0b 	sts	0x0B12, r25
 4ee:	80 93 11 0b 	sts	0x0B11, r24
 4f2:	ee 5f       	subi	r30, 0xFE	; 254
 4f4:	fe 4f       	sbci	r31, 0xFE	; 254
 4f6:	83 e0       	ldi	r24, 0x03	; 3
 4f8:	80 83       	st	Z, r24
 4fa:	78 94       	sei
 4fc:	0f c0       	rjmp	.+30     	; 0x51c <Dispatch+0x16c>
 4fe:	fc 01       	movw	r30, r24
 500:	ee 5e       	subi	r30, 0xEE	; 238
 502:	fe 4f       	sbci	r31, 0xFE	; 254
 504:	80 81       	ld	r24, Z
 506:	91 81       	ldd	r25, Z+1	; 0x01
 508:	00 97       	sbiw	r24, 0x00	; 0
 50a:	09 f0       	breq	.+2      	; 0x50e <Dispatch+0x15e>
 50c:	66 cf       	rjmp	.-308    	; 0x3da <Dispatch+0x2a>
 50e:	6f 5f       	subi	r22, 0xFF	; 255
 510:	7f 4f       	sbci	r23, 0xFF	; 255
 512:	24 96       	adiw	r28, 0x04	; 4
 514:	6b 30       	cpi	r22, 0x0B	; 11
 516:	71 05       	cpc	r23, r1
 518:	09 f0       	breq	.+2      	; 0x51c <Dispatch+0x16c>
 51a:	50 cf       	rjmp	.-352    	; 0x3bc <Dispatch+0xc>
 51c:	df 91       	pop	r29
 51e:	cf 91       	pop	r28
 520:	08 95       	ret

00000522 <check_rqueue>:
 522:	cf 93       	push	r28
 524:	df 93       	push	r29
 526:	c0 91 0d 02 	lds	r28, 0x020D
 52a:	d0 91 0e 02 	lds	r29, 0x020E
 52e:	fe 01       	movw	r30, r28
 530:	e8 5f       	subi	r30, 0xF8	; 248
 532:	fe 4f       	sbci	r31, 0xFE	; 254
 534:	80 81       	ld	r24, Z
 536:	88 23       	and	r24, r24
 538:	59 f1       	breq	.+86     	; 0x590 <check_rqueue+0x6e>
 53a:	a5 e1       	ldi	r26, 0x15	; 21
 53c:	b2 e0       	ldi	r27, 0x02	; 2
 53e:	40 e0       	ldi	r20, 0x00	; 0
 540:	50 e0       	ldi	r21, 0x00	; 0
 542:	ef 01       	movw	r28, r30
 544:	8d 91       	ld	r24, X+
 546:	9c 91       	ld	r25, X
 548:	11 97       	sbiw	r26, 0x01	; 1
 54a:	00 97       	sbiw	r24, 0x00	; 0
 54c:	b1 f0       	breq	.+44     	; 0x57a <check_rqueue+0x58>
 54e:	fc 01       	movw	r30, r24
 550:	e0 5f       	subi	r30, 0xF0	; 240
 552:	fe 4f       	sbci	r31, 0xFE	; 254
 554:	20 81       	ld	r18, Z
 556:	31 81       	ldd	r19, Z+1	; 0x01
 558:	23 2b       	or	r18, r19
 55a:	41 f4       	brne	.+16     	; 0x56c <check_rqueue+0x4a>
 55c:	1c c0       	rjmp	.+56     	; 0x596 <check_rqueue+0x74>
 55e:	fc 01       	movw	r30, r24
 560:	e0 5f       	subi	r30, 0xF0	; 240
 562:	fe 4f       	sbci	r31, 0xFE	; 254
 564:	20 81       	ld	r18, Z
 566:	31 81       	ldd	r19, Z+1	; 0x01
 568:	23 2b       	or	r18, r19
 56a:	c1 f0       	breq	.+48     	; 0x59c <check_rqueue+0x7a>
 56c:	fc 01       	movw	r30, r24
 56e:	ee 5e       	subi	r30, 0xEE	; 238
 570:	fe 4f       	sbci	r31, 0xFE	; 254
 572:	80 81       	ld	r24, Z
 574:	91 81       	ldd	r25, Z+1	; 0x01
 576:	00 97       	sbiw	r24, 0x00	; 0
 578:	91 f7       	brne	.-28     	; 0x55e <check_rqueue+0x3c>
 57a:	4f 5f       	subi	r20, 0xFF	; 255
 57c:	5f 4f       	sbci	r21, 0xFF	; 255
 57e:	88 81       	ld	r24, Y
 580:	14 96       	adiw	r26, 0x04	; 4
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	48 17       	cp	r20, r24
 586:	59 07       	cpc	r21, r25
 588:	ec f2       	brlt	.-70     	; 0x544 <check_rqueue+0x22>
 58a:	80 e0       	ldi	r24, 0x00	; 0
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	08 c0       	rjmp	.+16     	; 0x5a0 <check_rqueue+0x7e>
 590:	80 e0       	ldi	r24, 0x00	; 0
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	05 c0       	rjmp	.+10     	; 0x5a0 <check_rqueue+0x7e>
 596:	81 e0       	ldi	r24, 0x01	; 1
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	02 c0       	rjmp	.+4      	; 0x5a0 <check_rqueue+0x7e>
 59c:	81 e0       	ldi	r24, 0x01	; 1
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	df 91       	pop	r29
 5a2:	cf 91       	pop	r28
 5a4:	08 95       	ret

000005a6 <preemption>:
 5a6:	bd df       	rcall	.-134    	; 0x522 <check_rqueue>
 5a8:	89 2b       	or	r24, r25
 5aa:	31 f1       	breq	.+76     	; 0x5f8 <preemption+0x52>
 5ac:	80 91 0d 02 	lds	r24, 0x020D
 5b0:	90 91 0e 02 	lds	r25, 0x020E
 5b4:	fc 01       	movw	r30, r24
 5b6:	ee 5f       	subi	r30, 0xFE	; 254
 5b8:	fe 4f       	sbci	r31, 0xFE	; 254
 5ba:	21 e0       	ldi	r18, 0x01	; 1
 5bc:	20 83       	st	Z, r18
 5be:	dc 01       	movw	r26, r24
 5c0:	a8 5f       	subi	r26, 0xF8	; 248
 5c2:	be 4f       	sbci	r27, 0xFE	; 254
 5c4:	ec 91       	ld	r30, X
 5c6:	f0 e0       	ldi	r31, 0x00	; 0
 5c8:	ee 0f       	add	r30, r30
 5ca:	ff 1f       	adc	r31, r31
 5cc:	ee 0f       	add	r30, r30
 5ce:	ff 1f       	adc	r31, r31
 5d0:	eb 5e       	subi	r30, 0xEB	; 235
 5d2:	fd 4f       	sbci	r31, 0xFD	; 253
 5d4:	20 81       	ld	r18, Z
 5d6:	31 81       	ldd	r19, Z+1	; 0x01
 5d8:	fc 01       	movw	r30, r24
 5da:	ee 5e       	subi	r30, 0xEE	; 238
 5dc:	fe 4f       	sbci	r31, 0xFE	; 254
 5de:	31 83       	std	Z+1, r19	; 0x01
 5e0:	20 83       	st	Z, r18
 5e2:	ec 91       	ld	r30, X
 5e4:	f0 e0       	ldi	r31, 0x00	; 0
 5e6:	ee 0f       	add	r30, r30
 5e8:	ff 1f       	adc	r31, r31
 5ea:	ee 0f       	add	r30, r30
 5ec:	ff 1f       	adc	r31, r31
 5ee:	eb 5e       	subi	r30, 0xEB	; 235
 5f0:	fd 4f       	sbci	r31, 0xFD	; 253
 5f2:	91 83       	std	Z+1, r25	; 0x01
 5f4:	80 83       	st	Z, r24
 5f6:	dc ce       	rjmp	.-584    	; 0x3b0 <Dispatch>
 5f8:	08 95       	ret

000005fa <set_timer>:
 5fa:	10 92 80 00 	sts	0x0080, r1
 5fe:	e1 e8       	ldi	r30, 0x81	; 129
 600:	f0 e0       	ldi	r31, 0x00	; 0
 602:	10 82       	st	Z, r1
 604:	80 81       	ld	r24, Z
 606:	88 60       	ori	r24, 0x08	; 8
 608:	80 83       	st	Z, r24
 60a:	80 81       	ld	r24, Z
 60c:	82 60       	ori	r24, 0x02	; 2
 60e:	80 83       	st	Z, r24
 610:	80 e2       	ldi	r24, 0x20	; 32
 612:	9e e4       	ldi	r25, 0x4E	; 78
 614:	90 93 89 00 	sts	0x0089, r25
 618:	80 93 88 00 	sts	0x0088, r24
 61c:	ef e6       	ldi	r30, 0x6F	; 111
 61e:	f0 e0       	ldi	r31, 0x00	; 0
 620:	80 81       	ld	r24, Z
 622:	82 60       	ori	r24, 0x02	; 2
 624:	80 83       	st	Z, r24
 626:	08 95       	ret

00000628 <OS_Init>:
 628:	81 e0       	ldi	r24, 0x01	; 1
 62a:	81 b9       	out	0x01, r24	; 1
 62c:	09 9a       	sbi	0x01, 1	; 1
 62e:	10 98       	cbi	0x02, 0	; 2
 630:	11 98       	cbi	0x02, 1	; 2
 632:	e3 df       	rcall	.-58     	; 0x5fa <set_timer>
 634:	10 92 08 02 	sts	0x0208, r1
 638:	10 92 07 02 	sts	0x0207, r1
 63c:	10 92 0a 02 	sts	0x020A, r1
 640:	10 92 09 02 	sts	0x0209, r1
 644:	10 92 0c 02 	sts	0x020C, r1
 648:	10 92 0b 02 	sts	0x020B, r1
 64c:	a1 e7       	ldi	r26, 0x71	; 113
 64e:	b2 e0       	ldi	r27, 0x02	; 2
 650:	20 e0       	ldi	r18, 0x00	; 0
 652:	30 e0       	ldi	r19, 0x00	; 0
 654:	44 e1       	ldi	r20, 0x14	; 20
 656:	51 e0       	ldi	r21, 0x01	; 1
 658:	fd 01       	movw	r30, r26
 65a:	ca 01       	movw	r24, r20
 65c:	11 92       	st	Z+, r1
 65e:	01 97       	sbiw	r24, 0x01	; 1
 660:	e9 f7       	brne	.-6      	; 0x65c <OS_Init+0x34>
 662:	24 9f       	mul	r18, r20
 664:	c0 01       	movw	r24, r0
 666:	25 9f       	mul	r18, r21
 668:	90 0d       	add	r25, r0
 66a:	34 9f       	mul	r19, r20
 66c:	90 0d       	add	r25, r0
 66e:	11 24       	eor	r1, r1
 670:	8f 58       	subi	r24, 0x8F	; 143
 672:	9d 4f       	sbci	r25, 0xFD	; 253
 674:	fc 01       	movw	r30, r24
 676:	ee 5f       	subi	r30, 0xFE	; 254
 678:	fe 4f       	sbci	r31, 0xFE	; 254
 67a:	10 82       	st	Z, r1
 67c:	38 96       	adiw	r30, 0x08	; 8
 67e:	31 83       	std	Z+1, r19	; 0x01
 680:	20 83       	st	Z, r18
 682:	ac 5e       	subi	r26, 0xEC	; 236
 684:	be 4f       	sbci	r27, 0xFE	; 254
 686:	38 96       	adiw	r30, 0x08	; 8
 688:	b1 83       	std	Z+1, r27	; 0x01
 68a:	a0 83       	st	Z, r26
 68c:	2f 5f       	subi	r18, 0xFF	; 255
 68e:	3f 4f       	sbci	r19, 0xFF	; 255
 690:	27 30       	cpi	r18, 0x07	; 7
 692:	31 05       	cpc	r19, r1
 694:	09 f7       	brne	.-62     	; 0x658 <OS_Init+0x30>
 696:	e1 e4       	ldi	r30, 0x41	; 65
 698:	f2 e0       	ldi	r31, 0x02	; 2
 69a:	80 e0       	ldi	r24, 0x00	; 0
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	2f ef       	ldi	r18, 0xFF	; 255
 6a0:	3f ef       	ldi	r19, 0xFF	; 255
 6a2:	dc 01       	movw	r26, r24
 6a4:	aa 0f       	add	r26, r26
 6a6:	bb 1f       	adc	r27, r27
 6a8:	af 59       	subi	r26, 0x9F	; 159
 6aa:	bd 4f       	sbci	r27, 0xFD	; 253
 6ac:	11 96       	adiw	r26, 0x01	; 1
 6ae:	3c 93       	st	X, r19
 6b0:	2e 93       	st	-X, r18
 6b2:	11 82       	std	Z+1, r1	; 0x01
 6b4:	10 82       	st	Z, r1
 6b6:	13 82       	std	Z+3, r1	; 0x03
 6b8:	12 82       	std	Z+2, r1	; 0x02
 6ba:	01 96       	adiw	r24, 0x01	; 1
 6bc:	34 96       	adiw	r30, 0x04	; 4
 6be:	88 30       	cpi	r24, 0x08	; 8
 6c0:	91 05       	cpc	r25, r1
 6c2:	79 f7       	brne	.-34     	; 0x6a2 <OS_Init+0x7a>
 6c4:	10 92 ff 0a 	sts	0x0AFF, r1
 6c8:	10 92 10 0b 	sts	0x0B10, r1
 6cc:	10 92 0f 0b 	sts	0x0B0F, r1
 6d0:	e1 e1       	ldi	r30, 0x11	; 17
 6d2:	f2 e0       	ldi	r31, 0x02	; 2
 6d4:	81 e7       	ldi	r24, 0x71	; 113
 6d6:	92 e0       	ldi	r25, 0x02	; 2
 6d8:	91 83       	std	Z+1, r25	; 0x01
 6da:	80 83       	st	Z, r24
 6dc:	8d ef       	ldi	r24, 0xFD	; 253
 6de:	99 e0       	ldi	r25, 0x09	; 9
 6e0:	93 83       	std	Z+3, r25	; 0x03
 6e2:	82 83       	std	Z+2, r24	; 0x02
 6e4:	08 95       	ret

000006e6 <OS_Start>:
 6e6:	bf 92       	push	r11
 6e8:	cf 92       	push	r12
 6ea:	df 92       	push	r13
 6ec:	ef 92       	push	r14
 6ee:	ff 92       	push	r15
 6f0:	0f 93       	push	r16
 6f2:	1f 93       	push	r17
 6f4:	cf 93       	push	r28
 6f6:	df 93       	push	r29
 6f8:	80 91 09 02 	lds	r24, 0x0209
 6fc:	90 91 0a 02 	lds	r25, 0x020A
 700:	89 2b       	or	r24, r25
 702:	09 f0       	breq	.+2      	; 0x706 <OS_Start+0x20>
 704:	1a c1       	rjmp	.+564    	; 0x93a <OS_Start+0x254>
 706:	80 91 07 02 	lds	r24, 0x0207
 70a:	90 91 08 02 	lds	r25, 0x0208
 70e:	89 2b       	or	r24, r25
 710:	09 f4       	brne	.+2      	; 0x714 <OS_Start+0x2e>
 712:	13 c1       	rjmp	.+550    	; 0x93a <OS_Start+0x254>
 714:	f8 94       	cli
 716:	81 e0       	ldi	r24, 0x01	; 1
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	90 93 0a 02 	sts	0x020A, r25
 71e:	80 93 09 02 	sts	0x0209, r24
 722:	46 de       	rcall	.-884    	; 0x3b0 <Dispatch>
 724:	bb 24       	eor	r11, r11
 726:	ba 94       	dec	r11
 728:	cc 24       	eor	r12, r12
 72a:	ca 94       	dec	r12
 72c:	dc 2c       	mov	r13, r12
 72e:	ff 24       	eor	r15, r15
 730:	f3 94       	inc	r15
 732:	68 94       	set
 734:	ee 24       	eor	r14, r14
 736:	e1 f8       	bld	r14, 1
 738:	01 e0       	ldi	r16, 0x01	; 1
 73a:	10 e0       	ldi	r17, 0x00	; 0
 73c:	c0 e0       	ldi	r28, 0x00	; 0
 73e:	d2 e0       	ldi	r29, 0x02	; 2
 740:	e0 91 0d 02 	lds	r30, 0x020D
 744:	f0 91 0e 02 	lds	r31, 0x020E
 748:	80 81       	ld	r24, Z
 74a:	91 81       	ldd	r25, Z+1	; 0x01
 74c:	90 93 12 0b 	sts	0x0B12, r25
 750:	80 93 11 0b 	sts	0x0B11, r24
 754:	e0 5f       	subi	r30, 0xF0	; 240
 756:	fe 4f       	sbci	r31, 0xFE	; 254
 758:	80 81       	ld	r24, Z
 75a:	91 81       	ldd	r25, Z+1	; 0x01
 75c:	89 2b       	or	r24, r25
 75e:	09 f0       	breq	.+2      	; 0x762 <OS_Start+0x7c>
 760:	ff cf       	rjmp	.-2      	; 0x760 <OS_Start+0x7a>
 762:	dc dc       	rcall	.-1608   	; 0x11c <CSwitch>
 764:	60 91 0d 02 	lds	r22, 0x020D
 768:	70 91 0e 02 	lds	r23, 0x020E
 76c:	80 91 11 0b 	lds	r24, 0x0B11
 770:	90 91 12 0b 	lds	r25, 0x0B12
 774:	fb 01       	movw	r30, r22
 776:	91 83       	std	Z+1, r25	; 0x01
 778:	80 83       	st	Z, r24
 77a:	eb 5f       	subi	r30, 0xFB	; 251
 77c:	fe 4f       	sbci	r31, 0xFE	; 254
 77e:	e0 81       	ld	r30, Z
 780:	8e 2f       	mov	r24, r30
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	fc 01       	movw	r30, r24
 786:	31 97       	sbiw	r30, 0x01	; 1
 788:	e9 30       	cpi	r30, 0x09	; 9
 78a:	f1 05       	cpc	r31, r1
 78c:	c8 f6       	brcc	.-78     	; 0x740 <OS_Start+0x5a>
 78e:	88 27       	eor	r24, r24
 790:	ee 58       	subi	r30, 0x8E	; 142
 792:	ff 4f       	sbci	r31, 0xFF	; 255
 794:	8f 4f       	sbci	r24, 0xFF	; 255
 796:	c2 c1       	rjmp	.+900    	; 0xb1c <__tablejump2__>
 798:	4a 81       	ldd	r20, Y+2	; 0x02
 79a:	5b 81       	ldd	r21, Y+3	; 0x03
 79c:	6c 81       	ldd	r22, Y+4	; 0x04
 79e:	88 81       	ld	r24, Y
 7a0:	99 81       	ldd	r25, Y+1	; 0x01
 7a2:	84 dd       	rcall	.-1272   	; 0x2ac <Kernel_Create_Task>
 7a4:	9e 83       	std	Y+6, r25	; 0x06
 7a6:	8d 83       	std	Y+5, r24	; 0x05
 7a8:	fe de       	rcall	.-516    	; 0x5a6 <preemption>
 7aa:	ca cf       	rjmp	.-108    	; 0x740 <OS_Start+0x5a>
 7ac:	fb 01       	movw	r30, r22
 7ae:	ee 5f       	subi	r30, 0xFE	; 254
 7b0:	fe 4f       	sbci	r31, 0xFE	; 254
 7b2:	f0 82       	st	Z, r15
 7b4:	fd dd       	rcall	.-1030   	; 0x3b0 <Dispatch>
 7b6:	c4 cf       	rjmp	.-120    	; 0x740 <OS_Start+0x5a>
 7b8:	fb 01       	movw	r30, r22
 7ba:	ee 5f       	subi	r30, 0xFE	; 254
 7bc:	fe 4f       	sbci	r31, 0xFE	; 254
 7be:	f0 82       	st	Z, r15
 7c0:	36 96       	adiw	r30, 0x06	; 6
 7c2:	80 81       	ld	r24, Z
 7c4:	90 e0       	ldi	r25, 0x00	; 0
 7c6:	88 0f       	add	r24, r24
 7c8:	99 1f       	adc	r25, r25
 7ca:	88 0f       	add	r24, r24
 7cc:	99 1f       	adc	r25, r25
 7ce:	8b 5e       	subi	r24, 0xEB	; 235
 7d0:	9d 4f       	sbci	r25, 0xFD	; 253
 7d2:	52 dd       	rcall	.-1372   	; 0x278 <enqueue>
 7d4:	ed dd       	rcall	.-1062   	; 0x3b0 <Dispatch>
 7d6:	b4 cf       	rjmp	.-152    	; 0x740 <OS_Start+0x5a>
 7d8:	fb 01       	movw	r30, r22
 7da:	ee 5f       	subi	r30, 0xFE	; 254
 7dc:	fe 4f       	sbci	r31, 0xFE	; 254
 7de:	f0 82       	st	Z, r15
 7e0:	3e 96       	adiw	r30, 0x0e	; 14
 7e2:	11 83       	std	Z+1, r17	; 0x01
 7e4:	00 83       	st	Z, r16
 7e6:	38 97       	sbiw	r30, 0x08	; 8
 7e8:	80 81       	ld	r24, Z
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	88 0f       	add	r24, r24
 7ee:	99 1f       	adc	r25, r25
 7f0:	88 0f       	add	r24, r24
 7f2:	99 1f       	adc	r25, r25
 7f4:	8b 5e       	subi	r24, 0xEB	; 235
 7f6:	9d 4f       	sbci	r25, 0xFD	; 253
 7f8:	3f dd       	rcall	.-1410   	; 0x278 <enqueue>
 7fa:	da dd       	rcall	.-1100   	; 0x3b0 <Dispatch>
 7fc:	a1 cf       	rjmp	.-190    	; 0x740 <OS_Start+0x5a>
 7fe:	d3 de       	rcall	.-602    	; 0x5a6 <preemption>
 800:	9f cf       	rjmp	.-194    	; 0x740 <OS_Start+0x5a>
 802:	fb 01       	movw	r30, r22
 804:	ee 5f       	subi	r30, 0xFE	; 254
 806:	fe 4f       	sbci	r31, 0xFE	; 254
 808:	10 82       	st	Z, r1
 80a:	81 e1       	ldi	r24, 0x11	; 17
 80c:	92 e0       	ldi	r25, 0x02	; 2
 80e:	34 dd       	rcall	.-1432   	; 0x278 <enqueue>
 810:	cf dd       	rcall	.-1122   	; 0x3b0 <Dispatch>
 812:	96 cf       	rjmp	.-212    	; 0x740 <OS_Start+0x5a>
 814:	fb 01       	movw	r30, r22
 816:	ee 5f       	subi	r30, 0xFE	; 254
 818:	fe 4f       	sbci	r31, 0xFE	; 254
 81a:	e0 82       	st	Z, r14
 81c:	80 91 0f 02 	lds	r24, 0x020F
 820:	90 91 10 02 	lds	r25, 0x0210
 824:	88 0f       	add	r24, r24
 826:	99 1f       	adc	r25, r25
 828:	88 0f       	add	r24, r24
 82a:	99 1f       	adc	r25, r25
 82c:	8f 5b       	subi	r24, 0xBF	; 191
 82e:	9d 4f       	sbci	r25, 0xFD	; 253
 830:	23 dd       	rcall	.-1466   	; 0x278 <enqueue>
 832:	be dd       	rcall	.-1156   	; 0x3b0 <Dispatch>
 834:	85 cf       	rjmp	.-246    	; 0x740 <OS_Start+0x5a>
 836:	e0 91 0f 02 	lds	r30, 0x020F
 83a:	f0 91 10 02 	lds	r31, 0x0210
 83e:	ee 0f       	add	r30, r30
 840:	ff 1f       	adc	r31, r31
 842:	ee 0f       	add	r30, r30
 844:	ff 1f       	adc	r31, r31
 846:	ef 5b       	subi	r30, 0xBF	; 191
 848:	fd 4f       	sbci	r31, 0xFD	; 253
 84a:	80 81       	ld	r24, Z
 84c:	91 81       	ldd	r25, Z+1	; 0x01
 84e:	89 2b       	or	r24, r25
 850:	09 f4       	brne	.+2      	; 0x854 <OS_Start+0x16e>
 852:	59 c0       	rjmp	.+178    	; 0x906 <OS_Start+0x220>
 854:	80 91 0f 02 	lds	r24, 0x020F
 858:	90 91 10 02 	lds	r25, 0x0210
 85c:	fc 01       	movw	r30, r24
 85e:	ee 0f       	add	r30, r30
 860:	ff 1f       	adc	r31, r31
 862:	ee 0f       	add	r30, r30
 864:	ff 1f       	adc	r31, r31
 866:	ef 5b       	subi	r30, 0xBF	; 191
 868:	fd 4f       	sbci	r31, 0xFD	; 253
 86a:	20 81       	ld	r18, Z
 86c:	31 81       	ldd	r19, Z+1	; 0x01
 86e:	21 15       	cp	r18, r1
 870:	31 05       	cpc	r19, r1
 872:	81 f0       	breq	.+32     	; 0x894 <OS_Start+0x1ae>
 874:	f9 01       	movw	r30, r18
 876:	ee 5e       	subi	r30, 0xEE	; 238
 878:	fe 4f       	sbci	r31, 0xFE	; 254
 87a:	40 81       	ld	r20, Z
 87c:	51 81       	ldd	r21, Z+1	; 0x01
 87e:	88 0f       	add	r24, r24
 880:	99 1f       	adc	r25, r25
 882:	88 0f       	add	r24, r24
 884:	99 1f       	adc	r25, r25
 886:	dc 01       	movw	r26, r24
 888:	af 5b       	subi	r26, 0xBF	; 191
 88a:	bd 4f       	sbci	r27, 0xFD	; 253
 88c:	4d 93       	st	X+, r20
 88e:	5c 93       	st	X, r21
 890:	11 82       	std	Z+1, r1	; 0x01
 892:	10 82       	st	Z, r1
 894:	e0 91 0f 02 	lds	r30, 0x020F
 898:	f0 91 10 02 	lds	r31, 0x0210
 89c:	d9 01       	movw	r26, r18
 89e:	a6 5f       	subi	r26, 0xF6	; 246
 8a0:	be 4f       	sbci	r27, 0xFE	; 254
 8a2:	8d 91       	ld	r24, X+
 8a4:	9c 91       	ld	r25, X
 8a6:	ee 0f       	add	r30, r30
 8a8:	ff 1f       	adc	r31, r31
 8aa:	ef 59       	subi	r30, 0x9F	; 159
 8ac:	fd 4f       	sbci	r31, 0xFD	; 253
 8ae:	91 83       	std	Z+1, r25	; 0x01
 8b0:	80 83       	st	Z, r24
 8b2:	fb 01       	movw	r30, r22
 8b4:	e8 5f       	subi	r30, 0xF8	; 248
 8b6:	fe 4f       	sbci	r31, 0xFE	; 254
 8b8:	90 81       	ld	r25, Z
 8ba:	f9 01       	movw	r30, r18
 8bc:	e8 5f       	subi	r30, 0xF8	; 248
 8be:	fe 4f       	sbci	r31, 0xFE	; 254
 8c0:	80 81       	ld	r24, Z
 8c2:	98 17       	cp	r25, r24
 8c4:	80 f4       	brcc	.+32     	; 0x8e6 <OS_Start+0x200>
 8c6:	fb 01       	movw	r30, r22
 8c8:	e7 5f       	subi	r30, 0xF7	; 247
 8ca:	fe 4f       	sbci	r31, 0xFE	; 254
 8cc:	90 81       	ld	r25, Z
 8ce:	f9 01       	movw	r30, r18
 8d0:	e7 5f       	subi	r30, 0xF7	; 247
 8d2:	fe 4f       	sbci	r31, 0xFE	; 254
 8d4:	80 83       	st	Z, r24
 8d6:	fb 01       	movw	r30, r22
 8d8:	e8 5f       	subi	r30, 0xF8	; 248
 8da:	fe 4f       	sbci	r31, 0xFE	; 254
 8dc:	80 81       	ld	r24, Z
 8de:	f9 01       	movw	r30, r18
 8e0:	e8 5f       	subi	r30, 0xF8	; 248
 8e2:	fe 4f       	sbci	r31, 0xFE	; 254
 8e4:	80 83       	st	Z, r24
 8e6:	f9 01       	movw	r30, r18
 8e8:	ee 5f       	subi	r30, 0xFE	; 254
 8ea:	fe 4f       	sbci	r31, 0xFE	; 254
 8ec:	f0 82       	st	Z, r15
 8ee:	36 96       	adiw	r30, 0x06	; 6
 8f0:	80 81       	ld	r24, Z
 8f2:	90 e0       	ldi	r25, 0x00	; 0
 8f4:	88 0f       	add	r24, r24
 8f6:	99 1f       	adc	r25, r25
 8f8:	88 0f       	add	r24, r24
 8fa:	99 1f       	adc	r25, r25
 8fc:	b9 01       	movw	r22, r18
 8fe:	8b 5e       	subi	r24, 0xEB	; 235
 900:	9d 4f       	sbci	r25, 0xFD	; 253
 902:	ba dc       	rcall	.-1676   	; 0x278 <enqueue>
 904:	0a c0       	rjmp	.+20     	; 0x91a <OS_Start+0x234>
 906:	e0 91 0f 02 	lds	r30, 0x020F
 90a:	f0 91 10 02 	lds	r31, 0x0210
 90e:	ee 0f       	add	r30, r30
 910:	ff 1f       	adc	r31, r31
 912:	ef 59       	subi	r30, 0x9F	; 159
 914:	fd 4f       	sbci	r31, 0xFD	; 253
 916:	d1 82       	std	Z+1, r13	; 0x01
 918:	c0 82       	st	Z, r12
 91a:	80 91 0d 02 	lds	r24, 0x020D
 91e:	90 91 0e 02 	lds	r25, 0x020E
 922:	fc 01       	movw	r30, r24
 924:	e7 5f       	subi	r30, 0xF7	; 247
 926:	fe 4f       	sbci	r31, 0xFE	; 254
 928:	20 81       	ld	r18, Z
 92a:	20 81       	ld	r18, Z
 92c:	dc 01       	movw	r26, r24
 92e:	a8 5f       	subi	r26, 0xF8	; 248
 930:	be 4f       	sbci	r27, 0xFE	; 254
 932:	2c 93       	st	X, r18
 934:	b0 82       	st	Z, r11
 936:	37 de       	rcall	.-914    	; 0x5a6 <preemption>
 938:	03 cf       	rjmp	.-506    	; 0x740 <OS_Start+0x5a>
 93a:	df 91       	pop	r29
 93c:	cf 91       	pop	r28
 93e:	1f 91       	pop	r17
 940:	0f 91       	pop	r16
 942:	ff 90       	pop	r15
 944:	ef 90       	pop	r14
 946:	df 90       	pop	r13
 948:	cf 90       	pop	r12
 94a:	bf 90       	pop	r11
 94c:	08 95       	ret

0000094e <Mutex_Lock>:
 94e:	fc 01       	movw	r30, r24
 950:	ee 0f       	add	r30, r30
 952:	ff 1f       	adc	r31, r31
 954:	ef 59       	subi	r30, 0x9F	; 159
 956:	fd 4f       	sbci	r31, 0xFD	; 253
 958:	20 81       	ld	r18, Z
 95a:	31 81       	ldd	r19, Z+1	; 0x01
 95c:	2f 3f       	cpi	r18, 0xFF	; 255
 95e:	3f 4f       	sbci	r19, 0xFF	; 255
 960:	81 f4       	brne	.+32     	; 0x982 <Mutex_Lock+0x34>
 962:	e0 91 0d 02 	lds	r30, 0x020D
 966:	f0 91 0e 02 	lds	r31, 0x020E
 96a:	e6 5f       	subi	r30, 0xF6	; 246
 96c:	fe 4f       	sbci	r31, 0xFE	; 254
 96e:	20 81       	ld	r18, Z
 970:	31 81       	ldd	r19, Z+1	; 0x01
 972:	88 0f       	add	r24, r24
 974:	99 1f       	adc	r25, r25
 976:	fc 01       	movw	r30, r24
 978:	ef 59       	subi	r30, 0x9F	; 159
 97a:	fd 4f       	sbci	r31, 0xFD	; 253
 97c:	31 83       	std	Z+1, r19	; 0x01
 97e:	20 83       	st	Z, r18
 980:	08 95       	ret
 982:	20 91 0d 02 	lds	r18, 0x020D
 986:	30 91 0e 02 	lds	r19, 0x020E
 98a:	f9 01       	movw	r30, r18
 98c:	eb 5f       	subi	r30, 0xFB	; 251
 98e:	fe 4f       	sbci	r31, 0xFE	; 254
 990:	47 e0       	ldi	r20, 0x07	; 7
 992:	40 83       	st	Z, r20
 994:	f8 94       	cli
 996:	33 96       	adiw	r30, 0x03	; 3
 998:	50 81       	ld	r21, Z
 99a:	fc 01       	movw	r30, r24
 99c:	ee 0f       	add	r30, r30
 99e:	ff 1f       	adc	r31, r31
 9a0:	ef 59       	subi	r30, 0x9F	; 159
 9a2:	fd 4f       	sbci	r31, 0xFD	; 253
 9a4:	a0 81       	ld	r26, Z
 9a6:	b1 81       	ldd	r27, Z+1	; 0x01
 9a8:	64 e1       	ldi	r22, 0x14	; 20
 9aa:	71 e0       	ldi	r23, 0x01	; 1
 9ac:	a6 9f       	mul	r26, r22
 9ae:	f0 01       	movw	r30, r0
 9b0:	a7 9f       	mul	r26, r23
 9b2:	f0 0d       	add	r31, r0
 9b4:	b6 9f       	mul	r27, r22
 9b6:	f0 0d       	add	r31, r0
 9b8:	11 24       	eor	r1, r1
 9ba:	e7 58       	subi	r30, 0x87	; 135
 9bc:	fc 4f       	sbci	r31, 0xFC	; 252
 9be:	40 81       	ld	r20, Z
 9c0:	54 17       	cp	r21, r20
 9c2:	18 f5       	brcc	.+70     	; 0xa0a <Mutex_Lock+0xbc>
 9c4:	fc 01       	movw	r30, r24
 9c6:	ee 0f       	add	r30, r30
 9c8:	ff 1f       	adc	r31, r31
 9ca:	ef 59       	subi	r30, 0x9F	; 159
 9cc:	fd 4f       	sbci	r31, 0xFD	; 253
 9ce:	60 81       	ld	r22, Z
 9d0:	71 81       	ldd	r23, Z+1	; 0x01
 9d2:	44 e1       	ldi	r20, 0x14	; 20
 9d4:	51 e0       	ldi	r21, 0x01	; 1
 9d6:	64 9f       	mul	r22, r20
 9d8:	d0 01       	movw	r26, r0
 9da:	65 9f       	mul	r22, r21
 9dc:	b0 0d       	add	r27, r0
 9de:	74 9f       	mul	r23, r20
 9e0:	b0 0d       	add	r27, r0
 9e2:	11 24       	eor	r1, r1
 9e4:	a6 58       	subi	r26, 0x86	; 134
 9e6:	bc 4f       	sbci	r27, 0xFC	; 252
 9e8:	6c 91       	ld	r22, X
 9ea:	60 81       	ld	r22, Z
 9ec:	71 81       	ldd	r23, Z+1	; 0x01
 9ee:	f9 01       	movw	r30, r18
 9f0:	e8 5f       	subi	r30, 0xF8	; 248
 9f2:	fe 4f       	sbci	r31, 0xFE	; 254
 9f4:	20 81       	ld	r18, Z
 9f6:	64 9f       	mul	r22, r20
 9f8:	f0 01       	movw	r30, r0
 9fa:	65 9f       	mul	r22, r21
 9fc:	f0 0d       	add	r31, r0
 9fe:	74 9f       	mul	r23, r20
 a00:	f0 0d       	add	r31, r0
 a02:	11 24       	eor	r1, r1
 a04:	e7 58       	subi	r30, 0x87	; 135
 a06:	fc 4f       	sbci	r31, 0xFC	; 252
 a08:	20 83       	st	Z, r18
 a0a:	90 93 10 02 	sts	0x0210, r25
 a0e:	80 93 0f 02 	sts	0x020F, r24
 a12:	db cb       	rjmp	.-2122   	; 0x1ca <Enter_Kernel>
 a14:	08 95       	ret

00000a16 <Mutex_Unlock>:
 a16:	fc 01       	movw	r30, r24
 a18:	ee 0f       	add	r30, r30
 a1a:	ff 1f       	adc	r31, r31
 a1c:	ef 59       	subi	r30, 0x9F	; 159
 a1e:	fd 4f       	sbci	r31, 0xFD	; 253
 a20:	60 81       	ld	r22, Z
 a22:	71 81       	ldd	r23, Z+1	; 0x01
 a24:	20 91 0d 02 	lds	r18, 0x020D
 a28:	30 91 0e 02 	lds	r19, 0x020E
 a2c:	f9 01       	movw	r30, r18
 a2e:	e6 5f       	subi	r30, 0xF6	; 246
 a30:	fe 4f       	sbci	r31, 0xFE	; 254
 a32:	40 81       	ld	r20, Z
 a34:	51 81       	ldd	r21, Z+1	; 0x01
 a36:	64 17       	cp	r22, r20
 a38:	75 07       	cpc	r23, r21
 a3a:	51 f4       	brne	.+20     	; 0xa50 <Mutex_Unlock+0x3a>
 a3c:	f8 94       	cli
 a3e:	35 97       	sbiw	r30, 0x05	; 5
 a40:	28 e0       	ldi	r18, 0x08	; 8
 a42:	20 83       	st	Z, r18
 a44:	90 93 10 02 	sts	0x0210, r25
 a48:	80 93 0f 02 	sts	0x020F, r24
 a4c:	be cb       	rjmp	.-2180   	; 0x1ca <Enter_Kernel>
 a4e:	08 95       	ret
 a50:	ff cf       	rjmp	.-2      	; 0xa50 <Mutex_Unlock+0x3a>

00000a52 <Ping>:
 a52:	80 e0       	ldi	r24, 0x00	; 0
 a54:	90 e0       	ldi	r25, 0x00	; 0
 a56:	7b df       	rcall	.-266    	; 0x94e <Mutex_Lock>
 a58:	10 9a       	sbi	0x02, 0	; 2
 a5a:	80 e0       	ldi	r24, 0x00	; 0
 a5c:	90 e0       	ldi	r25, 0x00	; 0
 a5e:	db df       	rcall	.-74     	; 0xa16 <Mutex_Unlock>
 a60:	f8 cf       	rjmp	.-16     	; 0xa52 <Ping>

00000a62 <Task_Create>:
 a62:	cf 93       	push	r28
 a64:	df 93       	push	r29
 a66:	20 91 09 02 	lds	r18, 0x0209
 a6a:	30 91 0a 02 	lds	r19, 0x020A
 a6e:	23 2b       	or	r18, r19
 a70:	a1 f0       	breq	.+40     	; 0xa9a <Task_Create+0x38>
 a72:	f8 94       	cli
 a74:	c0 e0       	ldi	r28, 0x00	; 0
 a76:	d2 e0       	ldi	r29, 0x02	; 2
 a78:	99 83       	std	Y+1, r25	; 0x01
 a7a:	88 83       	st	Y, r24
 a7c:	5b 83       	std	Y+3, r21	; 0x03
 a7e:	4a 83       	std	Y+2, r20	; 0x02
 a80:	6c 83       	std	Y+4, r22	; 0x04
 a82:	e0 91 0d 02 	lds	r30, 0x020D
 a86:	f0 91 0e 02 	lds	r31, 0x020E
 a8a:	eb 5f       	subi	r30, 0xFB	; 251
 a8c:	fe 4f       	sbci	r31, 0xFE	; 254
 a8e:	81 e0       	ldi	r24, 0x01	; 1
 a90:	80 83       	st	Z, r24
 a92:	9b db       	rcall	.-2250   	; 0x1ca <Enter_Kernel>
 a94:	8d 81       	ldd	r24, Y+5	; 0x05
 a96:	9e 81       	ldd	r25, Y+6	; 0x06
 a98:	01 c0       	rjmp	.+2      	; 0xa9c <Task_Create+0x3a>
 a9a:	08 dc       	rcall	.-2032   	; 0x2ac <Kernel_Create_Task>
 a9c:	df 91       	pop	r29
 a9e:	cf 91       	pop	r28
 aa0:	08 95       	ret

00000aa2 <a_main>:
 aa2:	40 e0       	ldi	r20, 0x00	; 0
 aa4:	50 e0       	ldi	r21, 0x00	; 0
 aa6:	60 e0       	ldi	r22, 0x00	; 0
 aa8:	89 e2       	ldi	r24, 0x29	; 41
 aaa:	95 e0       	ldi	r25, 0x05	; 5
 aac:	da df       	rcall	.-76     	; 0xa62 <Task_Create>
 aae:	40 e0       	ldi	r20, 0x00	; 0
 ab0:	50 e0       	ldi	r21, 0x00	; 0
 ab2:	60 e0       	ldi	r22, 0x00	; 0
 ab4:	80 e7       	ldi	r24, 0x70	; 112
 ab6:	95 e0       	ldi	r25, 0x05	; 5
 ab8:	d4 df       	rcall	.-88     	; 0xa62 <Task_Create>
 aba:	69 cc       	rjmp	.-1838   	; 0x38e <Task_Terminate>
 abc:	08 95       	ret

00000abe <Task_Yield>:
 abe:	80 91 09 02 	lds	r24, 0x0209
 ac2:	90 91 0a 02 	lds	r25, 0x020A
 ac6:	89 2b       	or	r24, r25
 ac8:	51 f0       	breq	.+20     	; 0xade <Task_Yield+0x20>
 aca:	f8 94       	cli
 acc:	e0 91 0d 02 	lds	r30, 0x020D
 ad0:	f0 91 0e 02 	lds	r31, 0x020E
 ad4:	eb 5f       	subi	r30, 0xFB	; 251
 ad6:	fe 4f       	sbci	r31, 0xFE	; 254
 ad8:	85 e0       	ldi	r24, 0x05	; 5
 ada:	80 83       	st	Z, r24
 adc:	76 cb       	rjmp	.-2324   	; 0x1ca <Enter_Kernel>
 ade:	08 95       	ret

00000ae0 <Pong>:
 ae0:	80 e0       	ldi	r24, 0x00	; 0
 ae2:	90 e0       	ldi	r25, 0x00	; 0
 ae4:	34 df       	rcall	.-408    	; 0x94e <Mutex_Lock>
 ae6:	10 98       	cbi	0x02, 0	; 2
 ae8:	80 e0       	ldi	r24, 0x00	; 0
 aea:	90 e0       	ldi	r25, 0x00	; 0
 aec:	94 df       	rcall	.-216    	; 0xa16 <Mutex_Unlock>
 aee:	e7 df       	rcall	.-50     	; 0xabe <Task_Yield>
 af0:	f7 cf       	rjmp	.-18     	; 0xae0 <Pong>

00000af2 <__vector_17>:
	 Task_Create(Pong,0,0);
	 Task_Terminate();
 }

ISR(TIMER1_COMPA_vect)
{
 af2:	1f 92       	push	r1
 af4:	0f 92       	push	r0
 af6:	0f b6       	in	r0, 0x3f	; 63
 af8:	0f 92       	push	r0
 afa:	11 24       	eor	r1, r1
	if (preempt==1) {
		
		Task_Yield();
	}*/
	
}
 afc:	0f 90       	pop	r0
 afe:	0f be       	out	0x3f, r0	; 63
 b00:	0f 90       	pop	r0
 b02:	1f 90       	pop	r1
 b04:	18 95       	reti

00000b06 <main>:

int main() 
{
   OS_Init();
 b06:	90 dd       	rcall	.-1248   	; 0x628 <OS_Init>
   Task_Create( a_main , 0, 0 );
 b08:	40 e0       	ldi	r20, 0x00	; 0
 b0a:	50 e0       	ldi	r21, 0x00	; 0
 b0c:	60 e0       	ldi	r22, 0x00	; 0
 b0e:	81 e5       	ldi	r24, 0x51	; 81
 b10:	95 e0       	ldi	r25, 0x05	; 5
 b12:	a7 df       	rcall	.-178    	; 0xa62 <Task_Create>
   OS_Start();
 b14:	e8 dd       	rcall	.-1072   	; 0x6e6 <OS_Start>
}
 b16:	80 e0       	ldi	r24, 0x00	; 0
 b18:	90 e0       	ldi	r25, 0x00	; 0
 b1a:	08 95       	ret

00000b1c <__tablejump2__>:
 b1c:	ee 0f       	add	r30, r30
 b1e:	ff 1f       	adc	r31, r31
 b20:	88 1f       	adc	r24, r24
 b22:	8b bf       	out	0x3b, r24	; 59
 b24:	07 90       	elpm	r0, Z+
 b26:	f6 91       	elpm	r31, Z
 b28:	e0 2d       	mov	r30, r0
 b2a:	19 94       	eijmp

00000b2c <_exit>:
 b2c:	f8 94       	cli

00000b2e <__stop_program>:
 b2e:	ff cf       	rjmp	.-2      	; 0xb2e <__stop_program>
