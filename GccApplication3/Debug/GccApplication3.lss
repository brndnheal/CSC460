
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000ade  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a6a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000008db  00800200  00800200  00000ade  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ade  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b10  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000b50  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bef  00000000  00000000  00000c38  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000003a9  00000000  00000000  00001827  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008b0  00000000  00000000  00001bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c8  00000000  00000000  00002480  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000454  00000000  00000000  00002648  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a30  00000000  00000000  00002a9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  000034cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	78 c0       	rjmp	.+240    	; 0xf2 <__ctors_end>
   2:	00 00       	nop
   4:	88 c0       	rjmp	.+272    	; 0x116 <__bad_interrupt>
   6:	00 00       	nop
   8:	86 c0       	rjmp	.+268    	; 0x116 <__bad_interrupt>
   a:	00 00       	nop
   c:	84 c0       	rjmp	.+264    	; 0x116 <__bad_interrupt>
   e:	00 00       	nop
  10:	82 c0       	rjmp	.+260    	; 0x116 <__bad_interrupt>
  12:	00 00       	nop
  14:	80 c0       	rjmp	.+256    	; 0x116 <__bad_interrupt>
  16:	00 00       	nop
  18:	7e c0       	rjmp	.+252    	; 0x116 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	7c c0       	rjmp	.+248    	; 0x116 <__bad_interrupt>
  1e:	00 00       	nop
  20:	7a c0       	rjmp	.+244    	; 0x116 <__bad_interrupt>
  22:	00 00       	nop
  24:	78 c0       	rjmp	.+240    	; 0x116 <__bad_interrupt>
  26:	00 00       	nop
  28:	76 c0       	rjmp	.+236    	; 0x116 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	74 c0       	rjmp	.+232    	; 0x116 <__bad_interrupt>
  2e:	00 00       	nop
  30:	72 c0       	rjmp	.+228    	; 0x116 <__bad_interrupt>
  32:	00 00       	nop
  34:	70 c0       	rjmp	.+224    	; 0x116 <__bad_interrupt>
  36:	00 00       	nop
  38:	6e c0       	rjmp	.+220    	; 0x116 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	6c c0       	rjmp	.+216    	; 0x116 <__bad_interrupt>
  3e:	00 00       	nop
  40:	6a c0       	rjmp	.+212    	; 0x116 <__bad_interrupt>
  42:	00 00       	nop
  44:	68 c0       	rjmp	.+208    	; 0x116 <__bad_interrupt>
  46:	00 00       	nop
  48:	66 c0       	rjmp	.+204    	; 0x116 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	64 c0       	rjmp	.+200    	; 0x116 <__bad_interrupt>
  4e:	00 00       	nop
  50:	62 c0       	rjmp	.+196    	; 0x116 <__bad_interrupt>
  52:	00 00       	nop
  54:	60 c0       	rjmp	.+192    	; 0x116 <__bad_interrupt>
  56:	00 00       	nop
  58:	5e c0       	rjmp	.+188    	; 0x116 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	5c c0       	rjmp	.+184    	; 0x116 <__bad_interrupt>
  5e:	00 00       	nop
  60:	5a c0       	rjmp	.+180    	; 0x116 <__bad_interrupt>
  62:	00 00       	nop
  64:	58 c0       	rjmp	.+176    	; 0x116 <__bad_interrupt>
  66:	00 00       	nop
  68:	56 c0       	rjmp	.+172    	; 0x116 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	54 c0       	rjmp	.+168    	; 0x116 <__bad_interrupt>
  6e:	00 00       	nop
  70:	52 c0       	rjmp	.+164    	; 0x116 <__bad_interrupt>
  72:	00 00       	nop
  74:	50 c0       	rjmp	.+160    	; 0x116 <__bad_interrupt>
  76:	00 00       	nop
  78:	4e c0       	rjmp	.+156    	; 0x116 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	4c c0       	rjmp	.+152    	; 0x116 <__bad_interrupt>
  7e:	00 00       	nop
  80:	4a c0       	rjmp	.+148    	; 0x116 <__bad_interrupt>
  82:	00 00       	nop
  84:	48 c0       	rjmp	.+144    	; 0x116 <__bad_interrupt>
  86:	00 00       	nop
  88:	46 c0       	rjmp	.+140    	; 0x116 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	44 c0       	rjmp	.+136    	; 0x116 <__bad_interrupt>
  8e:	00 00       	nop
  90:	42 c0       	rjmp	.+132    	; 0x116 <__bad_interrupt>
  92:	00 00       	nop
  94:	40 c0       	rjmp	.+128    	; 0x116 <__bad_interrupt>
  96:	00 00       	nop
  98:	3e c0       	rjmp	.+124    	; 0x116 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	3c c0       	rjmp	.+120    	; 0x116 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	3a c0       	rjmp	.+116    	; 0x116 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	38 c0       	rjmp	.+112    	; 0x116 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	36 c0       	rjmp	.+108    	; 0x116 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	34 c0       	rjmp	.+104    	; 0x116 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	32 c0       	rjmp	.+100    	; 0x116 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	30 c0       	rjmp	.+96     	; 0x116 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	2e c0       	rjmp	.+92     	; 0x116 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2c c0       	rjmp	.+88     	; 0x116 <__bad_interrupt>
  be:	00 00       	nop
  c0:	2a c0       	rjmp	.+84     	; 0x116 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	28 c0       	rjmp	.+80     	; 0x116 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	26 c0       	rjmp	.+76     	; 0x116 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	24 c0       	rjmp	.+72     	; 0x116 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	22 c0       	rjmp	.+68     	; 0x116 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	20 c0       	rjmp	.+64     	; 0x116 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	1e c0       	rjmp	.+60     	; 0x116 <__bad_interrupt>
  da:	00 00       	nop
  dc:	1c c0       	rjmp	.+56     	; 0x116 <__bad_interrupt>
  de:	00 00       	nop
  e0:	1a c0       	rjmp	.+52     	; 0x116 <__bad_interrupt>
  e2:	00 00       	nop
  e4:	95 03       	fmuls	r17, r21
  e6:	a1 03       	fmuls	r18, r17
  e8:	15 04       	cpc	r1, r5
  ea:	2f 04       	cpc	r2, r15
  ec:	db 03       	fmulsu	r21, r19
  ee:	a6 03       	fmuls	r18, r22
  f0:	13 04       	cpc	r1, r3

000000f2 <__ctors_end>:
  f2:	11 24       	eor	r1, r1
  f4:	1f be       	out	0x3f, r1	; 63
  f6:	cf ef       	ldi	r28, 0xFF	; 255
  f8:	d1 e2       	ldi	r29, 0x21	; 33
  fa:	de bf       	out	0x3e, r29	; 62
  fc:	cd bf       	out	0x3d, r28	; 61
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0c bf       	out	0x3c, r16	; 60

00000102 <__do_clear_bss>:
 102:	2a e0       	ldi	r18, 0x0A	; 10
 104:	a0 e0       	ldi	r26, 0x00	; 0
 106:	b2 e0       	ldi	r27, 0x02	; 2
 108:	01 c0       	rjmp	.+2      	; 0x10c <.do_clear_bss_start>

0000010a <.do_clear_bss_loop>:
 10a:	1d 92       	st	X+, r1

0000010c <.do_clear_bss_start>:
 10c:	ab 3d       	cpi	r26, 0xDB	; 219
 10e:	b2 07       	cpc	r27, r18
 110:	e1 f7       	brne	.-8      	; 0x10a <.do_clear_bss_loop>
 112:	96 d4       	rcall	.+2348   	; 0xa40 <main>
 114:	a8 c4       	rjmp	.+2384   	; 0xa66 <_exit>

00000116 <__bad_interrupt>:
 116:	74 cf       	rjmp	.-280    	; 0x0 <__vectors>

00000118 <CSwitch>:
Exit_Kernel:
        /* 
          * This is the "top" half of CSwitch(), generally called by the kernel.
          * Assume I = 0, i.e., all interrupts are disabled.
          */
        SAVECTX
 118:	0f 92       	push	r0
 11a:	1f 92       	push	r1
 11c:	2f 92       	push	r2
 11e:	3f 92       	push	r3
 120:	4f 92       	push	r4
 122:	5f 92       	push	r5
 124:	6f 92       	push	r6
 126:	7f 92       	push	r7
 128:	8f 92       	push	r8
 12a:	9f 92       	push	r9
 12c:	af 92       	push	r10
 12e:	bf 92       	push	r11
 130:	cf 92       	push	r12
 132:	df 92       	push	r13
 134:	ef 92       	push	r14
 136:	ff 92       	push	r15
 138:	0f 93       	push	r16
 13a:	1f 93       	push	r17
 13c:	2f 93       	push	r18
 13e:	3f 93       	push	r19
 140:	4f 93       	push	r20
 142:	5f 93       	push	r21
 144:	6f 93       	push	r22
 146:	7f 93       	push	r23
 148:	8f 93       	push	r24
 14a:	9f 93       	push	r25
 14c:	af 93       	push	r26
 14e:	bf 93       	push	r27
 150:	cf 93       	push	r28
 152:	df 93       	push	r29
 154:	ef 93       	push	r30
 156:	ff 93       	push	r31
 158:	0c b7       	in	r16, 0x3c	; 60
 15a:	0f 93       	push	r16
 15c:	ff b7       	in	r31, 0x3f	; 63
 15e:	ff 93       	push	r31
        /* 
          * Now, we have saved the kernel's context.
          * Save the current H/W stack pointer into KernelSp.
          */
        in   r30, SPL
 160:	ed b7       	in	r30, 0x3d	; 61
        in   r31, SPH
 162:	fe b7       	in	r31, 0x3e	; 62
		  in   r16, EIND
 164:	0c b7       	in	r16, 0x3c	; 60
        sts  KernelSp, r30
 166:	e0 93 d9 0a 	sts	0x0AD9, r30
        sts  KernelSp+1, r31
 16a:	f0 93 da 0a 	sts	0x0ADA, r31

        /*
          * We are now ready to restore Cp's context, i.e.,
          * switching the H/W stack pointer to CurrentSp.
          */ 
        lds  r30, CurrentSp
 16e:	e0 91 d7 0a 	lds	r30, 0x0AD7
        lds  r31, CurrentSp+1
 172:	f0 91 d8 0a 	lds	r31, 0x0AD8
        out  SPL, r30
 176:	ed bf       	out	0x3d, r30	; 61
        out  SPH, r31
 178:	fe bf       	out	0x3e, r31	; 62
		  out  EIND, r16
 17a:	0c bf       	out	0x3c, r16	; 60
        /*
          * We are now executing in Cp's stack.
          * Note: at the bottom of the Cp's context is its return address.
          */
        RESTORECTX
 17c:	ff 91       	pop	r31
 17e:	ff bf       	out	0x3f, r31	; 63
 180:	0f 91       	pop	r16
 182:	0c bf       	out	0x3c, r16	; 60
 184:	ff 91       	pop	r31
 186:	ef 91       	pop	r30
 188:	df 91       	pop	r29
 18a:	cf 91       	pop	r28
 18c:	bf 91       	pop	r27
 18e:	af 91       	pop	r26
 190:	9f 91       	pop	r25
 192:	8f 91       	pop	r24
 194:	7f 91       	pop	r23
 196:	6f 91       	pop	r22
 198:	5f 91       	pop	r21
 19a:	4f 91       	pop	r20
 19c:	3f 91       	pop	r19
 19e:	2f 91       	pop	r18
 1a0:	1f 91       	pop	r17
 1a2:	0f 91       	pop	r16
 1a4:	ff 90       	pop	r15
 1a6:	ef 90       	pop	r14
 1a8:	df 90       	pop	r13
 1aa:	cf 90       	pop	r12
 1ac:	bf 90       	pop	r11
 1ae:	af 90       	pop	r10
 1b0:	9f 90       	pop	r9
 1b2:	8f 90       	pop	r8
 1b4:	7f 90       	pop	r7
 1b6:	6f 90       	pop	r6
 1b8:	5f 90       	pop	r5
 1ba:	4f 90       	pop	r4
 1bc:	3f 90       	pop	r3
 1be:	2f 90       	pop	r2
 1c0:	1f 90       	pop	r1
 1c2:	0f 90       	pop	r0
        reti         /* re-enable all global interrupts */
 1c4:	18 95       	reti

000001c6 <Enter_Kernel>:
Enter_Kernel:   
        /*
          * This is the "bottom" half of CSwitch(). We are still executing in
          * Cp's context.
          */
        SAVECTX
 1c6:	0f 92       	push	r0
 1c8:	1f 92       	push	r1
 1ca:	2f 92       	push	r2
 1cc:	3f 92       	push	r3
 1ce:	4f 92       	push	r4
 1d0:	5f 92       	push	r5
 1d2:	6f 92       	push	r6
 1d4:	7f 92       	push	r7
 1d6:	8f 92       	push	r8
 1d8:	9f 92       	push	r9
 1da:	af 92       	push	r10
 1dc:	bf 92       	push	r11
 1de:	cf 92       	push	r12
 1e0:	df 92       	push	r13
 1e2:	ef 92       	push	r14
 1e4:	ff 92       	push	r15
 1e6:	0f 93       	push	r16
 1e8:	1f 93       	push	r17
 1ea:	2f 93       	push	r18
 1ec:	3f 93       	push	r19
 1ee:	4f 93       	push	r20
 1f0:	5f 93       	push	r21
 1f2:	6f 93       	push	r22
 1f4:	7f 93       	push	r23
 1f6:	8f 93       	push	r24
 1f8:	9f 93       	push	r25
 1fa:	af 93       	push	r26
 1fc:	bf 93       	push	r27
 1fe:	cf 93       	push	r28
 200:	df 93       	push	r29
 202:	ef 93       	push	r30
 204:	ff 93       	push	r31
 206:	0c b7       	in	r16, 0x3c	; 60
 208:	0f 93       	push	r16
 20a:	ff b7       	in	r31, 0x3f	; 63
 20c:	ff 93       	push	r31
        /* 
          * Now, we have saved the Cp's context.
          * Save the current H/W stack pointer into CurrentSp.
          */
        in   r30, SPL
 20e:	ed b7       	in	r30, 0x3d	; 61
        in   r31, SPH
 210:	fe b7       	in	r31, 0x3e	; 62
		  in   r16, EIND
 212:	0c b7       	in	r16, 0x3c	; 60
        sts  CurrentSp, r30
 214:	e0 93 d7 0a 	sts	0x0AD7, r30
        sts  CurrentSp+1, r31
 218:	f0 93 d8 0a 	sts	0x0AD8, r31
        /*
          * We are now ready to restore kernel's context, i.e.,
          * switching the H/W stack pointer back to KernelSp.
          */ 
        lds  r30, KernelSp
 21c:	e0 91 d9 0a 	lds	r30, 0x0AD9
        lds  r31, KernelSp+1
 220:	f0 91 da 0a 	lds	r31, 0x0ADA
        out  SPL, r30
 224:	ed bf       	out	0x3d, r30	; 61
        out  SPH, r31
 226:	fe bf       	out	0x3e, r31	; 62
		  out  EIND, r16
 228:	0c bf       	out	0x3c, r16	; 60
        /*
          * We are now executing in kernel's stack.
          */
       RESTORECTX
 22a:	ff 91       	pop	r31
 22c:	ff bf       	out	0x3f, r31	; 63
 22e:	0f 91       	pop	r16
 230:	0c bf       	out	0x3c, r16	; 60
 232:	ff 91       	pop	r31
 234:	ef 91       	pop	r30
 236:	df 91       	pop	r29
 238:	cf 91       	pop	r28
 23a:	bf 91       	pop	r27
 23c:	af 91       	pop	r26
 23e:	9f 91       	pop	r25
 240:	8f 91       	pop	r24
 242:	7f 91       	pop	r23
 244:	6f 91       	pop	r22
 246:	5f 91       	pop	r21
 248:	4f 91       	pop	r20
 24a:	3f 91       	pop	r19
 24c:	2f 91       	pop	r18
 24e:	1f 91       	pop	r17
 250:	0f 91       	pop	r16
 252:	ff 90       	pop	r15
 254:	ef 90       	pop	r14
 256:	df 90       	pop	r13
 258:	cf 90       	pop	r12
 25a:	bf 90       	pop	r11
 25c:	af 90       	pop	r10
 25e:	9f 90       	pop	r9
 260:	8f 90       	pop	r8
 262:	7f 90       	pop	r7
 264:	6f 90       	pop	r6
 266:	5f 90       	pop	r5
 268:	4f 90       	pop	r4
 26a:	3f 90       	pop	r3
 26c:	2f 90       	pop	r2
 26e:	1f 90       	pop	r1
 270:	0f 90       	pop	r0
        /* 
          * We are ready to return to the caller of CSwitch() (or Exit_Kernel()).
          * Note: We should NOT re-enable interrupts while kernel is running.
          *         Therefore, we use "ret", and not "reti".
          */
       ret
 272:	08 95       	ret

00000274 <Kernel_Create_Task>:
		Enter_Kernel();
	}
}  
void Task_Resume( PID p ){
	int i;
	for(i=0;i<11;i++){
 274:	0f 93       	push	r16
 276:	1f 93       	push	r17
 278:	cf 93       	push	r28
 27a:	df 93       	push	r29
 27c:	20 91 07 02 	lds	r18, 0x0207
 280:	30 91 08 02 	lds	r19, 0x0208
 284:	28 30       	cpi	r18, 0x08	; 8
 286:	31 05       	cpc	r19, r1
 288:	09 f4       	brne	.+2      	; 0x28c <Kernel_Create_Task+0x18>
 28a:	88 c0       	rjmp	.+272    	; 0x39c <Kernel_Create_Task+0x128>
 28c:	e0 91 0f 02 	lds	r30, 0x020F
 290:	f0 91 10 02 	lds	r31, 0x0210
 294:	30 97       	sbiw	r30, 0x00	; 0
 296:	69 f0       	breq	.+26     	; 0x2b2 <Kernel_Create_Task+0x3e>
 298:	df 01       	movw	r26, r30
 29a:	af 5e       	subi	r26, 0xEF	; 239
 29c:	be 4f       	sbci	r27, 0xFE	; 254
 29e:	2d 91       	ld	r18, X+
 2a0:	3c 91       	ld	r19, X
 2a2:	11 97       	sbiw	r26, 0x01	; 1
 2a4:	30 93 10 02 	sts	0x0210, r19
 2a8:	20 93 0f 02 	sts	0x020F, r18
 2ac:	11 96       	adiw	r26, 0x01	; 1
 2ae:	1c 92       	st	X, r1
 2b0:	1e 92       	st	-X, r1
 2b2:	20 91 07 02 	lds	r18, 0x0207
 2b6:	30 91 08 02 	lds	r19, 0x0208
 2ba:	2f 5f       	subi	r18, 0xFF	; 255
 2bc:	3f 4f       	sbci	r19, 0xFF	; 255
 2be:	30 93 08 02 	sts	0x0208, r19
 2c2:	20 93 07 02 	sts	0x0207, r18
 2c6:	20 e0       	ldi	r18, 0x00	; 0
 2c8:	31 e0       	ldi	r19, 0x01	; 1
 2ca:	df 01       	movw	r26, r30
 2cc:	12 96       	adiw	r26, 0x02	; 2
 2ce:	ed 01       	movw	r28, r26
 2d0:	89 01       	movw	r16, r18
 2d2:	19 92       	st	Y+, r1
 2d4:	01 50       	subi	r16, 0x01	; 1
 2d6:	10 40       	sbci	r17, 0x00	; 0
 2d8:	e1 f7       	brne	.-8      	; 0x2d2 <Kernel_Create_Task+0x5e>
 2da:	25 ed       	ldi	r18, 0xD5	; 213
 2dc:	31 e0       	ldi	r19, 0x01	; 1
 2de:	a1 50       	subi	r26, 0x01	; 1
 2e0:	bf 4f       	sbci	r27, 0xFF	; 255
 2e2:	2c 93       	st	X, r18
 2e4:	11 97       	sbiw	r26, 0x01	; 1
 2e6:	3c 93       	st	X, r19
 2e8:	11 97       	sbiw	r26, 0x01	; 1
 2ea:	1c 92       	st	X, r1
 2ec:	11 97       	sbiw	r26, 0x01	; 1
 2ee:	8c 93       	st	X, r24
 2f0:	11 97       	sbiw	r26, 0x01	; 1
 2f2:	9c 93       	st	X, r25
 2f4:	11 97       	sbiw	r26, 0x01	; 1
 2f6:	1c 92       	st	X, r1
 2f8:	9f 01       	movw	r18, r30
 2fa:	27 52       	subi	r18, 0x27	; 39
 2fc:	3f 4f       	sbci	r19, 0xFF	; 255
 2fe:	31 83       	std	Z+1, r19	; 0x01
 300:	20 83       	st	Z, r18
 302:	17 96       	adiw	r26, 0x07	; 7
 304:	11 96       	adiw	r26, 0x01	; 1
 306:	9c 93       	st	X, r25
 308:	8e 93       	st	-X, r24
 30a:	12 96       	adiw	r26, 0x02	; 2
 30c:	1c 92       	st	X, r1
 30e:	16 96       	adiw	r26, 0x06	; 6
 310:	11 96       	adiw	r26, 0x01	; 1
 312:	5c 93       	st	X, r21
 314:	4e 93       	st	-X, r20
 316:	ef 01       	movw	r28, r30
 318:	c8 5f       	subi	r28, 0xF8	; 248
 31a:	de 4f       	sbci	r29, 0xFE	; 254
 31c:	68 83       	st	Y, r22
 31e:	14 96       	adiw	r26, 0x04	; 4
 320:	11 96       	adiw	r26, 0x01	; 1
 322:	1c 92       	st	X, r1
 324:	1e 92       	st	-X, r1
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	1d 97       	sbiw	r26, 0x0d	; 13
 32a:	8c 93       	st	X, r24
 32c:	88 81       	ld	r24, Y
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	1f 96       	adiw	r26, 0x0f	; 15
 332:	11 96       	adiw	r26, 0x01	; 1
 334:	1c 92       	st	X, r1
 336:	1e 92       	st	-X, r1
 338:	dc 01       	movw	r26, r24
 33a:	aa 0f       	add	r26, r26
 33c:	bb 1f       	adc	r27, r27
 33e:	aa 0f       	add	r26, r26
 340:	bb 1f       	adc	r27, r27
 342:	ad 5e       	subi	r26, 0xED	; 237
 344:	bd 4f       	sbci	r27, 0xFD	; 253
 346:	2d 91       	ld	r18, X+
 348:	3c 91       	ld	r19, X
 34a:	23 2b       	or	r18, r19
 34c:	79 f4       	brne	.+30     	; 0x36c <Kernel_Create_Task+0xf8>
 34e:	88 0f       	add	r24, r24
 350:	99 1f       	adc	r25, r25
 352:	88 0f       	add	r24, r24
 354:	99 1f       	adc	r25, r25
 356:	dc 01       	movw	r26, r24
 358:	ad 5e       	subi	r26, 0xED	; 237
 35a:	bd 4f       	sbci	r27, 0xFD	; 253
 35c:	11 96       	adiw	r26, 0x01	; 1
 35e:	fc 93       	st	X, r31
 360:	ee 93       	st	-X, r30
 362:	13 96       	adiw	r26, 0x03	; 3
 364:	fc 93       	st	X, r31
 366:	ee 93       	st	-X, r30
 368:	12 97       	sbiw	r26, 0x02	; 2
 36a:	13 c0       	rjmp	.+38     	; 0x392 <Kernel_Create_Task+0x11e>
 36c:	88 0f       	add	r24, r24
 36e:	99 1f       	adc	r25, r25
 370:	88 0f       	add	r24, r24
 372:	99 1f       	adc	r25, r25
 374:	dc 01       	movw	r26, r24
 376:	ad 5e       	subi	r26, 0xED	; 237
 378:	bd 4f       	sbci	r27, 0xFD	; 253
 37a:	12 96       	adiw	r26, 0x02	; 2
 37c:	cd 91       	ld	r28, X+
 37e:	dc 91       	ld	r29, X
 380:	13 97       	sbiw	r26, 0x03	; 3
 382:	cf 5e       	subi	r28, 0xEF	; 239
 384:	de 4f       	sbci	r29, 0xFE	; 254
 386:	f9 83       	std	Y+1, r31	; 0x01
 388:	e8 83       	st	Y, r30
 38a:	13 96       	adiw	r26, 0x03	; 3
 38c:	fc 93       	st	X, r31
 38e:	ee 93       	st	-X, r30
 390:	12 97       	sbiw	r26, 0x02	; 2
 392:	e7 5f       	subi	r30, 0xF7	; 247
 394:	fe 4f       	sbci	r31, 0xFE	; 254
 396:	80 81       	ld	r24, Z
 398:	91 81       	ldd	r25, Z+1	; 0x01
 39a:	02 c0       	rjmp	.+4      	; 0x3a0 <Kernel_Create_Task+0x12c>
 39c:	8f ef       	ldi	r24, 0xFF	; 255
 39e:	9f ef       	ldi	r25, 0xFF	; 255
 3a0:	df 91       	pop	r29
 3a2:	cf 91       	pop	r28
 3a4:	1f 91       	pop	r17
 3a6:	0f 91       	pop	r16
 3a8:	08 95       	ret

000003aa <Task_Terminate>:
 3aa:	80 91 09 02 	lds	r24, 0x0209
 3ae:	90 91 0a 02 	lds	r25, 0x020A
 3b2:	89 2b       	or	r24, r25
 3b4:	51 f0       	breq	.+20     	; 0x3ca <Task_Terminate+0x20>
 3b6:	f8 94       	cli
 3b8:	e0 91 0d 02 	lds	r30, 0x020D
 3bc:	f0 91 0e 02 	lds	r31, 0x020E
 3c0:	eb 5f       	subi	r30, 0xFB	; 251
 3c2:	fe 4f       	sbci	r31, 0xFE	; 254
 3c4:	83 e0       	ldi	r24, 0x03	; 3
 3c6:	80 83       	st	Z, r24
 3c8:	fe ce       	rjmp	.-516    	; 0x1c6 <Enter_Kernel>
 3ca:	08 95       	ret

000003cc <Dispatch>:
 3cc:	a3 e1       	ldi	r26, 0x13	; 19
 3ce:	b2 e0       	ldi	r27, 0x02	; 2
 3d0:	60 e0       	ldi	r22, 0x00	; 0
 3d2:	70 e0       	ldi	r23, 0x00	; 0
 3d4:	2d 91       	ld	r18, X+
 3d6:	3c 91       	ld	r19, X
 3d8:	11 97       	sbiw	r26, 0x01	; 1
 3da:	21 15       	cp	r18, r1
 3dc:	31 05       	cpc	r19, r1
 3de:	09 f4       	brne	.+2      	; 0x3e2 <Dispatch+0x16>
 3e0:	7a c0       	rjmp	.+244    	; 0x4d6 <Dispatch+0x10a>
 3e2:	f9 01       	movw	r30, r18
 3e4:	e1 5f       	subi	r30, 0xF1	; 241
 3e6:	fe 4f       	sbci	r31, 0xFE	; 254
 3e8:	80 81       	ld	r24, Z
 3ea:	91 81       	ldd	r25, Z+1	; 0x01
 3ec:	89 2b       	or	r24, r25
 3ee:	61 f0       	breq	.+24     	; 0x408 <Dispatch+0x3c>
 3f0:	c9 01       	movw	r24, r18
 3f2:	69 c0       	rjmp	.+210    	; 0x4c6 <Dispatch+0xfa>
 3f4:	fc 01       	movw	r30, r24
 3f6:	e1 5f       	subi	r30, 0xF1	; 241
 3f8:	fe 4f       	sbci	r31, 0xFE	; 254
 3fa:	40 81       	ld	r20, Z
 3fc:	51 81       	ldd	r21, Z+1	; 0x01
 3fe:	45 2b       	or	r20, r21
 400:	09 f0       	breq	.+2      	; 0x404 <Dispatch+0x38>
 402:	61 c0       	rjmp	.+194    	; 0x4c6 <Dispatch+0xfa>
 404:	c9 01       	movw	r24, r18
 406:	01 c0       	rjmp	.+2      	; 0x40a <Dispatch+0x3e>
 408:	c9 01       	movw	r24, r18
 40a:	fc 01       	movw	r30, r24
 40c:	e1 5f       	subi	r30, 0xF1	; 241
 40e:	fe 4f       	sbci	r31, 0xFE	; 254
 410:	40 81       	ld	r20, Z
 412:	51 81       	ldd	r21, Z+1	; 0x01
 414:	45 2b       	or	r20, r21
 416:	a1 f4       	brne	.+40     	; 0x440 <Dispatch+0x74>
 418:	dc 01       	movw	r26, r24
 41a:	af 5e       	subi	r26, 0xEF	; 239
 41c:	be 4f       	sbci	r27, 0xFE	; 254
 41e:	8d 91       	ld	r24, X+
 420:	9c 91       	ld	r25, X
 422:	11 97       	sbiw	r26, 0x01	; 1
 424:	66 0f       	add	r22, r22
 426:	77 1f       	adc	r23, r23
 428:	66 0f       	add	r22, r22
 42a:	77 1f       	adc	r23, r23
 42c:	fb 01       	movw	r30, r22
 42e:	ed 5e       	subi	r30, 0xED	; 237
 430:	fd 4f       	sbci	r31, 0xFD	; 253
 432:	91 83       	std	Z+1, r25	; 0x01
 434:	80 83       	st	Z, r24
 436:	11 96       	adiw	r26, 0x01	; 1
 438:	1c 92       	st	X, r1
 43a:	1e 92       	st	-X, r1
 43c:	f9 01       	movw	r30, r18
 43e:	33 c0       	rjmp	.+102    	; 0x4a6 <Dispatch+0xda>
 440:	fc 01       	movw	r30, r24
 442:	ef 5e       	subi	r30, 0xEF	; 239
 444:	fe 4f       	sbci	r31, 0xFE	; 254
 446:	80 81       	ld	r24, Z
 448:	91 81       	ldd	r25, Z+1	; 0x01
 44a:	00 97       	sbiw	r24, 0x00	; 0
 44c:	59 f1       	breq	.+86     	; 0x4a4 <Dispatch+0xd8>
 44e:	fc 01       	movw	r30, r24
 450:	e1 5f       	subi	r30, 0xF1	; 241
 452:	fe 4f       	sbci	r31, 0xFE	; 254
 454:	40 81       	ld	r20, Z
 456:	51 81       	ldd	r21, Z+1	; 0x01
 458:	45 2b       	or	r20, r21
 45a:	c1 f4       	brne	.+48     	; 0x48c <Dispatch+0xc0>
 45c:	07 c0       	rjmp	.+14     	; 0x46c <Dispatch+0xa0>
 45e:	fc 01       	movw	r30, r24
 460:	e1 5f       	subi	r30, 0xF1	; 241
 462:	fe 4f       	sbci	r31, 0xFE	; 254
 464:	40 81       	ld	r20, Z
 466:	51 81       	ldd	r21, Z+1	; 0x01
 468:	45 2b       	or	r20, r21
 46a:	81 f4       	brne	.+32     	; 0x48c <Dispatch+0xc0>
 46c:	dc 01       	movw	r26, r24
 46e:	af 5e       	subi	r26, 0xEF	; 239
 470:	be 4f       	sbci	r27, 0xFE	; 254
 472:	4d 91       	ld	r20, X+
 474:	5c 91       	ld	r21, X
 476:	11 97       	sbiw	r26, 0x01	; 1
 478:	f9 01       	movw	r30, r18
 47a:	ef 5e       	subi	r30, 0xEF	; 239
 47c:	fe 4f       	sbci	r31, 0xFE	; 254
 47e:	51 83       	std	Z+1, r21	; 0x01
 480:	40 83       	st	Z, r20
 482:	11 96       	adiw	r26, 0x01	; 1
 484:	1c 92       	st	X, r1
 486:	1e 92       	st	-X, r1
 488:	fc 01       	movw	r30, r24
 48a:	0d c0       	rjmp	.+26     	; 0x4a6 <Dispatch+0xda>
 48c:	f9 01       	movw	r30, r18
 48e:	ef 5e       	subi	r30, 0xEF	; 239
 490:	fe 4f       	sbci	r31, 0xFE	; 254
 492:	20 81       	ld	r18, Z
 494:	31 81       	ldd	r19, Z+1	; 0x01
 496:	fc 01       	movw	r30, r24
 498:	ef 5e       	subi	r30, 0xEF	; 239
 49a:	fe 4f       	sbci	r31, 0xFE	; 254
 49c:	80 81       	ld	r24, Z
 49e:	91 81       	ldd	r25, Z+1	; 0x01
 4a0:	00 97       	sbiw	r24, 0x00	; 0
 4a2:	e9 f6       	brne	.-70     	; 0x45e <Dispatch+0x92>
 4a4:	ff cf       	rjmp	.-2      	; 0x4a4 <Dispatch+0xd8>
 4a6:	f0 93 0e 02 	sts	0x020E, r31
 4aa:	e0 93 0d 02 	sts	0x020D, r30
 4ae:	80 81       	ld	r24, Z
 4b0:	91 81       	ldd	r25, Z+1	; 0x01
 4b2:	90 93 d8 0a 	sts	0x0AD8, r25
 4b6:	80 93 d7 0a 	sts	0x0AD7, r24
 4ba:	ee 5f       	subi	r30, 0xFE	; 254
 4bc:	fe 4f       	sbci	r31, 0xFE	; 254
 4be:	83 e0       	ldi	r24, 0x03	; 3
 4c0:	80 83       	st	Z, r24
 4c2:	78 94       	sei
 4c4:	08 95       	ret
 4c6:	fc 01       	movw	r30, r24
 4c8:	ef 5e       	subi	r30, 0xEF	; 239
 4ca:	fe 4f       	sbci	r31, 0xFE	; 254
 4cc:	80 81       	ld	r24, Z
 4ce:	91 81       	ldd	r25, Z+1	; 0x01
 4d0:	00 97       	sbiw	r24, 0x00	; 0
 4d2:	09 f0       	breq	.+2      	; 0x4d6 <Dispatch+0x10a>
 4d4:	8f cf       	rjmp	.-226    	; 0x3f4 <Dispatch+0x28>
 4d6:	6f 5f       	subi	r22, 0xFF	; 255
 4d8:	7f 4f       	sbci	r23, 0xFF	; 255
 4da:	14 96       	adiw	r26, 0x04	; 4
 4dc:	6b 30       	cpi	r22, 0x0B	; 11
 4de:	71 05       	cpc	r23, r1
 4e0:	09 f0       	breq	.+2      	; 0x4e4 <Dispatch+0x118>
 4e2:	78 cf       	rjmp	.-272    	; 0x3d4 <Dispatch+0x8>
 4e4:	ff cf       	rjmp	.-2      	; 0x4e4 <Dispatch+0x118>

000004e6 <check_rqueue>:
 4e6:	cf 93       	push	r28
 4e8:	df 93       	push	r29
 4ea:	c0 91 0d 02 	lds	r28, 0x020D
 4ee:	d0 91 0e 02 	lds	r29, 0x020E
 4f2:	fe 01       	movw	r30, r28
 4f4:	e8 5f       	subi	r30, 0xF8	; 248
 4f6:	fe 4f       	sbci	r31, 0xFE	; 254
 4f8:	80 81       	ld	r24, Z
 4fa:	88 23       	and	r24, r24
 4fc:	59 f1       	breq	.+86     	; 0x554 <check_rqueue+0x6e>
 4fe:	a3 e1       	ldi	r26, 0x13	; 19
 500:	b2 e0       	ldi	r27, 0x02	; 2
 502:	40 e0       	ldi	r20, 0x00	; 0
 504:	50 e0       	ldi	r21, 0x00	; 0
 506:	ef 01       	movw	r28, r30
 508:	8d 91       	ld	r24, X+
 50a:	9c 91       	ld	r25, X
 50c:	11 97       	sbiw	r26, 0x01	; 1
 50e:	00 97       	sbiw	r24, 0x00	; 0
 510:	b1 f0       	breq	.+44     	; 0x53e <check_rqueue+0x58>
 512:	fc 01       	movw	r30, r24
 514:	e1 5f       	subi	r30, 0xF1	; 241
 516:	fe 4f       	sbci	r31, 0xFE	; 254
 518:	20 81       	ld	r18, Z
 51a:	31 81       	ldd	r19, Z+1	; 0x01
 51c:	23 2b       	or	r18, r19
 51e:	41 f4       	brne	.+16     	; 0x530 <check_rqueue+0x4a>
 520:	1c c0       	rjmp	.+56     	; 0x55a <check_rqueue+0x74>
 522:	fc 01       	movw	r30, r24
 524:	e1 5f       	subi	r30, 0xF1	; 241
 526:	fe 4f       	sbci	r31, 0xFE	; 254
 528:	20 81       	ld	r18, Z
 52a:	31 81       	ldd	r19, Z+1	; 0x01
 52c:	23 2b       	or	r18, r19
 52e:	c1 f0       	breq	.+48     	; 0x560 <check_rqueue+0x7a>
 530:	fc 01       	movw	r30, r24
 532:	ef 5e       	subi	r30, 0xEF	; 239
 534:	fe 4f       	sbci	r31, 0xFE	; 254
 536:	80 81       	ld	r24, Z
 538:	91 81       	ldd	r25, Z+1	; 0x01
 53a:	00 97       	sbiw	r24, 0x00	; 0
 53c:	91 f7       	brne	.-28     	; 0x522 <check_rqueue+0x3c>
 53e:	4f 5f       	subi	r20, 0xFF	; 255
 540:	5f 4f       	sbci	r21, 0xFF	; 255
 542:	88 81       	ld	r24, Y
 544:	14 96       	adiw	r26, 0x04	; 4
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	48 17       	cp	r20, r24
 54a:	59 07       	cpc	r21, r25
 54c:	ec f2       	brlt	.-70     	; 0x508 <check_rqueue+0x22>
 54e:	80 e0       	ldi	r24, 0x00	; 0
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	08 c0       	rjmp	.+16     	; 0x564 <check_rqueue+0x7e>
 554:	80 e0       	ldi	r24, 0x00	; 0
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	05 c0       	rjmp	.+10     	; 0x564 <check_rqueue+0x7e>
 55a:	81 e0       	ldi	r24, 0x01	; 1
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	02 c0       	rjmp	.+4      	; 0x564 <check_rqueue+0x7e>
 560:	81 e0       	ldi	r24, 0x01	; 1
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	df 91       	pop	r29
 566:	cf 91       	pop	r28
 568:	08 95       	ret

0000056a <preemption>:
 56a:	bd df       	rcall	.-134    	; 0x4e6 <check_rqueue>
 56c:	89 2b       	or	r24, r25
 56e:	31 f1       	breq	.+76     	; 0x5bc <preemption+0x52>
 570:	80 91 0d 02 	lds	r24, 0x020D
 574:	90 91 0e 02 	lds	r25, 0x020E
 578:	fc 01       	movw	r30, r24
 57a:	ee 5f       	subi	r30, 0xFE	; 254
 57c:	fe 4f       	sbci	r31, 0xFE	; 254
 57e:	21 e0       	ldi	r18, 0x01	; 1
 580:	20 83       	st	Z, r18
 582:	dc 01       	movw	r26, r24
 584:	a8 5f       	subi	r26, 0xF8	; 248
 586:	be 4f       	sbci	r27, 0xFE	; 254
 588:	ec 91       	ld	r30, X
 58a:	f0 e0       	ldi	r31, 0x00	; 0
 58c:	ee 0f       	add	r30, r30
 58e:	ff 1f       	adc	r31, r31
 590:	ee 0f       	add	r30, r30
 592:	ff 1f       	adc	r31, r31
 594:	ed 5e       	subi	r30, 0xED	; 237
 596:	fd 4f       	sbci	r31, 0xFD	; 253
 598:	20 81       	ld	r18, Z
 59a:	31 81       	ldd	r19, Z+1	; 0x01
 59c:	fc 01       	movw	r30, r24
 59e:	ef 5e       	subi	r30, 0xEF	; 239
 5a0:	fe 4f       	sbci	r31, 0xFE	; 254
 5a2:	31 83       	std	Z+1, r19	; 0x01
 5a4:	20 83       	st	Z, r18
 5a6:	ec 91       	ld	r30, X
 5a8:	f0 e0       	ldi	r31, 0x00	; 0
 5aa:	ee 0f       	add	r30, r30
 5ac:	ff 1f       	adc	r31, r31
 5ae:	ee 0f       	add	r30, r30
 5b0:	ff 1f       	adc	r31, r31
 5b2:	ed 5e       	subi	r30, 0xED	; 237
 5b4:	fd 4f       	sbci	r31, 0xFD	; 253
 5b6:	91 83       	std	Z+1, r25	; 0x01
 5b8:	80 83       	st	Z, r24
 5ba:	08 cf       	rjmp	.-496    	; 0x3cc <Dispatch>
 5bc:	08 95       	ret

000005be <set_timer>:
 5be:	10 92 80 00 	sts	0x0080, r1
 5c2:	e1 e8       	ldi	r30, 0x81	; 129
 5c4:	f0 e0       	ldi	r31, 0x00	; 0
 5c6:	10 82       	st	Z, r1
 5c8:	80 81       	ld	r24, Z
 5ca:	88 60       	ori	r24, 0x08	; 8
 5cc:	80 83       	st	Z, r24
 5ce:	80 81       	ld	r24, Z
 5d0:	82 60       	ori	r24, 0x02	; 2
 5d2:	80 83       	st	Z, r24
 5d4:	80 e2       	ldi	r24, 0x20	; 32
 5d6:	9e e4       	ldi	r25, 0x4E	; 78
 5d8:	90 93 89 00 	sts	0x0089, r25
 5dc:	80 93 88 00 	sts	0x0088, r24
 5e0:	ef e6       	ldi	r30, 0x6F	; 111
 5e2:	f0 e0       	ldi	r31, 0x00	; 0
 5e4:	80 81       	ld	r24, Z
 5e6:	82 60       	ori	r24, 0x02	; 2
 5e8:	80 83       	st	Z, r24
 5ea:	08 95       	ret

000005ec <OS_Init>:
 5ec:	81 e0       	ldi	r24, 0x01	; 1
 5ee:	81 b9       	out	0x01, r24	; 1
 5f0:	09 9a       	sbi	0x01, 1	; 1
 5f2:	10 98       	cbi	0x02, 0	; 2
 5f4:	11 98       	cbi	0x02, 1	; 2
 5f6:	e3 df       	rcall	.-58     	; 0x5be <set_timer>
 5f8:	10 92 08 02 	sts	0x0208, r1
 5fc:	10 92 07 02 	sts	0x0207, r1
 600:	10 92 0a 02 	sts	0x020A, r1
 604:	10 92 09 02 	sts	0x0209, r1
 608:	10 92 0c 02 	sts	0x020C, r1
 60c:	10 92 0b 02 	sts	0x020B, r1
 610:	af e3       	ldi	r26, 0x3F	; 63
 612:	b2 e0       	ldi	r27, 0x02	; 2
 614:	20 e0       	ldi	r18, 0x00	; 0
 616:	30 e0       	ldi	r19, 0x00	; 0
 618:	43 e1       	ldi	r20, 0x13	; 19
 61a:	51 e0       	ldi	r21, 0x01	; 1
 61c:	fd 01       	movw	r30, r26
 61e:	ca 01       	movw	r24, r20
 620:	11 92       	st	Z+, r1
 622:	01 97       	sbiw	r24, 0x01	; 1
 624:	e9 f7       	brne	.-6      	; 0x620 <OS_Init+0x34>
 626:	24 9f       	mul	r18, r20
 628:	c0 01       	movw	r24, r0
 62a:	25 9f       	mul	r18, r21
 62c:	90 0d       	add	r25, r0
 62e:	34 9f       	mul	r19, r20
 630:	90 0d       	add	r25, r0
 632:	11 24       	eor	r1, r1
 634:	81 5c       	subi	r24, 0xC1	; 193
 636:	9d 4f       	sbci	r25, 0xFD	; 253
 638:	fc 01       	movw	r30, r24
 63a:	ee 5f       	subi	r30, 0xFE	; 254
 63c:	fe 4f       	sbci	r31, 0xFE	; 254
 63e:	10 82       	st	Z, r1
 640:	37 96       	adiw	r30, 0x07	; 7
 642:	31 83       	std	Z+1, r19	; 0x01
 644:	20 83       	st	Z, r18
 646:	ad 5e       	subi	r26, 0xED	; 237
 648:	be 4f       	sbci	r27, 0xFE	; 254
 64a:	38 96       	adiw	r30, 0x08	; 8
 64c:	b1 83       	std	Z+1, r27	; 0x01
 64e:	a0 83       	st	Z, r26
 650:	2f 5f       	subi	r18, 0xFF	; 255
 652:	3f 4f       	sbci	r19, 0xFF	; 255
 654:	27 30       	cpi	r18, 0x07	; 7
 656:	31 05       	cpc	r19, r1
 658:	09 f7       	brne	.-62     	; 0x61c <OS_Init+0x30>
 65a:	10 92 c6 0a 	sts	0x0AC6, r1
 65e:	10 92 d6 0a 	sts	0x0AD6, r1
 662:	10 92 d5 0a 	sts	0x0AD5, r1
 666:	ef e0       	ldi	r30, 0x0F	; 15
 668:	f2 e0       	ldi	r31, 0x02	; 2
 66a:	8f e3       	ldi	r24, 0x3F	; 63
 66c:	92 e0       	ldi	r25, 0x02	; 2
 66e:	91 83       	std	Z+1, r25	; 0x01
 670:	80 83       	st	Z, r24
 672:	84 ec       	ldi	r24, 0xC4	; 196
 674:	99 e0       	ldi	r25, 0x09	; 9
 676:	93 83       	std	Z+3, r25	; 0x03
 678:	82 83       	std	Z+2, r24	; 0x02
 67a:	08 95       	ret

0000067c <OS_Start>:
 67c:	cf 92       	push	r12
 67e:	df 92       	push	r13
 680:	ef 92       	push	r14
 682:	ff 92       	push	r15
 684:	0f 93       	push	r16
 686:	1f 93       	push	r17
 688:	cf 93       	push	r28
 68a:	df 93       	push	r29
 68c:	80 91 09 02 	lds	r24, 0x0209
 690:	90 91 0a 02 	lds	r25, 0x020A
 694:	89 2b       	or	r24, r25
 696:	09 f0       	breq	.+2      	; 0x69a <OS_Start+0x1e>
 698:	e7 c0       	rjmp	.+462    	; 0x868 <OS_Start+0x1ec>
 69a:	80 91 07 02 	lds	r24, 0x0207
 69e:	90 91 08 02 	lds	r25, 0x0208
 6a2:	89 2b       	or	r24, r25
 6a4:	09 f4       	brne	.+2      	; 0x6a8 <OS_Start+0x2c>
 6a6:	e0 c0       	rjmp	.+448    	; 0x868 <OS_Start+0x1ec>
 6a8:	f8 94       	cli
 6aa:	81 e0       	ldi	r24, 0x01	; 1
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	90 93 0a 02 	sts	0x020A, r25
 6b2:	80 93 09 02 	sts	0x0209, r24
 6b6:	8a de       	rcall	.-748    	; 0x3cc <Dispatch>
 6b8:	68 94       	set
 6ba:	ee 24       	eor	r14, r14
 6bc:	e2 f8       	bld	r14, 2
 6be:	cf e0       	ldi	r28, 0x0F	; 15
 6c0:	d2 e0       	ldi	r29, 0x02	; 2
 6c2:	ff 24       	eor	r15, r15
 6c4:	f3 94       	inc	r15
 6c6:	cc 24       	eor	r12, r12
 6c8:	c3 94       	inc	r12
 6ca:	d1 2c       	mov	r13, r1
 6cc:	00 e0       	ldi	r16, 0x00	; 0
 6ce:	12 e0       	ldi	r17, 0x02	; 2
 6d0:	e0 91 0d 02 	lds	r30, 0x020D
 6d4:	f0 91 0e 02 	lds	r31, 0x020E
 6d8:	80 81       	ld	r24, Z
 6da:	91 81       	ldd	r25, Z+1	; 0x01
 6dc:	90 93 d8 0a 	sts	0x0AD8, r25
 6e0:	80 93 d7 0a 	sts	0x0AD7, r24
 6e4:	e1 5f       	subi	r30, 0xF1	; 241
 6e6:	fe 4f       	sbci	r31, 0xFE	; 254
 6e8:	80 81       	ld	r24, Z
 6ea:	91 81       	ldd	r25, Z+1	; 0x01
 6ec:	89 2b       	or	r24, r25
 6ee:	09 f0       	breq	.+2      	; 0x6f2 <OS_Start+0x76>
 6f0:	ff cf       	rjmp	.-2      	; 0x6f0 <OS_Start+0x74>
 6f2:	12 dd       	rcall	.-1500   	; 0x118 <CSwitch>
 6f4:	a0 91 0d 02 	lds	r26, 0x020D
 6f8:	b0 91 0e 02 	lds	r27, 0x020E
 6fc:	80 91 d7 0a 	lds	r24, 0x0AD7
 700:	90 91 d8 0a 	lds	r25, 0x0AD8
 704:	11 96       	adiw	r26, 0x01	; 1
 706:	9c 93       	st	X, r25
 708:	8e 93       	st	-X, r24
 70a:	fd 01       	movw	r30, r26
 70c:	eb 5f       	subi	r30, 0xFB	; 251
 70e:	fe 4f       	sbci	r31, 0xFE	; 254
 710:	e0 81       	ld	r30, Z
 712:	4e 2f       	mov	r20, r30
 714:	50 e0       	ldi	r21, 0x00	; 0
 716:	fa 01       	movw	r30, r20
 718:	31 97       	sbiw	r30, 0x01	; 1
 71a:	e7 30       	cpi	r30, 0x07	; 7
 71c:	f1 05       	cpc	r31, r1
 71e:	c0 f6       	brcc	.-80     	; 0x6d0 <OS_Start+0x54>
 720:	88 27       	eor	r24, r24
 722:	ee 58       	subi	r30, 0x8E	; 142
 724:	ff 4f       	sbci	r31, 0xFF	; 255
 726:	8f 4f       	sbci	r24, 0xFF	; 255
 728:	96 c1       	rjmp	.+812    	; 0xa56 <__tablejump2__>
 72a:	f8 01       	movw	r30, r16
 72c:	42 81       	ldd	r20, Z+2	; 0x02
 72e:	53 81       	ldd	r21, Z+3	; 0x03
 730:	64 81       	ldd	r22, Z+4	; 0x04
 732:	80 81       	ld	r24, Z
 734:	91 81       	ldd	r25, Z+1	; 0x01
 736:	9e dd       	rcall	.-1220   	; 0x274 <Kernel_Create_Task>
 738:	f8 01       	movw	r30, r16
 73a:	96 83       	std	Z+6, r25	; 0x06
 73c:	85 83       	std	Z+5, r24	; 0x05
 73e:	15 df       	rcall	.-470    	; 0x56a <preemption>
 740:	c7 cf       	rjmp	.-114    	; 0x6d0 <OS_Start+0x54>
 742:	ae 5f       	subi	r26, 0xFE	; 254
 744:	be 4f       	sbci	r27, 0xFE	; 254
 746:	fc 92       	st	X, r15
 748:	41 de       	rcall	.-894    	; 0x3cc <Dispatch>
 74a:	c2 cf       	rjmp	.-124    	; 0x6d0 <OS_Start+0x54>
 74c:	fd 01       	movw	r30, r26
 74e:	ee 5f       	subi	r30, 0xFE	; 254
 750:	fe 4f       	sbci	r31, 0xFE	; 254
 752:	f0 82       	st	Z, r15
 754:	36 96       	adiw	r30, 0x06	; 6
 756:	80 81       	ld	r24, Z
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	39 96       	adiw	r30, 0x09	; 9
 75c:	11 82       	std	Z+1, r1	; 0x01
 75e:	10 82       	st	Z, r1
 760:	fc 01       	movw	r30, r24
 762:	ee 0f       	add	r30, r30
 764:	ff 1f       	adc	r31, r31
 766:	ee 0f       	add	r30, r30
 768:	ff 1f       	adc	r31, r31
 76a:	ed 5e       	subi	r30, 0xED	; 237
 76c:	fd 4f       	sbci	r31, 0xFD	; 253
 76e:	20 81       	ld	r18, Z
 770:	31 81       	ldd	r19, Z+1	; 0x01
 772:	23 2b       	or	r18, r19
 774:	61 f4       	brne	.+24     	; 0x78e <OS_Start+0x112>
 776:	88 0f       	add	r24, r24
 778:	99 1f       	adc	r25, r25
 77a:	88 0f       	add	r24, r24
 77c:	99 1f       	adc	r25, r25
 77e:	fc 01       	movw	r30, r24
 780:	ed 5e       	subi	r30, 0xED	; 237
 782:	fd 4f       	sbci	r31, 0xFD	; 253
 784:	b1 83       	std	Z+1, r27	; 0x01
 786:	a0 83       	st	Z, r26
 788:	b3 83       	std	Z+3, r27	; 0x03
 78a:	a2 83       	std	Z+2, r26	; 0x02
 78c:	12 c0       	rjmp	.+36     	; 0x7b2 <OS_Start+0x136>
 78e:	88 0f       	add	r24, r24
 790:	99 1f       	adc	r25, r25
 792:	88 0f       	add	r24, r24
 794:	99 1f       	adc	r25, r25
 796:	9c 01       	movw	r18, r24
 798:	2d 5e       	subi	r18, 0xED	; 237
 79a:	3d 4f       	sbci	r19, 0xFD	; 253
 79c:	f9 01       	movw	r30, r18
 79e:	82 81       	ldd	r24, Z+2	; 0x02
 7a0:	93 81       	ldd	r25, Z+3	; 0x03
 7a2:	8f 5e       	subi	r24, 0xEF	; 239
 7a4:	9e 4f       	sbci	r25, 0xFE	; 254
 7a6:	fc 01       	movw	r30, r24
 7a8:	b1 83       	std	Z+1, r27	; 0x01
 7aa:	a0 83       	st	Z, r26
 7ac:	f9 01       	movw	r30, r18
 7ae:	b3 83       	std	Z+3, r27	; 0x03
 7b0:	a2 83       	std	Z+2, r26	; 0x02
 7b2:	0c de       	rcall	.-1000   	; 0x3cc <Dispatch>
 7b4:	8d cf       	rjmp	.-230    	; 0x6d0 <OS_Start+0x54>
 7b6:	fd 01       	movw	r30, r26
 7b8:	ee 5f       	subi	r30, 0xFE	; 254
 7ba:	fe 4f       	sbci	r31, 0xFE	; 254
 7bc:	f0 82       	st	Z, r15
 7be:	3d 96       	adiw	r30, 0x0d	; 13
 7c0:	d1 82       	std	Z+1, r13	; 0x01
 7c2:	c0 82       	st	Z, r12
 7c4:	37 97       	sbiw	r30, 0x07	; 7
 7c6:	80 81       	ld	r24, Z
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	39 96       	adiw	r30, 0x09	; 9
 7cc:	11 82       	std	Z+1, r1	; 0x01
 7ce:	10 82       	st	Z, r1
 7d0:	fc 01       	movw	r30, r24
 7d2:	ee 0f       	add	r30, r30
 7d4:	ff 1f       	adc	r31, r31
 7d6:	ee 0f       	add	r30, r30
 7d8:	ff 1f       	adc	r31, r31
 7da:	ed 5e       	subi	r30, 0xED	; 237
 7dc:	fd 4f       	sbci	r31, 0xFD	; 253
 7de:	20 81       	ld	r18, Z
 7e0:	31 81       	ldd	r19, Z+1	; 0x01
 7e2:	23 2b       	or	r18, r19
 7e4:	61 f4       	brne	.+24     	; 0x7fe <OS_Start+0x182>
 7e6:	88 0f       	add	r24, r24
 7e8:	99 1f       	adc	r25, r25
 7ea:	88 0f       	add	r24, r24
 7ec:	99 1f       	adc	r25, r25
 7ee:	fc 01       	movw	r30, r24
 7f0:	ed 5e       	subi	r30, 0xED	; 237
 7f2:	fd 4f       	sbci	r31, 0xFD	; 253
 7f4:	b1 83       	std	Z+1, r27	; 0x01
 7f6:	a0 83       	st	Z, r26
 7f8:	b3 83       	std	Z+3, r27	; 0x03
 7fa:	a2 83       	std	Z+2, r26	; 0x02
 7fc:	12 c0       	rjmp	.+36     	; 0x822 <OS_Start+0x1a6>
 7fe:	88 0f       	add	r24, r24
 800:	99 1f       	adc	r25, r25
 802:	88 0f       	add	r24, r24
 804:	99 1f       	adc	r25, r25
 806:	9c 01       	movw	r18, r24
 808:	2d 5e       	subi	r18, 0xED	; 237
 80a:	3d 4f       	sbci	r19, 0xFD	; 253
 80c:	f9 01       	movw	r30, r18
 80e:	82 81       	ldd	r24, Z+2	; 0x02
 810:	93 81       	ldd	r25, Z+3	; 0x03
 812:	8f 5e       	subi	r24, 0xEF	; 239
 814:	9e 4f       	sbci	r25, 0xFE	; 254
 816:	fc 01       	movw	r30, r24
 818:	b1 83       	std	Z+1, r27	; 0x01
 81a:	a0 83       	st	Z, r26
 81c:	f9 01       	movw	r30, r18
 81e:	b3 83       	std	Z+3, r27	; 0x03
 820:	a2 83       	std	Z+2, r26	; 0x02
 822:	d4 dd       	rcall	.-1112   	; 0x3cc <Dispatch>
 824:	55 cf       	rjmp	.-342    	; 0x6d0 <OS_Start+0x54>
 826:	a1 de       	rcall	.-702    	; 0x56a <preemption>
 828:	53 cf       	rjmp	.-346    	; 0x6d0 <OS_Start+0x54>
 82a:	fd 01       	movw	r30, r26
 82c:	ee 5f       	subi	r30, 0xFE	; 254
 82e:	fe 4f       	sbci	r31, 0xFE	; 254
 830:	10 82       	st	Z, r1
 832:	3f 96       	adiw	r30, 0x0f	; 15
 834:	11 82       	std	Z+1, r1	; 0x01
 836:	10 82       	st	Z, r1
 838:	88 81       	ld	r24, Y
 83a:	99 81       	ldd	r25, Y+1	; 0x01
 83c:	89 2b       	or	r24, r25
 83e:	29 f4       	brne	.+10     	; 0x84a <OS_Start+0x1ce>
 840:	b9 83       	std	Y+1, r27	; 0x01
 842:	a8 83       	st	Y, r26
 844:	bb 83       	std	Y+3, r27	; 0x03
 846:	aa 83       	std	Y+2, r26	; 0x02
 848:	08 c0       	rjmp	.+16     	; 0x85a <OS_Start+0x1de>
 84a:	ea 81       	ldd	r30, Y+2	; 0x02
 84c:	fb 81       	ldd	r31, Y+3	; 0x03
 84e:	ef 5e       	subi	r30, 0xEF	; 239
 850:	fe 4f       	sbci	r31, 0xFE	; 254
 852:	b1 83       	std	Z+1, r27	; 0x01
 854:	a0 83       	st	Z, r26
 856:	bb 83       	std	Y+3, r27	; 0x03
 858:	aa 83       	std	Y+2, r26	; 0x02
 85a:	b8 dd       	rcall	.-1168   	; 0x3cc <Dispatch>
 85c:	39 cf       	rjmp	.-398    	; 0x6d0 <OS_Start+0x54>
 85e:	ae 5f       	subi	r26, 0xFE	; 254
 860:	be 4f       	sbci	r27, 0xFE	; 254
 862:	ec 92       	st	X, r14
 864:	b3 dd       	rcall	.-1178   	; 0x3cc <Dispatch>
 866:	34 cf       	rjmp	.-408    	; 0x6d0 <OS_Start+0x54>
 868:	df 91       	pop	r29
 86a:	cf 91       	pop	r28
 86c:	1f 91       	pop	r17
 86e:	0f 91       	pop	r16
 870:	ff 90       	pop	r15
 872:	ef 90       	pop	r14
 874:	df 90       	pop	r13
 876:	cf 90       	pop	r12
 878:	08 95       	ret

0000087a <Task_Create>:
 87a:	cf 93       	push	r28
 87c:	df 93       	push	r29
 87e:	20 91 09 02 	lds	r18, 0x0209
 882:	30 91 0a 02 	lds	r19, 0x020A
 886:	23 2b       	or	r18, r19
 888:	a1 f0       	breq	.+40     	; 0x8b2 <Task_Create+0x38>
 88a:	f8 94       	cli
 88c:	c0 e0       	ldi	r28, 0x00	; 0
 88e:	d2 e0       	ldi	r29, 0x02	; 2
 890:	99 83       	std	Y+1, r25	; 0x01
 892:	88 83       	st	Y, r24
 894:	5b 83       	std	Y+3, r21	; 0x03
 896:	4a 83       	std	Y+2, r20	; 0x02
 898:	6c 83       	std	Y+4, r22	; 0x04
 89a:	e0 91 0d 02 	lds	r30, 0x020D
 89e:	f0 91 0e 02 	lds	r31, 0x020E
 8a2:	eb 5f       	subi	r30, 0xFB	; 251
 8a4:	fe 4f       	sbci	r31, 0xFE	; 254
 8a6:	81 e0       	ldi	r24, 0x01	; 1
 8a8:	80 83       	st	Z, r24
 8aa:	8d dc       	rcall	.-1766   	; 0x1c6 <Enter_Kernel>
 8ac:	8d 81       	ldd	r24, Y+5	; 0x05
 8ae:	9e 81       	ldd	r25, Y+6	; 0x06
 8b0:	01 c0       	rjmp	.+2      	; 0x8b4 <Task_Create+0x3a>
 8b2:	e0 dc       	rcall	.-1600   	; 0x274 <Kernel_Create_Task>
 8b4:	df 91       	pop	r29
 8b6:	cf 91       	pop	r28
 8b8:	08 95       	ret

000008ba <a_main>:
 8ba:	40 e0       	ldi	r20, 0x00	; 0
 8bc:	50 e0       	ldi	r21, 0x00	; 0
 8be:	65 e0       	ldi	r22, 0x05	; 5
 8c0:	83 ea       	ldi	r24, 0xA3	; 163
 8c2:	94 e0       	ldi	r25, 0x04	; 4
 8c4:	da df       	rcall	.-76     	; 0x87a <Task_Create>
 8c6:	71 cd       	rjmp	.-1310   	; 0x3aa <Task_Terminate>
 8c8:	08 95       	ret

000008ca <Task_Yield>:
 8ca:	80 91 09 02 	lds	r24, 0x0209
 8ce:	90 91 0a 02 	lds	r25, 0x020A
 8d2:	89 2b       	or	r24, r25
 8d4:	51 f0       	breq	.+20     	; 0x8ea <Task_Yield+0x20>
 8d6:	f8 94       	cli
 8d8:	e0 91 0d 02 	lds	r30, 0x020D
 8dc:	f0 91 0e 02 	lds	r31, 0x020E
 8e0:	eb 5f       	subi	r30, 0xFB	; 251
 8e2:	fe 4f       	sbci	r31, 0xFE	; 254
 8e4:	86 e0       	ldi	r24, 0x06	; 6
 8e6:	80 83       	st	Z, r24
 8e8:	6e cc       	rjmp	.-1828   	; 0x1c6 <Enter_Kernel>
 8ea:	08 95       	ret

000008ec <Ping2>:
 8ec:	d0 e0       	ldi	r29, 0x00	; 0
 8ee:	cd e7       	ldi	r28, 0x7D	; 125
 8f0:	10 98       	cbi	0x02, 0	; 2
 8f2:	8d 2f       	mov	r24, r29
 8f4:	9c 2f       	mov	r25, r28
 8f6:	01 97       	sbiw	r24, 0x01	; 1
 8f8:	f1 f7       	brne	.-4      	; 0x8f6 <Ping2+0xa>
 8fa:	8d 2f       	mov	r24, r29
 8fc:	9c 2f       	mov	r25, r28
 8fe:	01 97       	sbiw	r24, 0x01	; 1
 900:	f1 f7       	brne	.-4      	; 0x8fe <Ping2+0x12>
 902:	8d 2f       	mov	r24, r29
 904:	9c 2f       	mov	r25, r28
 906:	01 97       	sbiw	r24, 0x01	; 1
 908:	f1 f7       	brne	.-4      	; 0x906 <Ping2+0x1a>
 90a:	8d 2f       	mov	r24, r29
 90c:	9c 2f       	mov	r25, r28
 90e:	01 97       	sbiw	r24, 0x01	; 1
 910:	f1 f7       	brne	.-4      	; 0x90e <Ping2+0x22>
 912:	db df       	rcall	.-74     	; 0x8ca <Task_Yield>
 914:	ed cf       	rjmp	.-38     	; 0x8f0 <Ping2+0x4>

00000916 <Ping>:
 916:	80 e0       	ldi	r24, 0x00	; 0
 918:	9d e7       	ldi	r25, 0x7D	; 125
 91a:	01 97       	sbiw	r24, 0x01	; 1
 91c:	f1 f7       	brne	.-4      	; 0x91a <Ping+0x4>
 91e:	80 e0       	ldi	r24, 0x00	; 0
 920:	9d e7       	ldi	r25, 0x7D	; 125
 922:	01 97       	sbiw	r24, 0x01	; 1
 924:	f1 f7       	brne	.-4      	; 0x922 <Ping+0xc>
 926:	80 e0       	ldi	r24, 0x00	; 0
 928:	9d e7       	ldi	r25, 0x7D	; 125
 92a:	01 97       	sbiw	r24, 0x01	; 1
 92c:	f1 f7       	brne	.-4      	; 0x92a <Ping+0x14>
 92e:	80 e0       	ldi	r24, 0x00	; 0
 930:	9d e7       	ldi	r25, 0x7D	; 125
 932:	01 97       	sbiw	r24, 0x01	; 1
 934:	f1 f7       	brne	.-4      	; 0x932 <Ping+0x1c>
 936:	40 e0       	ldi	r20, 0x00	; 0
 938:	50 e0       	ldi	r21, 0x00	; 0
 93a:	60 e0       	ldi	r22, 0x00	; 0
 93c:	8e ee       	ldi	r24, 0xEE	; 238
 93e:	94 e0       	ldi	r25, 0x04	; 4
 940:	9c df       	rcall	.-200    	; 0x87a <Task_Create>
 942:	c3 df       	rcall	.-122    	; 0x8ca <Task_Yield>
 944:	fe cf       	rjmp	.-4      	; 0x942 <Ping+0x2c>

00000946 <Pong>:
 946:	40 e0       	ldi	r20, 0x00	; 0
 948:	50 e0       	ldi	r21, 0x00	; 0
 94a:	61 e0       	ldi	r22, 0x01	; 1
 94c:	8b e8       	ldi	r24, 0x8B	; 139
 94e:	94 e0       	ldi	r25, 0x04	; 4
 950:	94 df       	rcall	.-216    	; 0x87a <Task_Create>
 952:	bb df       	rcall	.-138    	; 0x8ca <Task_Yield>
 954:	fe cf       	rjmp	.-4      	; 0x952 <Pong+0xc>

00000956 <Task_Suspend>:
 956:	20 91 48 03 	lds	r18, 0x0348
 95a:	30 91 49 03 	lds	r19, 0x0349
 95e:	28 17       	cp	r18, r24
 960:	39 07       	cpc	r19, r25
 962:	99 f0       	breq	.+38     	; 0x98a <Task_Suspend+0x34>
 964:	21 e0       	ldi	r18, 0x01	; 1
 966:	30 e0       	ldi	r19, 0x00	; 0
 968:	63 e1       	ldi	r22, 0x13	; 19
 96a:	71 e0       	ldi	r23, 0x01	; 1
 96c:	26 9f       	mul	r18, r22
 96e:	f0 01       	movw	r30, r0
 970:	27 9f       	mul	r18, r23
 972:	f0 0d       	add	r31, r0
 974:	36 9f       	mul	r19, r22
 976:	f0 0d       	add	r31, r0
 978:	11 24       	eor	r1, r1
 97a:	e8 5b       	subi	r30, 0xB8	; 184
 97c:	fc 4f       	sbci	r31, 0xFC	; 252
 97e:	40 81       	ld	r20, Z
 980:	51 81       	ldd	r21, Z+1	; 0x01
 982:	48 17       	cp	r20, r24
 984:	59 07       	cpc	r21, r25
 986:	f9 f4       	brne	.+62     	; 0x9c6 <Task_Suspend+0x70>
 988:	02 c0       	rjmp	.+4      	; 0x98e <Task_Suspend+0x38>
 98a:	20 e0       	ldi	r18, 0x00	; 0
 98c:	30 e0       	ldi	r19, 0x00	; 0
 98e:	43 e1       	ldi	r20, 0x13	; 19
 990:	51 e0       	ldi	r21, 0x01	; 1
 992:	24 9f       	mul	r18, r20
 994:	f0 01       	movw	r30, r0
 996:	25 9f       	mul	r18, r21
 998:	f0 0d       	add	r31, r0
 99a:	34 9f       	mul	r19, r20
 99c:	f0 0d       	add	r31, r0
 99e:	11 24       	eor	r1, r1
 9a0:	e2 5b       	subi	r30, 0xB2	; 178
 9a2:	fc 4f       	sbci	r31, 0xFC	; 252
 9a4:	21 e0       	ldi	r18, 0x01	; 1
 9a6:	30 e0       	ldi	r19, 0x00	; 0
 9a8:	31 83       	std	Z+1, r19	; 0x01
 9aa:	20 83       	st	Z, r18
 9ac:	20 91 0d 02 	lds	r18, 0x020D
 9b0:	30 91 0e 02 	lds	r19, 0x020E
 9b4:	f9 01       	movw	r30, r18
 9b6:	e7 5f       	subi	r30, 0xF7	; 247
 9b8:	fe 4f       	sbci	r31, 0xFE	; 254
 9ba:	40 81       	ld	r20, Z
 9bc:	51 81       	ldd	r21, Z+1	; 0x01
 9be:	48 17       	cp	r20, r24
 9c0:	59 07       	cpc	r21, r25
 9c2:	59 f4       	brne	.+22     	; 0x9da <Task_Suspend+0x84>
 9c4:	03 c0       	rjmp	.+6      	; 0x9cc <Task_Suspend+0x76>
 9c6:	2f 5f       	subi	r18, 0xFF	; 255
 9c8:	3f 4f       	sbci	r19, 0xFF	; 255
 9ca:	d0 cf       	rjmp	.-96     	; 0x96c <Task_Suspend+0x16>
 9cc:	f8 94       	cli
 9ce:	f9 01       	movw	r30, r18
 9d0:	eb 5f       	subi	r30, 0xFB	; 251
 9d2:	fe 4f       	sbci	r31, 0xFE	; 254
 9d4:	85 e0       	ldi	r24, 0x05	; 5
 9d6:	80 83       	st	Z, r24
 9d8:	f6 cb       	rjmp	.-2068   	; 0x1c6 <Enter_Kernel>
 9da:	08 95       	ret

000009dc <Pong2>:
 9dc:	40 e0       	ldi	r20, 0x00	; 0
 9de:	50 e0       	ldi	r21, 0x00	; 0
 9e0:	60 e0       	ldi	r22, 0x00	; 0
 9e2:	86 e7       	ldi	r24, 0x76	; 118
 9e4:	94 e0       	ldi	r25, 0x04	; 4
 9e6:	49 df       	rcall	.-366    	; 0x87a <Task_Create>
 9e8:	ec 01       	movw	r28, r24
 9ea:	00 e0       	ldi	r16, 0x00	; 0
 9ec:	1d e7       	ldi	r17, 0x7D	; 125
 9ee:	10 9a       	sbi	0x02, 0	; 2
 9f0:	20 2f       	mov	r18, r16
 9f2:	31 2f       	mov	r19, r17
 9f4:	21 50       	subi	r18, 0x01	; 1
 9f6:	31 09       	sbc	r19, r1
 9f8:	e9 f7       	brne	.-6      	; 0x9f4 <Pong2+0x18>
 9fa:	80 2f       	mov	r24, r16
 9fc:	91 2f       	mov	r25, r17
 9fe:	01 97       	sbiw	r24, 0x01	; 1
 a00:	f1 f7       	brne	.-4      	; 0x9fe <Pong2+0x22>
 a02:	80 2f       	mov	r24, r16
 a04:	91 2f       	mov	r25, r17
 a06:	01 97       	sbiw	r24, 0x01	; 1
 a08:	f1 f7       	brne	.-4      	; 0xa06 <Pong2+0x2a>
 a0a:	80 2f       	mov	r24, r16
 a0c:	91 2f       	mov	r25, r17
 a0e:	01 97       	sbiw	r24, 0x01	; 1
 a10:	f1 f7       	brne	.-4      	; 0xa0e <Pong2+0x32>
 a12:	ce 01       	movw	r24, r28
 a14:	a0 df       	rcall	.-192    	; 0x956 <Task_Suspend>
 a16:	59 df       	rcall	.-334    	; 0x8ca <Task_Yield>
 a18:	20 2f       	mov	r18, r16
 a1a:	31 2f       	mov	r19, r17
 a1c:	21 50       	subi	r18, 0x01	; 1
 a1e:	31 09       	sbc	r19, r1
 a20:	e9 f7       	brne	.-6      	; 0xa1c <Pong2+0x40>
 a22:	80 2f       	mov	r24, r16
 a24:	91 2f       	mov	r25, r17
 a26:	01 97       	sbiw	r24, 0x01	; 1
 a28:	f1 f7       	brne	.-4      	; 0xa26 <Pong2+0x4a>
 a2a:	20 2f       	mov	r18, r16
 a2c:	31 2f       	mov	r19, r17
 a2e:	21 50       	subi	r18, 0x01	; 1
 a30:	31 09       	sbc	r19, r1
 a32:	e9 f7       	brne	.-6      	; 0xa2e <Pong2+0x52>
 a34:	20 2f       	mov	r18, r16
 a36:	31 2f       	mov	r19, r17
 a38:	21 50       	subi	r18, 0x01	; 1
 a3a:	31 09       	sbc	r19, r1
 a3c:	e9 f7       	brne	.-6      	; 0xa38 <Pong2+0x5c>
 a3e:	d7 cf       	rjmp	.-82     	; 0x9ee <Pong2+0x12>

00000a40 <main>:
	}
}
*/
int main() 
{
   OS_Init();
 a40:	d5 dd       	rcall	.-1110   	; 0x5ec <OS_Init>
   Task_Create( a_main , 0, 0 );
 a42:	40 e0       	ldi	r20, 0x00	; 0
 a44:	50 e0       	ldi	r21, 0x00	; 0
 a46:	60 e0       	ldi	r22, 0x00	; 0
 a48:	8d e5       	ldi	r24, 0x5D	; 93
 a4a:	94 e0       	ldi	r25, 0x04	; 4
 a4c:	16 df       	rcall	.-468    	; 0x87a <Task_Create>
   OS_Start();
 a4e:	16 de       	rcall	.-980    	; 0x67c <OS_Start>
}
 a50:	80 e0       	ldi	r24, 0x00	; 0
 a52:	90 e0       	ldi	r25, 0x00	; 0
 a54:	08 95       	ret

00000a56 <__tablejump2__>:
 a56:	ee 0f       	add	r30, r30
 a58:	ff 1f       	adc	r31, r31
 a5a:	88 1f       	adc	r24, r24
 a5c:	8b bf       	out	0x3b, r24	; 59
 a5e:	07 90       	elpm	r0, Z+
 a60:	f6 91       	elpm	r31, Z
 a62:	e0 2d       	mov	r30, r0
 a64:	19 94       	eijmp

00000a66 <_exit>:
 a66:	f8 94       	cli

00000a68 <__stop_program>:
 a68:	ff cf       	rjmp	.-2      	; 0xa68 <__stop_program>
