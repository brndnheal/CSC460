
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000d5a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ce6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000091c  00800200  00800200  00000d5a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d5a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00000dd0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ea4  00000000  00000000  00000ee0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000437  00000000  00000000  00001d84  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b66  00000000  00000000  000021bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b0  00000000  00000000  00002d24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000056d  00000000  00000000  00002fd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c95  00000000  00000000  00003541  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  000041d6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	7b c0       	rjmp	.+246    	; 0xf8 <__ctors_end>
   2:	00 00       	nop
   4:	8b c0       	rjmp	.+278    	; 0x11c <__bad_interrupt>
   6:	00 00       	nop
   8:	89 c0       	rjmp	.+274    	; 0x11c <__bad_interrupt>
   a:	00 00       	nop
   c:	87 c0       	rjmp	.+270    	; 0x11c <__bad_interrupt>
   e:	00 00       	nop
  10:	85 c0       	rjmp	.+266    	; 0x11c <__bad_interrupt>
  12:	00 00       	nop
  14:	83 c0       	rjmp	.+262    	; 0x11c <__bad_interrupt>
  16:	00 00       	nop
  18:	81 c0       	rjmp	.+258    	; 0x11c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	7f c0       	rjmp	.+254    	; 0x11c <__bad_interrupt>
  1e:	00 00       	nop
  20:	7d c0       	rjmp	.+250    	; 0x11c <__bad_interrupt>
  22:	00 00       	nop
  24:	7b c0       	rjmp	.+246    	; 0x11c <__bad_interrupt>
  26:	00 00       	nop
  28:	79 c0       	rjmp	.+242    	; 0x11c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	77 c0       	rjmp	.+238    	; 0x11c <__bad_interrupt>
  2e:	00 00       	nop
  30:	75 c0       	rjmp	.+234    	; 0x11c <__bad_interrupt>
  32:	00 00       	nop
  34:	73 c0       	rjmp	.+230    	; 0x11c <__bad_interrupt>
  36:	00 00       	nop
  38:	71 c0       	rjmp	.+226    	; 0x11c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	6f c0       	rjmp	.+222    	; 0x11c <__bad_interrupt>
  3e:	00 00       	nop
  40:	6d c0       	rjmp	.+218    	; 0x11c <__bad_interrupt>
  42:	00 00       	nop
  44:	d3 c5       	rjmp	.+2982   	; 0xbec <__vector_17>
  46:	00 00       	nop
  48:	69 c0       	rjmp	.+210    	; 0x11c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	67 c0       	rjmp	.+206    	; 0x11c <__bad_interrupt>
  4e:	00 00       	nop
  50:	65 c0       	rjmp	.+202    	; 0x11c <__bad_interrupt>
  52:	00 00       	nop
  54:	63 c0       	rjmp	.+198    	; 0x11c <__bad_interrupt>
  56:	00 00       	nop
  58:	61 c0       	rjmp	.+194    	; 0x11c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	5f c0       	rjmp	.+190    	; 0x11c <__bad_interrupt>
  5e:	00 00       	nop
  60:	5d c0       	rjmp	.+186    	; 0x11c <__bad_interrupt>
  62:	00 00       	nop
  64:	5b c0       	rjmp	.+182    	; 0x11c <__bad_interrupt>
  66:	00 00       	nop
  68:	59 c0       	rjmp	.+178    	; 0x11c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	57 c0       	rjmp	.+174    	; 0x11c <__bad_interrupt>
  6e:	00 00       	nop
  70:	55 c0       	rjmp	.+170    	; 0x11c <__bad_interrupt>
  72:	00 00       	nop
  74:	53 c0       	rjmp	.+166    	; 0x11c <__bad_interrupt>
  76:	00 00       	nop
  78:	51 c0       	rjmp	.+162    	; 0x11c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	4f c0       	rjmp	.+158    	; 0x11c <__bad_interrupt>
  7e:	00 00       	nop
  80:	4d c0       	rjmp	.+154    	; 0x11c <__bad_interrupt>
  82:	00 00       	nop
  84:	4b c0       	rjmp	.+150    	; 0x11c <__bad_interrupt>
  86:	00 00       	nop
  88:	49 c0       	rjmp	.+146    	; 0x11c <__bad_interrupt>
  8a:	00 00       	nop
  8c:	47 c0       	rjmp	.+142    	; 0x11c <__bad_interrupt>
  8e:	00 00       	nop
  90:	45 c0       	rjmp	.+138    	; 0x11c <__bad_interrupt>
  92:	00 00       	nop
  94:	43 c0       	rjmp	.+134    	; 0x11c <__bad_interrupt>
  96:	00 00       	nop
  98:	41 c0       	rjmp	.+130    	; 0x11c <__bad_interrupt>
  9a:	00 00       	nop
  9c:	3f c0       	rjmp	.+126    	; 0x11c <__bad_interrupt>
  9e:	00 00       	nop
  a0:	3d c0       	rjmp	.+122    	; 0x11c <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3b c0       	rjmp	.+118    	; 0x11c <__bad_interrupt>
  a6:	00 00       	nop
  a8:	39 c0       	rjmp	.+114    	; 0x11c <__bad_interrupt>
  aa:	00 00       	nop
  ac:	37 c0       	rjmp	.+110    	; 0x11c <__bad_interrupt>
  ae:	00 00       	nop
  b0:	35 c0       	rjmp	.+106    	; 0x11c <__bad_interrupt>
  b2:	00 00       	nop
  b4:	33 c0       	rjmp	.+102    	; 0x11c <__bad_interrupt>
  b6:	00 00       	nop
  b8:	31 c0       	rjmp	.+98     	; 0x11c <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2f c0       	rjmp	.+94     	; 0x11c <__bad_interrupt>
  be:	00 00       	nop
  c0:	2d c0       	rjmp	.+90     	; 0x11c <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2b c0       	rjmp	.+86     	; 0x11c <__bad_interrupt>
  c6:	00 00       	nop
  c8:	29 c0       	rjmp	.+82     	; 0x11c <__bad_interrupt>
  ca:	00 00       	nop
  cc:	27 c0       	rjmp	.+78     	; 0x11c <__bad_interrupt>
  ce:	00 00       	nop
  d0:	25 c0       	rjmp	.+74     	; 0x11c <__bad_interrupt>
  d2:	00 00       	nop
  d4:	23 c0       	rjmp	.+70     	; 0x11c <__bad_interrupt>
  d6:	00 00       	nop
  d8:	21 c0       	rjmp	.+66     	; 0x11c <__bad_interrupt>
  da:	00 00       	nop
  dc:	1f c0       	rjmp	.+62     	; 0x11c <__bad_interrupt>
  de:	00 00       	nop
  e0:	1d c0       	rjmp	.+58     	; 0x11c <__bad_interrupt>
  e2:	00 00       	nop
  e4:	35 04       	cpc	r3, r5
  e6:	45 04       	cpc	r4, r5
  e8:	71 04       	cpc	r7, r1
  ea:	7b 04       	cpc	r7, r11
  ec:	5b 04       	cpc	r5, r11
  ee:	4a 04       	cpc	r4, r10
  f0:	6f 04       	cpc	r6, r15
  f2:	33 05       	cpc	r19, r3
  f4:	48 05       	cpc	r20, r8
  f6:	1d 05       	cpc	r17, r13

000000f8 <__ctors_end>:
  f8:	11 24       	eor	r1, r1
  fa:	1f be       	out	0x3f, r1	; 63
  fc:	cf ef       	ldi	r28, 0xFF	; 255
  fe:	d1 e2       	ldi	r29, 0x21	; 33
 100:	de bf       	out	0x3e, r29	; 62
 102:	cd bf       	out	0x3d, r28	; 61
 104:	00 e0       	ldi	r16, 0x00	; 0
 106:	0c bf       	out	0x3c, r16	; 60

00000108 <__do_clear_bss>:
 108:	2b e0       	ldi	r18, 0x0B	; 11
 10a:	a0 e0       	ldi	r26, 0x00	; 0
 10c:	b2 e0       	ldi	r27, 0x02	; 2
 10e:	01 c0       	rjmp	.+2      	; 0x112 <.do_clear_bss_start>

00000110 <.do_clear_bss_loop>:
 110:	1d 92       	st	X+, r1

00000112 <.do_clear_bss_start>:
 112:	ac 31       	cpi	r26, 0x1C	; 28
 114:	b2 07       	cpc	r27, r18
 116:	e1 f7       	brne	.-8      	; 0x110 <.do_clear_bss_loop>
 118:	bd d5       	rcall	.+2938   	; 0xc94 <main>
 11a:	e3 c5       	rjmp	.+3014   	; 0xce2 <_exit>

0000011c <__bad_interrupt>:
 11c:	71 cf       	rjmp	.-286    	; 0x0 <__vectors>

0000011e <CSwitch>:
Exit_Kernel:
        /* 
          * This is the "top" half of CSwitch(), generally called by the kernel.
          * Assume I = 0, i.e., all interrupts are disabled.
          */
        SAVECTX
 11e:	0f 92       	push	r0
 120:	1f 92       	push	r1
 122:	2f 92       	push	r2
 124:	3f 92       	push	r3
 126:	4f 92       	push	r4
 128:	5f 92       	push	r5
 12a:	6f 92       	push	r6
 12c:	7f 92       	push	r7
 12e:	8f 92       	push	r8
 130:	9f 92       	push	r9
 132:	af 92       	push	r10
 134:	bf 92       	push	r11
 136:	cf 92       	push	r12
 138:	df 92       	push	r13
 13a:	ef 92       	push	r14
 13c:	ff 92       	push	r15
 13e:	0f 93       	push	r16
 140:	1f 93       	push	r17
 142:	2f 93       	push	r18
 144:	3f 93       	push	r19
 146:	4f 93       	push	r20
 148:	5f 93       	push	r21
 14a:	6f 93       	push	r22
 14c:	7f 93       	push	r23
 14e:	8f 93       	push	r24
 150:	9f 93       	push	r25
 152:	af 93       	push	r26
 154:	bf 93       	push	r27
 156:	cf 93       	push	r28
 158:	df 93       	push	r29
 15a:	ef 93       	push	r30
 15c:	ff 93       	push	r31
 15e:	0c b7       	in	r16, 0x3c	; 60
 160:	0f 93       	push	r16
 162:	ff b7       	in	r31, 0x3f	; 63
 164:	ff 93       	push	r31
        /* 
          * Now, we have saved the kernel's context.
          * Save the current H/W stack pointer into KernelSp.
          */
        in   r30, SPL
 166:	ed b7       	in	r30, 0x3d	; 61
        in   r31, SPH
 168:	fe b7       	in	r31, 0x3e	; 62
		  in   r16, EIND
 16a:	0c b7       	in	r16, 0x3c	; 60
        sts  KernelSp, r30
 16c:	e0 93 1a 0b 	sts	0x0B1A, r30
        sts  KernelSp+1, r31
 170:	f0 93 1b 0b 	sts	0x0B1B, r31

        /*
          * We are now ready to restore Cp's context, i.e.,
          * switching the H/W stack pointer to CurrentSp.
          */ 
        lds  r30, CurrentSp
 174:	e0 91 18 0b 	lds	r30, 0x0B18
        lds  r31, CurrentSp+1
 178:	f0 91 19 0b 	lds	r31, 0x0B19
        out  SPL, r30
 17c:	ed bf       	out	0x3d, r30	; 61
        out  SPH, r31
 17e:	fe bf       	out	0x3e, r31	; 62
		  out  EIND, r16
 180:	0c bf       	out	0x3c, r16	; 60
        /*
          * We are now executing in Cp's stack.
          * Note: at the bottom of the Cp's context is its return address.
          */
        RESTORECTX
 182:	ff 91       	pop	r31
 184:	ff bf       	out	0x3f, r31	; 63
 186:	0f 91       	pop	r16
 188:	0c bf       	out	0x3c, r16	; 60
 18a:	ff 91       	pop	r31
 18c:	ef 91       	pop	r30
 18e:	df 91       	pop	r29
 190:	cf 91       	pop	r28
 192:	bf 91       	pop	r27
 194:	af 91       	pop	r26
 196:	9f 91       	pop	r25
 198:	8f 91       	pop	r24
 19a:	7f 91       	pop	r23
 19c:	6f 91       	pop	r22
 19e:	5f 91       	pop	r21
 1a0:	4f 91       	pop	r20
 1a2:	3f 91       	pop	r19
 1a4:	2f 91       	pop	r18
 1a6:	1f 91       	pop	r17
 1a8:	0f 91       	pop	r16
 1aa:	ff 90       	pop	r15
 1ac:	ef 90       	pop	r14
 1ae:	df 90       	pop	r13
 1b0:	cf 90       	pop	r12
 1b2:	bf 90       	pop	r11
 1b4:	af 90       	pop	r10
 1b6:	9f 90       	pop	r9
 1b8:	8f 90       	pop	r8
 1ba:	7f 90       	pop	r7
 1bc:	6f 90       	pop	r6
 1be:	5f 90       	pop	r5
 1c0:	4f 90       	pop	r4
 1c2:	3f 90       	pop	r3
 1c4:	2f 90       	pop	r2
 1c6:	1f 90       	pop	r1
 1c8:	0f 90       	pop	r0
        reti         /* re-enable all global interrupts */
 1ca:	18 95       	reti

000001cc <Enter_Kernel>:
Enter_Kernel:   
        /*
          * This is the "bottom" half of CSwitch(). We are still executing in
          * Cp's context.
          */
        SAVECTX
 1cc:	0f 92       	push	r0
 1ce:	1f 92       	push	r1
 1d0:	2f 92       	push	r2
 1d2:	3f 92       	push	r3
 1d4:	4f 92       	push	r4
 1d6:	5f 92       	push	r5
 1d8:	6f 92       	push	r6
 1da:	7f 92       	push	r7
 1dc:	8f 92       	push	r8
 1de:	9f 92       	push	r9
 1e0:	af 92       	push	r10
 1e2:	bf 92       	push	r11
 1e4:	cf 92       	push	r12
 1e6:	df 92       	push	r13
 1e8:	ef 92       	push	r14
 1ea:	ff 92       	push	r15
 1ec:	0f 93       	push	r16
 1ee:	1f 93       	push	r17
 1f0:	2f 93       	push	r18
 1f2:	3f 93       	push	r19
 1f4:	4f 93       	push	r20
 1f6:	5f 93       	push	r21
 1f8:	6f 93       	push	r22
 1fa:	7f 93       	push	r23
 1fc:	8f 93       	push	r24
 1fe:	9f 93       	push	r25
 200:	af 93       	push	r26
 202:	bf 93       	push	r27
 204:	cf 93       	push	r28
 206:	df 93       	push	r29
 208:	ef 93       	push	r30
 20a:	ff 93       	push	r31
 20c:	0c b7       	in	r16, 0x3c	; 60
 20e:	0f 93       	push	r16
 210:	ff b7       	in	r31, 0x3f	; 63
 212:	ff 93       	push	r31
        /* 
          * Now, we have saved the Cp's context.
          * Save the current H/W stack pointer into CurrentSp.
          */
        in   r30, SPL
 214:	ed b7       	in	r30, 0x3d	; 61
        in   r31, SPH
 216:	fe b7       	in	r31, 0x3e	; 62
		  in   r16, EIND
 218:	0c b7       	in	r16, 0x3c	; 60
        sts  CurrentSp, r30
 21a:	e0 93 18 0b 	sts	0x0B18, r30
        sts  CurrentSp+1, r31
 21e:	f0 93 19 0b 	sts	0x0B19, r31
        /*
          * We are now ready to restore kernel's context, i.e.,
          * switching the H/W stack pointer back to KernelSp.
          */ 
        lds  r30, KernelSp
 222:	e0 91 1a 0b 	lds	r30, 0x0B1A
        lds  r31, KernelSp+1
 226:	f0 91 1b 0b 	lds	r31, 0x0B1B
        out  SPL, r30
 22a:	ed bf       	out	0x3d, r30	; 61
        out  SPH, r31
 22c:	fe bf       	out	0x3e, r31	; 62
		  out  EIND, r16
 22e:	0c bf       	out	0x3c, r16	; 60
        /*
          * We are now executing in kernel's stack.
          */
       RESTORECTX
 230:	ff 91       	pop	r31
 232:	ff bf       	out	0x3f, r31	; 63
 234:	0f 91       	pop	r16
 236:	0c bf       	out	0x3c, r16	; 60
 238:	ff 91       	pop	r31
 23a:	ef 91       	pop	r30
 23c:	df 91       	pop	r29
 23e:	cf 91       	pop	r28
 240:	bf 91       	pop	r27
 242:	af 91       	pop	r26
 244:	9f 91       	pop	r25
 246:	8f 91       	pop	r24
 248:	7f 91       	pop	r23
 24a:	6f 91       	pop	r22
 24c:	5f 91       	pop	r21
 24e:	4f 91       	pop	r20
 250:	3f 91       	pop	r19
 252:	2f 91       	pop	r18
 254:	1f 91       	pop	r17
 256:	0f 91       	pop	r16
 258:	ff 90       	pop	r15
 25a:	ef 90       	pop	r14
 25c:	df 90       	pop	r13
 25e:	cf 90       	pop	r12
 260:	bf 90       	pop	r11
 262:	af 90       	pop	r10
 264:	9f 90       	pop	r9
 266:	8f 90       	pop	r8
 268:	7f 90       	pop	r7
 26a:	6f 90       	pop	r6
 26c:	5f 90       	pop	r5
 26e:	4f 90       	pop	r4
 270:	3f 90       	pop	r3
 272:	2f 90       	pop	r2
 274:	1f 90       	pop	r1
 276:	0f 90       	pop	r0
        /* 
          * We are ready to return to the caller of CSwitch() (or Exit_Kernel()).
          * Note: We should NOT re-enable interrupts while kernel is running.
          *         Therefore, we use "ret", and not "reti".
          */
       ret
 278:	08 95       	ret

0000027a <enqueue>:
		Enter_Kernel();
	}
}  
void Task_Resume( PID p ){
	int i;
	for(i=0;i<11;i++){
 27a:	fc 01       	movw	r30, r24
 27c:	db 01       	movw	r26, r22
 27e:	ae 5e       	subi	r26, 0xEE	; 238
 280:	be 4f       	sbci	r27, 0xFE	; 254
 282:	11 96       	adiw	r26, 0x01	; 1
 284:	1c 92       	st	X, r1
 286:	1e 92       	st	-X, r1
 288:	80 81       	ld	r24, Z
 28a:	91 81       	ldd	r25, Z+1	; 0x01
 28c:	89 2b       	or	r24, r25
 28e:	29 f4       	brne	.+10     	; 0x29a <enqueue+0x20>
 290:	71 83       	std	Z+1, r23	; 0x01
 292:	60 83       	st	Z, r22
 294:	73 83       	std	Z+3, r23	; 0x03
 296:	62 83       	std	Z+2, r22	; 0x02
 298:	08 95       	ret
 29a:	a2 81       	ldd	r26, Z+2	; 0x02
 29c:	b3 81       	ldd	r27, Z+3	; 0x03
 29e:	ae 5e       	subi	r26, 0xEE	; 238
 2a0:	be 4f       	sbci	r27, 0xFE	; 254
 2a2:	11 96       	adiw	r26, 0x01	; 1
 2a4:	7c 93       	st	X, r23
 2a6:	6e 93       	st	-X, r22
 2a8:	73 83       	std	Z+3, r23	; 0x03
 2aa:	62 83       	std	Z+2, r22	; 0x02
 2ac:	08 95       	ret

000002ae <dequeue>:
 2ae:	fc 01       	movw	r30, r24
 2b0:	80 81       	ld	r24, Z
 2b2:	91 81       	ldd	r25, Z+1	; 0x01
 2b4:	00 97       	sbiw	r24, 0x00	; 0
 2b6:	b1 f0       	breq	.+44     	; 0x2e4 <dequeue+0x36>
 2b8:	22 81       	ldd	r18, Z+2	; 0x02
 2ba:	33 81       	ldd	r19, Z+3	; 0x03
 2bc:	82 17       	cp	r24, r18
 2be:	93 07       	cpc	r25, r19
 2c0:	29 f4       	brne	.+10     	; 0x2cc <dequeue+0x1e>
 2c2:	11 82       	std	Z+1, r1	; 0x01
 2c4:	10 82       	st	Z, r1
 2c6:	13 82       	std	Z+3, r1	; 0x03
 2c8:	12 82       	std	Z+2, r1	; 0x02
 2ca:	07 c0       	rjmp	.+14     	; 0x2da <dequeue+0x2c>
 2cc:	dc 01       	movw	r26, r24
 2ce:	ae 5e       	subi	r26, 0xEE	; 238
 2d0:	be 4f       	sbci	r27, 0xFE	; 254
 2d2:	2d 91       	ld	r18, X+
 2d4:	3c 91       	ld	r19, X
 2d6:	31 83       	std	Z+1, r19	; 0x01
 2d8:	20 83       	st	Z, r18
 2da:	fc 01       	movw	r30, r24
 2dc:	ee 5e       	subi	r30, 0xEE	; 238
 2de:	fe 4f       	sbci	r31, 0xFE	; 254
 2e0:	11 82       	std	Z+1, r1	; 0x01
 2e2:	10 82       	st	Z, r1
 2e4:	08 95       	ret

000002e6 <_delay_25ms>:
 2e6:	80 e5       	ldi	r24, 0x50	; 80
 2e8:	93 ec       	ldi	r25, 0xC3	; 195
 2ea:	a0 e0       	ldi	r26, 0x00	; 0
 2ec:	b0 e0       	ldi	r27, 0x00	; 0
 2ee:	01 97       	sbiw	r24, 0x01	; 1
 2f0:	f1 f7       	brne	.-4      	; 0x2ee <_delay_25ms+0x8>
 2f2:	08 95       	ret

000002f4 <Pong>:
 2f4:	08 95       	ret

000002f6 <Task_Terminate>:
 2f6:	80 91 09 02 	lds	r24, 0x0209
 2fa:	90 91 0a 02 	lds	r25, 0x020A
 2fe:	89 2b       	or	r24, r25
 300:	51 f0       	breq	.+20     	; 0x316 <Task_Terminate+0x20>
 302:	f8 94       	cli
 304:	e0 91 0f 02 	lds	r30, 0x020F
 308:	f0 91 10 02 	lds	r31, 0x0210
 30c:	eb 5f       	subi	r30, 0xFB	; 251
 30e:	fe 4f       	sbci	r31, 0xFE	; 254
 310:	83 e0       	ldi	r24, 0x03	; 3
 312:	80 83       	st	Z, r24
 314:	5b cf       	rjmp	.-330    	; 0x1cc <Enter_Kernel>
 316:	08 95       	ret

00000318 <check_rqueue>:
 318:	cf 93       	push	r28
 31a:	df 93       	push	r29
 31c:	c0 91 0f 02 	lds	r28, 0x020F
 320:	d0 91 10 02 	lds	r29, 0x0210
 324:	fe 01       	movw	r30, r28
 326:	e8 5f       	subi	r30, 0xF8	; 248
 328:	fe 4f       	sbci	r31, 0xFE	; 254
 32a:	80 81       	ld	r24, Z
 32c:	88 23       	and	r24, r24
 32e:	59 f1       	breq	.+86     	; 0x386 <check_rqueue+0x6e>
 330:	ac e1       	ldi	r26, 0x1C	; 28
 332:	b2 e0       	ldi	r27, 0x02	; 2
 334:	40 e0       	ldi	r20, 0x00	; 0
 336:	50 e0       	ldi	r21, 0x00	; 0
 338:	ef 01       	movw	r28, r30
 33a:	8d 91       	ld	r24, X+
 33c:	9c 91       	ld	r25, X
 33e:	11 97       	sbiw	r26, 0x01	; 1
 340:	00 97       	sbiw	r24, 0x00	; 0
 342:	b1 f0       	breq	.+44     	; 0x370 <check_rqueue+0x58>
 344:	fc 01       	movw	r30, r24
 346:	e0 5f       	subi	r30, 0xF0	; 240
 348:	fe 4f       	sbci	r31, 0xFE	; 254
 34a:	20 81       	ld	r18, Z
 34c:	31 81       	ldd	r19, Z+1	; 0x01
 34e:	23 2b       	or	r18, r19
 350:	41 f4       	brne	.+16     	; 0x362 <check_rqueue+0x4a>
 352:	1c c0       	rjmp	.+56     	; 0x38c <check_rqueue+0x74>
 354:	fc 01       	movw	r30, r24
 356:	e0 5f       	subi	r30, 0xF0	; 240
 358:	fe 4f       	sbci	r31, 0xFE	; 254
 35a:	20 81       	ld	r18, Z
 35c:	31 81       	ldd	r19, Z+1	; 0x01
 35e:	23 2b       	or	r18, r19
 360:	c1 f0       	breq	.+48     	; 0x392 <check_rqueue+0x7a>
 362:	fc 01       	movw	r30, r24
 364:	ee 5e       	subi	r30, 0xEE	; 238
 366:	fe 4f       	sbci	r31, 0xFE	; 254
 368:	80 81       	ld	r24, Z
 36a:	91 81       	ldd	r25, Z+1	; 0x01
 36c:	00 97       	sbiw	r24, 0x00	; 0
 36e:	91 f7       	brne	.-28     	; 0x354 <check_rqueue+0x3c>
 370:	4f 5f       	subi	r20, 0xFF	; 255
 372:	5f 4f       	sbci	r21, 0xFF	; 255
 374:	88 81       	ld	r24, Y
 376:	14 96       	adiw	r26, 0x04	; 4
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	48 17       	cp	r20, r24
 37c:	59 07       	cpc	r21, r25
 37e:	ec f2       	brlt	.-70     	; 0x33a <check_rqueue+0x22>
 380:	80 e0       	ldi	r24, 0x00	; 0
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	08 c0       	rjmp	.+16     	; 0x396 <check_rqueue+0x7e>
 386:	80 e0       	ldi	r24, 0x00	; 0
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	05 c0       	rjmp	.+10     	; 0x396 <check_rqueue+0x7e>
 38c:	81 e0       	ldi	r24, 0x01	; 1
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	02 c0       	rjmp	.+4      	; 0x396 <check_rqueue+0x7e>
 392:	81 e0       	ldi	r24, 0x01	; 1
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	df 91       	pop	r29
 398:	cf 91       	pop	r28
 39a:	08 95       	ret

0000039c <set_timer>:
 39c:	10 92 80 00 	sts	0x0080, r1
 3a0:	e1 e8       	ldi	r30, 0x81	; 129
 3a2:	f0 e0       	ldi	r31, 0x00	; 0
 3a4:	10 82       	st	Z, r1
 3a6:	80 81       	ld	r24, Z
 3a8:	88 60       	ori	r24, 0x08	; 8
 3aa:	80 83       	st	Z, r24
 3ac:	80 81       	ld	r24, Z
 3ae:	82 60       	ori	r24, 0x02	; 2
 3b0:	80 83       	st	Z, r24
 3b2:	80 e2       	ldi	r24, 0x20	; 32
 3b4:	9e e4       	ldi	r25, 0x4E	; 78
 3b6:	90 93 89 00 	sts	0x0089, r25
 3ba:	80 93 88 00 	sts	0x0088, r24
 3be:	ef e6       	ldi	r30, 0x6F	; 111
 3c0:	f0 e0       	ldi	r31, 0x00	; 0
 3c2:	80 81       	ld	r24, Z
 3c4:	82 60       	ori	r24, 0x02	; 2
 3c6:	80 83       	st	Z, r24
 3c8:	08 95       	ret

000003ca <OS_Init>:
 3ca:	81 e0       	ldi	r24, 0x01	; 1
 3cc:	81 b9       	out	0x01, r24	; 1
 3ce:	09 9a       	sbi	0x01, 1	; 1
 3d0:	10 98       	cbi	0x02, 0	; 2
 3d2:	11 98       	cbi	0x02, 1	; 2
 3d4:	38 9a       	sbi	0x07, 0	; 7
 3d6:	39 9a       	sbi	0x07, 1	; 7
 3d8:	3a 9a       	sbi	0x07, 2	; 7
 3da:	3b 9a       	sbi	0x07, 3	; 7
 3dc:	40 98       	cbi	0x08, 0	; 8
 3de:	41 98       	cbi	0x08, 1	; 8
 3e0:	42 98       	cbi	0x08, 2	; 8
 3e2:	43 98       	cbi	0x08, 3	; 8
 3e4:	db df       	rcall	.-74     	; 0x39c <set_timer>
 3e6:	10 92 08 02 	sts	0x0208, r1
 3ea:	10 92 07 02 	sts	0x0207, r1
 3ee:	10 92 0a 02 	sts	0x020A, r1
 3f2:	10 92 09 02 	sts	0x0209, r1
 3f6:	10 92 0c 02 	sts	0x020C, r1
 3fa:	10 92 0b 02 	sts	0x020B, r1
 3fe:	a8 e7       	ldi	r26, 0x78	; 120
 400:	b2 e0       	ldi	r27, 0x02	; 2
 402:	20 e0       	ldi	r18, 0x00	; 0
 404:	30 e0       	ldi	r19, 0x00	; 0
 406:	44 e1       	ldi	r20, 0x14	; 20
 408:	51 e0       	ldi	r21, 0x01	; 1
 40a:	fd 01       	movw	r30, r26
 40c:	ca 01       	movw	r24, r20
 40e:	11 92       	st	Z+, r1
 410:	01 97       	sbiw	r24, 0x01	; 1
 412:	e9 f7       	brne	.-6      	; 0x40e <OS_Init+0x44>
 414:	24 9f       	mul	r18, r20
 416:	c0 01       	movw	r24, r0
 418:	25 9f       	mul	r18, r21
 41a:	90 0d       	add	r25, r0
 41c:	34 9f       	mul	r19, r20
 41e:	90 0d       	add	r25, r0
 420:	11 24       	eor	r1, r1
 422:	88 58       	subi	r24, 0x88	; 136
 424:	9d 4f       	sbci	r25, 0xFD	; 253
 426:	fc 01       	movw	r30, r24
 428:	ee 5f       	subi	r30, 0xFE	; 254
 42a:	fe 4f       	sbci	r31, 0xFE	; 254
 42c:	10 82       	st	Z, r1
 42e:	38 96       	adiw	r30, 0x08	; 8
 430:	31 83       	std	Z+1, r19	; 0x01
 432:	20 83       	st	Z, r18
 434:	ac 5e       	subi	r26, 0xEC	; 236
 436:	be 4f       	sbci	r27, 0xFE	; 254
 438:	38 96       	adiw	r30, 0x08	; 8
 43a:	b1 83       	std	Z+1, r27	; 0x01
 43c:	a0 83       	st	Z, r26
 43e:	2f 5f       	subi	r18, 0xFF	; 255
 440:	3f 4f       	sbci	r19, 0xFF	; 255
 442:	27 30       	cpi	r18, 0x07	; 7
 444:	31 05       	cpc	r19, r1
 446:	09 f7       	brne	.-62     	; 0x40a <OS_Init+0x40>
 448:	e8 e4       	ldi	r30, 0x48	; 72
 44a:	f2 e0       	ldi	r31, 0x02	; 2
 44c:	80 e0       	ldi	r24, 0x00	; 0
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	2f ef       	ldi	r18, 0xFF	; 255
 452:	3f ef       	ldi	r19, 0xFF	; 255
 454:	dc 01       	movw	r26, r24
 456:	aa 0f       	add	r26, r26
 458:	bb 1f       	adc	r27, r27
 45a:	a8 59       	subi	r26, 0x98	; 152
 45c:	bd 4f       	sbci	r27, 0xFD	; 253
 45e:	11 96       	adiw	r26, 0x01	; 1
 460:	3c 93       	st	X, r19
 462:	2e 93       	st	-X, r18
 464:	11 82       	std	Z+1, r1	; 0x01
 466:	10 82       	st	Z, r1
 468:	13 82       	std	Z+3, r1	; 0x03
 46a:	12 82       	std	Z+2, r1	; 0x02
 46c:	01 96       	adiw	r24, 0x01	; 1
 46e:	34 96       	adiw	r30, 0x04	; 4
 470:	88 30       	cpi	r24, 0x08	; 8
 472:	91 05       	cpc	r25, r1
 474:	79 f7       	brne	.-34     	; 0x454 <OS_Init+0x8a>
 476:	10 92 06 0b 	sts	0x0B06, r1
 47a:	10 92 17 0b 	sts	0x0B17, r1
 47e:	10 92 16 0b 	sts	0x0B16, r1
 482:	e4 e1       	ldi	r30, 0x14	; 20
 484:	f2 e0       	ldi	r31, 0x02	; 2
 486:	88 e7       	ldi	r24, 0x78	; 120
 488:	92 e0       	ldi	r25, 0x02	; 2
 48a:	91 83       	std	Z+1, r25	; 0x01
 48c:	80 83       	st	Z, r24
 48e:	84 e0       	ldi	r24, 0x04	; 4
 490:	9a e0       	ldi	r25, 0x0A	; 10
 492:	93 83       	std	Z+3, r25	; 0x03
 494:	82 83       	std	Z+2, r24	; 0x02
 496:	08 95       	ret

00000498 <OS_Abort>:
 498:	80 91 11 02 	lds	r24, 0x0211
 49c:	82 30       	cpi	r24, 0x02	; 2
 49e:	81 f0       	breq	.+32     	; 0x4c0 <OS_Abort+0x28>
 4a0:	28 f4       	brcc	.+10     	; 0x4ac <OS_Abort+0x14>
 4a2:	88 23       	and	r24, r24
 4a4:	49 f0       	breq	.+18     	; 0x4b8 <OS_Abort+0x20>
 4a6:	81 30       	cpi	r24, 0x01	; 1
 4a8:	49 f0       	breq	.+18     	; 0x4bc <OS_Abort+0x24>
 4aa:	08 95       	ret
 4ac:	84 30       	cpi	r24, 0x04	; 4
 4ae:	61 f0       	breq	.+24     	; 0x4c8 <OS_Abort+0x30>
 4b0:	48 f0       	brcs	.+18     	; 0x4c4 <OS_Abort+0x2c>
 4b2:	85 30       	cpi	r24, 0x05	; 5
 4b4:	b1 f0       	breq	.+44     	; 0x4e2 <OS_Abort+0x4a>
 4b6:	08 95       	ret
 4b8:	40 9a       	sbi	0x08, 0	; 8
 4ba:	08 95       	ret
 4bc:	41 9a       	sbi	0x08, 1	; 8
 4be:	08 95       	ret
 4c0:	42 9a       	sbi	0x08, 2	; 8
 4c2:	08 95       	ret
 4c4:	43 9a       	sbi	0x08, 3	; 8
 4c6:	08 95       	ret
 4c8:	88 b1       	in	r24, 0x08	; 8
 4ca:	8f 60       	ori	r24, 0x0F	; 15
 4cc:	88 b9       	out	0x08, r24	; 8
 4ce:	0b df       	rcall	.-490    	; 0x2e6 <_delay_25ms>
 4d0:	0a df       	rcall	.-492    	; 0x2e6 <_delay_25ms>
 4d2:	09 df       	rcall	.-494    	; 0x2e6 <_delay_25ms>
 4d4:	88 b1       	in	r24, 0x08	; 8
 4d6:	80 7f       	andi	r24, 0xF0	; 240
 4d8:	88 b9       	out	0x08, r24	; 8
 4da:	05 df       	rcall	.-502    	; 0x2e6 <_delay_25ms>
 4dc:	04 df       	rcall	.-504    	; 0x2e6 <_delay_25ms>
 4de:	03 df       	rcall	.-506    	; 0x2e6 <_delay_25ms>
 4e0:	f3 cf       	rjmp	.-26     	; 0x4c8 <OS_Abort+0x30>
 4e2:	88 b1       	in	r24, 0x08	; 8
 4e4:	89 60       	ori	r24, 0x09	; 9
 4e6:	88 b9       	out	0x08, r24	; 8
 4e8:	fe de       	rcall	.-516    	; 0x2e6 <_delay_25ms>
 4ea:	fd de       	rcall	.-518    	; 0x2e6 <_delay_25ms>
 4ec:	fc de       	rcall	.-520    	; 0x2e6 <_delay_25ms>
 4ee:	88 b1       	in	r24, 0x08	; 8
 4f0:	86 7f       	andi	r24, 0xF6	; 246
 4f2:	88 b9       	out	0x08, r24	; 8
 4f4:	f8 de       	rcall	.-528    	; 0x2e6 <_delay_25ms>
 4f6:	f7 de       	rcall	.-530    	; 0x2e6 <_delay_25ms>
 4f8:	f6 de       	rcall	.-532    	; 0x2e6 <_delay_25ms>
 4fa:	f3 cf       	rjmp	.-26     	; 0x4e2 <OS_Abort+0x4a>

000004fc <Dispatch>:
 4fc:	cf 93       	push	r28
 4fe:	df 93       	push	r29
 500:	cc e1       	ldi	r28, 0x1C	; 28
 502:	d2 e0       	ldi	r29, 0x02	; 2
 504:	40 e0       	ldi	r20, 0x00	; 0
 506:	50 e0       	ldi	r21, 0x00	; 0
 508:	a8 81       	ld	r26, Y
 50a:	b9 81       	ldd	r27, Y+1	; 0x01
 50c:	10 97       	sbiw	r26, 0x00	; 0
 50e:	09 f4       	brne	.+2      	; 0x512 <Dispatch+0x16>
 510:	a2 c0       	rjmp	.+324    	; 0x656 <Dispatch+0x15a>
 512:	fd 01       	movw	r30, r26
 514:	e0 5f       	subi	r30, 0xF0	; 240
 516:	fe 4f       	sbci	r31, 0xFE	; 254
 518:	80 81       	ld	r24, Z
 51a:	91 81       	ldd	r25, Z+1	; 0x01
 51c:	89 2b       	or	r24, r25
 51e:	61 f0       	breq	.+24     	; 0x538 <Dispatch+0x3c>
 520:	cd 01       	movw	r24, r26
 522:	91 c0       	rjmp	.+290    	; 0x646 <Dispatch+0x14a>
 524:	fc 01       	movw	r30, r24
 526:	e0 5f       	subi	r30, 0xF0	; 240
 528:	fe 4f       	sbci	r31, 0xFE	; 254
 52a:	20 81       	ld	r18, Z
 52c:	31 81       	ldd	r19, Z+1	; 0x01
 52e:	23 2b       	or	r18, r19
 530:	09 f0       	breq	.+2      	; 0x534 <Dispatch+0x38>
 532:	89 c0       	rjmp	.+274    	; 0x646 <Dispatch+0x14a>
 534:	cd 01       	movw	r24, r26
 536:	01 c0       	rjmp	.+2      	; 0x53a <Dispatch+0x3e>
 538:	cd 01       	movw	r24, r26
 53a:	fc 01       	movw	r30, r24
 53c:	e0 5f       	subi	r30, 0xF0	; 240
 53e:	fe 4f       	sbci	r31, 0xFE	; 254
 540:	20 81       	ld	r18, Z
 542:	31 81       	ldd	r19, Z+1	; 0x01
 544:	23 2b       	or	r18, r19
 546:	31 f5       	brne	.+76     	; 0x594 <Dispatch+0x98>
 548:	fa 01       	movw	r30, r20
 54a:	ee 0f       	add	r30, r30
 54c:	ff 1f       	adc	r31, r31
 54e:	ee 0f       	add	r30, r30
 550:	ff 1f       	adc	r31, r31
 552:	e4 5e       	subi	r30, 0xE4	; 228
 554:	fd 4f       	sbci	r31, 0xFD	; 253
 556:	22 81       	ldd	r18, Z+2	; 0x02
 558:	33 81       	ldd	r19, Z+3	; 0x03
 55a:	82 17       	cp	r24, r18
 55c:	93 07       	cpc	r25, r19
 55e:	49 f4       	brne	.+18     	; 0x572 <Dispatch+0x76>
 560:	fa 01       	movw	r30, r20
 562:	ee 0f       	add	r30, r30
 564:	ff 1f       	adc	r31, r31
 566:	ee 0f       	add	r30, r30
 568:	ff 1f       	adc	r31, r31
 56a:	e4 5e       	subi	r30, 0xE4	; 228
 56c:	fd 4f       	sbci	r31, 0xFD	; 253
 56e:	13 82       	std	Z+3, r1	; 0x03
 570:	12 82       	std	Z+2, r1	; 0x02
 572:	fc 01       	movw	r30, r24
 574:	ee 5e       	subi	r30, 0xEE	; 238
 576:	fe 4f       	sbci	r31, 0xFE	; 254
 578:	80 81       	ld	r24, Z
 57a:	91 81       	ldd	r25, Z+1	; 0x01
 57c:	44 0f       	add	r20, r20
 57e:	55 1f       	adc	r21, r21
 580:	44 0f       	add	r20, r20
 582:	55 1f       	adc	r21, r21
 584:	ea 01       	movw	r28, r20
 586:	c4 5e       	subi	r28, 0xE4	; 228
 588:	dd 4f       	sbci	r29, 0xFD	; 253
 58a:	99 83       	std	Y+1, r25	; 0x01
 58c:	88 83       	st	Y, r24
 58e:	11 82       	std	Z+1, r1	; 0x01
 590:	10 82       	st	Z, r1
 592:	48 c0       	rjmp	.+144    	; 0x624 <Dispatch+0x128>
 594:	fc 01       	movw	r30, r24
 596:	ee 5e       	subi	r30, 0xEE	; 238
 598:	fe 4f       	sbci	r31, 0xFE	; 254
 59a:	80 81       	ld	r24, Z
 59c:	91 81       	ldd	r25, Z+1	; 0x01
 59e:	00 97       	sbiw	r24, 0x00	; 0
 5a0:	f1 f1       	breq	.+124    	; 0x61e <Dispatch+0x122>
 5a2:	fc 01       	movw	r30, r24
 5a4:	e0 5f       	subi	r30, 0xF0	; 240
 5a6:	fe 4f       	sbci	r31, 0xFE	; 254
 5a8:	20 81       	ld	r18, Z
 5aa:	31 81       	ldd	r19, Z+1	; 0x01
 5ac:	23 2b       	or	r18, r19
 5ae:	59 f5       	brne	.+86     	; 0x606 <Dispatch+0x10a>
 5b0:	07 c0       	rjmp	.+14     	; 0x5c0 <Dispatch+0xc4>
 5b2:	fc 01       	movw	r30, r24
 5b4:	e0 5f       	subi	r30, 0xF0	; 240
 5b6:	fe 4f       	sbci	r31, 0xFE	; 254
 5b8:	20 81       	ld	r18, Z
 5ba:	31 81       	ldd	r19, Z+1	; 0x01
 5bc:	23 2b       	or	r18, r19
 5be:	19 f5       	brne	.+70     	; 0x606 <Dispatch+0x10a>
 5c0:	fa 01       	movw	r30, r20
 5c2:	ee 0f       	add	r30, r30
 5c4:	ff 1f       	adc	r31, r31
 5c6:	ee 0f       	add	r30, r30
 5c8:	ff 1f       	adc	r31, r31
 5ca:	e4 5e       	subi	r30, 0xE4	; 228
 5cc:	fd 4f       	sbci	r31, 0xFD	; 253
 5ce:	22 81       	ldd	r18, Z+2	; 0x02
 5d0:	33 81       	ldd	r19, Z+3	; 0x03
 5d2:	82 17       	cp	r24, r18
 5d4:	93 07       	cpc	r25, r19
 5d6:	49 f4       	brne	.+18     	; 0x5ea <Dispatch+0xee>
 5d8:	44 0f       	add	r20, r20
 5da:	55 1f       	adc	r21, r21
 5dc:	44 0f       	add	r20, r20
 5de:	55 1f       	adc	r21, r21
 5e0:	fa 01       	movw	r30, r20
 5e2:	e4 5e       	subi	r30, 0xE4	; 228
 5e4:	fd 4f       	sbci	r31, 0xFD	; 253
 5e6:	b3 83       	std	Z+3, r27	; 0x03
 5e8:	a2 83       	std	Z+2, r26	; 0x02
 5ea:	fc 01       	movw	r30, r24
 5ec:	ee 5e       	subi	r30, 0xEE	; 238
 5ee:	fe 4f       	sbci	r31, 0xFE	; 254
 5f0:	20 81       	ld	r18, Z
 5f2:	31 81       	ldd	r19, Z+1	; 0x01
 5f4:	ae 5e       	subi	r26, 0xEE	; 238
 5f6:	be 4f       	sbci	r27, 0xFE	; 254
 5f8:	11 96       	adiw	r26, 0x01	; 1
 5fa:	3c 93       	st	X, r19
 5fc:	2e 93       	st	-X, r18
 5fe:	11 82       	std	Z+1, r1	; 0x01
 600:	10 82       	st	Z, r1
 602:	dc 01       	movw	r26, r24
 604:	0f c0       	rjmp	.+30     	; 0x624 <Dispatch+0x128>
 606:	ae 5e       	subi	r26, 0xEE	; 238
 608:	be 4f       	sbci	r27, 0xFE	; 254
 60a:	0d 90       	ld	r0, X+
 60c:	bc 91       	ld	r27, X
 60e:	a0 2d       	mov	r26, r0
 610:	fc 01       	movw	r30, r24
 612:	ee 5e       	subi	r30, 0xEE	; 238
 614:	fe 4f       	sbci	r31, 0xFE	; 254
 616:	80 81       	ld	r24, Z
 618:	91 81       	ldd	r25, Z+1	; 0x01
 61a:	00 97       	sbiw	r24, 0x00	; 0
 61c:	51 f6       	brne	.-108    	; 0x5b2 <Dispatch+0xb6>
 61e:	3c df       	rcall	.-392    	; 0x498 <OS_Abort>
 620:	a0 e0       	ldi	r26, 0x00	; 0
 622:	b0 e0       	ldi	r27, 0x00	; 0
 624:	b0 93 10 02 	sts	0x0210, r27
 628:	a0 93 0f 02 	sts	0x020F, r26
 62c:	8d 91       	ld	r24, X+
 62e:	9c 91       	ld	r25, X
 630:	11 97       	sbiw	r26, 0x01	; 1
 632:	90 93 19 0b 	sts	0x0B19, r25
 636:	80 93 18 0b 	sts	0x0B18, r24
 63a:	ae 5f       	subi	r26, 0xFE	; 254
 63c:	be 4f       	sbci	r27, 0xFE	; 254
 63e:	83 e0       	ldi	r24, 0x03	; 3
 640:	8c 93       	st	X, r24
 642:	78 94       	sei
 644:	0f c0       	rjmp	.+30     	; 0x664 <Dispatch+0x168>
 646:	fc 01       	movw	r30, r24
 648:	ee 5e       	subi	r30, 0xEE	; 238
 64a:	fe 4f       	sbci	r31, 0xFE	; 254
 64c:	80 81       	ld	r24, Z
 64e:	91 81       	ldd	r25, Z+1	; 0x01
 650:	00 97       	sbiw	r24, 0x00	; 0
 652:	09 f0       	breq	.+2      	; 0x656 <Dispatch+0x15a>
 654:	67 cf       	rjmp	.-306    	; 0x524 <Dispatch+0x28>
 656:	4f 5f       	subi	r20, 0xFF	; 255
 658:	5f 4f       	sbci	r21, 0xFF	; 255
 65a:	24 96       	adiw	r28, 0x04	; 4
 65c:	4b 30       	cpi	r20, 0x0B	; 11
 65e:	51 05       	cpc	r21, r1
 660:	09 f0       	breq	.+2      	; 0x664 <Dispatch+0x168>
 662:	52 cf       	rjmp	.-348    	; 0x508 <Dispatch+0xc>
 664:	df 91       	pop	r29
 666:	cf 91       	pop	r28
 668:	08 95       	ret

0000066a <preemption>:
 66a:	56 de       	rcall	.-852    	; 0x318 <check_rqueue>
 66c:	89 2b       	or	r24, r25
 66e:	31 f1       	breq	.+76     	; 0x6bc <preemption+0x52>
 670:	80 91 0f 02 	lds	r24, 0x020F
 674:	90 91 10 02 	lds	r25, 0x0210
 678:	fc 01       	movw	r30, r24
 67a:	ee 5f       	subi	r30, 0xFE	; 254
 67c:	fe 4f       	sbci	r31, 0xFE	; 254
 67e:	21 e0       	ldi	r18, 0x01	; 1
 680:	20 83       	st	Z, r18
 682:	dc 01       	movw	r26, r24
 684:	a8 5f       	subi	r26, 0xF8	; 248
 686:	be 4f       	sbci	r27, 0xFE	; 254
 688:	ec 91       	ld	r30, X
 68a:	f0 e0       	ldi	r31, 0x00	; 0
 68c:	ee 0f       	add	r30, r30
 68e:	ff 1f       	adc	r31, r31
 690:	ee 0f       	add	r30, r30
 692:	ff 1f       	adc	r31, r31
 694:	e4 5e       	subi	r30, 0xE4	; 228
 696:	fd 4f       	sbci	r31, 0xFD	; 253
 698:	20 81       	ld	r18, Z
 69a:	31 81       	ldd	r19, Z+1	; 0x01
 69c:	fc 01       	movw	r30, r24
 69e:	ee 5e       	subi	r30, 0xEE	; 238
 6a0:	fe 4f       	sbci	r31, 0xFE	; 254
 6a2:	31 83       	std	Z+1, r19	; 0x01
 6a4:	20 83       	st	Z, r18
 6a6:	ec 91       	ld	r30, X
 6a8:	f0 e0       	ldi	r31, 0x00	; 0
 6aa:	ee 0f       	add	r30, r30
 6ac:	ff 1f       	adc	r31, r31
 6ae:	ee 0f       	add	r30, r30
 6b0:	ff 1f       	adc	r31, r31
 6b2:	e4 5e       	subi	r30, 0xE4	; 228
 6b4:	fd 4f       	sbci	r31, 0xFD	; 253
 6b6:	91 83       	std	Z+1, r25	; 0x01
 6b8:	80 83       	st	Z, r24
 6ba:	20 cf       	rjmp	.-448    	; 0x4fc <Dispatch>
 6bc:	08 95       	ret

000006be <Kernel_Create_Task>:
 6be:	df 92       	push	r13
 6c0:	ef 92       	push	r14
 6c2:	ff 92       	push	r15
 6c4:	0f 93       	push	r16
 6c6:	1f 93       	push	r17
 6c8:	cf 93       	push	r28
 6ca:	df 93       	push	r29
 6cc:	8c 01       	movw	r16, r24
 6ce:	d6 2e       	mov	r13, r22
 6d0:	7a 01       	movw	r14, r20
 6d2:	80 91 07 02 	lds	r24, 0x0207
 6d6:	90 91 08 02 	lds	r25, 0x0208
 6da:	08 97       	sbiw	r24, 0x08	; 8
 6dc:	19 f4       	brne	.+6      	; 0x6e4 <Kernel_Create_Task+0x26>
 6de:	10 92 11 02 	sts	0x0211, r1
 6e2:	da de       	rcall	.-588    	; 0x498 <OS_Abort>
 6e4:	84 e1       	ldi	r24, 0x14	; 20
 6e6:	92 e0       	ldi	r25, 0x02	; 2
 6e8:	e2 dd       	rcall	.-1084   	; 0x2ae <dequeue>
 6ea:	ec 01       	movw	r28, r24
 6ec:	80 91 07 02 	lds	r24, 0x0207
 6f0:	90 91 08 02 	lds	r25, 0x0208
 6f4:	01 96       	adiw	r24, 0x01	; 1
 6f6:	90 93 08 02 	sts	0x0208, r25
 6fa:	80 93 07 02 	sts	0x0207, r24
 6fe:	fe 01       	movw	r30, r28
 700:	32 96       	adiw	r30, 0x02	; 2
 702:	80 e0       	ldi	r24, 0x00	; 0
 704:	91 e0       	ldi	r25, 0x01	; 1
 706:	df 01       	movw	r26, r30
 708:	9c 01       	movw	r18, r24
 70a:	1d 92       	st	X+, r1
 70c:	21 50       	subi	r18, 0x01	; 1
 70e:	30 40       	sbci	r19, 0x00	; 0
 710:	e1 f7       	brne	.-8      	; 0x70a <Kernel_Create_Task+0x4c>
 712:	e1 50       	subi	r30, 0x01	; 1
 714:	ff 4f       	sbci	r31, 0xFF	; 255
 716:	8b e7       	ldi	r24, 0x7B	; 123
 718:	91 e0       	ldi	r25, 0x01	; 1
 71a:	80 83       	st	Z, r24
 71c:	31 97       	sbiw	r30, 0x01	; 1
 71e:	90 83       	st	Z, r25
 720:	31 97       	sbiw	r30, 0x01	; 1
 722:	10 82       	st	Z, r1
 724:	31 97       	sbiw	r30, 0x01	; 1
 726:	00 83       	st	Z, r16
 728:	31 97       	sbiw	r30, 0x01	; 1
 72a:	10 83       	st	Z, r17
 72c:	31 97       	sbiw	r30, 0x01	; 1
 72e:	10 82       	st	Z, r1
 730:	ce 01       	movw	r24, r28
 732:	87 52       	subi	r24, 0x27	; 39
 734:	9f 4f       	sbci	r25, 0xFF	; 255
 736:	99 83       	std	Y+1, r25	; 0x01
 738:	88 83       	st	Y, r24
 73a:	37 96       	adiw	r30, 0x07	; 7
 73c:	11 83       	std	Z+1, r17	; 0x01
 73e:	00 83       	st	Z, r16
 740:	32 96       	adiw	r30, 0x02	; 2
 742:	10 82       	st	Z, r1
 744:	37 96       	adiw	r30, 0x07	; 7
 746:	f1 82       	std	Z+1, r15	; 0x01
 748:	e0 82       	st	Z, r14
 74a:	34 97       	sbiw	r30, 0x04	; 4
 74c:	d0 82       	st	Z, r13
 74e:	de 01       	movw	r26, r28
 750:	a7 5f       	subi	r26, 0xF7	; 247
 752:	be 4f       	sbci	r27, 0xFE	; 254
 754:	8f ef       	ldi	r24, 0xFF	; 255
 756:	8c 93       	st	X, r24
 758:	17 96       	adiw	r26, 0x07	; 7
 75a:	11 96       	adiw	r26, 0x01	; 1
 75c:	1c 92       	st	X, r1
 75e:	1e 92       	st	-X, r1
 760:	1e 97       	sbiw	r26, 0x0e	; 14
 762:	81 e0       	ldi	r24, 0x01	; 1
 764:	8c 93       	st	X, r24
 766:	80 81       	ld	r24, Z
 768:	90 e0       	ldi	r25, 0x00	; 0
 76a:	88 0f       	add	r24, r24
 76c:	99 1f       	adc	r25, r25
 76e:	88 0f       	add	r24, r24
 770:	99 1f       	adc	r25, r25
 772:	be 01       	movw	r22, r28
 774:	84 5e       	subi	r24, 0xE4	; 228
 776:	9d 4f       	sbci	r25, 0xFD	; 253
 778:	80 dd       	rcall	.-1280   	; 0x27a <enqueue>
 77a:	c6 5f       	subi	r28, 0xF6	; 246
 77c:	de 4f       	sbci	r29, 0xFE	; 254
 77e:	88 81       	ld	r24, Y
 780:	99 81       	ldd	r25, Y+1	; 0x01
 782:	df 91       	pop	r29
 784:	cf 91       	pop	r28
 786:	1f 91       	pop	r17
 788:	0f 91       	pop	r16
 78a:	ff 90       	pop	r15
 78c:	ef 90       	pop	r14
 78e:	df 90       	pop	r13
 790:	08 95       	ret

00000792 <Ping>:
 792:	10 92 11 02 	sts	0x0211, r1
 796:	80 ce       	rjmp	.-768    	; 0x498 <OS_Abort>
 798:	08 95       	ret

0000079a <OS_Start>:
 79a:	2f 92       	push	r2
 79c:	3f 92       	push	r3
 79e:	4f 92       	push	r4
 7a0:	5f 92       	push	r5
 7a2:	6f 92       	push	r6
 7a4:	7f 92       	push	r7
 7a6:	8f 92       	push	r8
 7a8:	9f 92       	push	r9
 7aa:	af 92       	push	r10
 7ac:	bf 92       	push	r11
 7ae:	cf 92       	push	r12
 7b0:	df 92       	push	r13
 7b2:	ef 92       	push	r14
 7b4:	ff 92       	push	r15
 7b6:	0f 93       	push	r16
 7b8:	1f 93       	push	r17
 7ba:	cf 93       	push	r28
 7bc:	df 93       	push	r29
 7be:	80 91 09 02 	lds	r24, 0x0209
 7c2:	90 91 0a 02 	lds	r25, 0x020A
 7c6:	89 2b       	or	r24, r25
 7c8:	09 f0       	breq	.+2      	; 0x7cc <OS_Start+0x32>
 7ca:	cf c1       	rjmp	.+926    	; 0xb6a <OS_Start+0x3d0>
 7cc:	80 91 07 02 	lds	r24, 0x0207
 7d0:	90 91 08 02 	lds	r25, 0x0208
 7d4:	89 2b       	or	r24, r25
 7d6:	09 f4       	brne	.+2      	; 0x7da <OS_Start+0x40>
 7d8:	c8 c1       	rjmp	.+912    	; 0xb6a <OS_Start+0x3d0>
 7da:	f8 94       	cli
 7dc:	81 e0       	ldi	r24, 0x01	; 1
 7de:	90 e0       	ldi	r25, 0x00	; 0
 7e0:	90 93 0a 02 	sts	0x020A, r25
 7e4:	80 93 09 02 	sts	0x0209, r24
 7e8:	89 de       	rcall	.-750    	; 0x4fc <Dispatch>
 7ea:	bb 24       	eor	r11, r11
 7ec:	b3 94       	inc	r11
 7ee:	68 94       	set
 7f0:	aa 24       	eor	r10, r10
 7f2:	a1 f8       	bld	r10, 1
 7f4:	0f 2e       	mov	r0, r31
 7f6:	44 24       	eor	r4, r4
 7f8:	4a 94       	dec	r4
 7fa:	ff e7       	ldi	r31, 0x7F	; 127
 7fc:	5f 2e       	mov	r5, r31
 7fe:	f0 2d       	mov	r31, r0
 800:	22 24       	eor	r2, r2
 802:	23 94       	inc	r2
 804:	31 2c       	mov	r3, r1
 806:	0f 2e       	mov	r0, r31
 808:	f0 e0       	ldi	r31, 0x00	; 0
 80a:	6f 2e       	mov	r6, r31
 80c:	f2 e0       	ldi	r31, 0x02	; 2
 80e:	7f 2e       	mov	r7, r31
 810:	f0 2d       	mov	r31, r0
 812:	e0 91 0f 02 	lds	r30, 0x020F
 816:	f0 91 10 02 	lds	r31, 0x0210
 81a:	80 81       	ld	r24, Z
 81c:	91 81       	ldd	r25, Z+1	; 0x01
 81e:	90 93 19 0b 	sts	0x0B19, r25
 822:	80 93 18 0b 	sts	0x0B18, r24
 826:	e0 5f       	subi	r30, 0xF0	; 240
 828:	fe 4f       	sbci	r31, 0xFE	; 254
 82a:	80 81       	ld	r24, Z
 82c:	91 81       	ldd	r25, Z+1	; 0x01
 82e:	89 2b       	or	r24, r25
 830:	09 f0       	breq	.+2      	; 0x834 <OS_Start+0x9a>
 832:	32 de       	rcall	.-924    	; 0x498 <OS_Abort>
 834:	74 dc       	rcall	.-1816   	; 0x11e <CSwitch>
 836:	c0 91 0f 02 	lds	r28, 0x020F
 83a:	d0 91 10 02 	lds	r29, 0x0210
 83e:	80 91 18 0b 	lds	r24, 0x0B18
 842:	90 91 19 0b 	lds	r25, 0x0B19
 846:	99 83       	std	Y+1, r25	; 0x01
 848:	88 83       	st	Y, r24
 84a:	fe 01       	movw	r30, r28
 84c:	eb 5f       	subi	r30, 0xFB	; 251
 84e:	fe 4f       	sbci	r31, 0xFE	; 254
 850:	e0 81       	ld	r30, Z
 852:	8e 2f       	mov	r24, r30
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	fc 01       	movw	r30, r24
 858:	31 97       	sbiw	r30, 0x01	; 1
 85a:	ea 30       	cpi	r30, 0x0A	; 10
 85c:	f1 05       	cpc	r31, r1
 85e:	c8 f6       	brcc	.-78     	; 0x812 <OS_Start+0x78>
 860:	88 27       	eor	r24, r24
 862:	ee 58       	subi	r30, 0x8E	; 142
 864:	ff 4f       	sbci	r31, 0xFF	; 255
 866:	8f 4f       	sbci	r24, 0xFF	; 255
 868:	34 c2       	rjmp	.+1128   	; 0xcd2 <__tablejump2__>
 86a:	d3 01       	movw	r26, r6
 86c:	12 96       	adiw	r26, 0x02	; 2
 86e:	4d 91       	ld	r20, X+
 870:	5c 91       	ld	r21, X
 872:	13 97       	sbiw	r26, 0x03	; 3
 874:	14 96       	adiw	r26, 0x04	; 4
 876:	6c 91       	ld	r22, X
 878:	14 97       	sbiw	r26, 0x04	; 4
 87a:	8d 91       	ld	r24, X+
 87c:	9c 91       	ld	r25, X
 87e:	1f df       	rcall	.-450    	; 0x6be <Kernel_Create_Task>
 880:	f3 01       	movw	r30, r6
 882:	96 83       	std	Z+6, r25	; 0x06
 884:	85 83       	std	Z+5, r24	; 0x05
 886:	f1 de       	rcall	.-542    	; 0x66a <preemption>
 888:	c4 cf       	rjmp	.-120    	; 0x812 <OS_Start+0x78>
 88a:	ce 5f       	subi	r28, 0xFE	; 254
 88c:	de 4f       	sbci	r29, 0xFE	; 254
 88e:	b8 82       	st	Y, r11
 890:	35 de       	rcall	.-918    	; 0x4fc <Dispatch>
 892:	bf cf       	rjmp	.-130    	; 0x812 <OS_Start+0x78>
 894:	fe 01       	movw	r30, r28
 896:	ee 5f       	subi	r30, 0xFE	; 254
 898:	fe 4f       	sbci	r31, 0xFE	; 254
 89a:	b0 82       	st	Z, r11
 89c:	36 96       	adiw	r30, 0x06	; 6
 89e:	80 81       	ld	r24, Z
 8a0:	90 e0       	ldi	r25, 0x00	; 0
 8a2:	88 0f       	add	r24, r24
 8a4:	99 1f       	adc	r25, r25
 8a6:	88 0f       	add	r24, r24
 8a8:	99 1f       	adc	r25, r25
 8aa:	be 01       	movw	r22, r28
 8ac:	84 5e       	subi	r24, 0xE4	; 228
 8ae:	9d 4f       	sbci	r25, 0xFD	; 253
 8b0:	e4 dc       	rcall	.-1592   	; 0x27a <enqueue>
 8b2:	24 de       	rcall	.-952    	; 0x4fc <Dispatch>
 8b4:	ae cf       	rjmp	.-164    	; 0x812 <OS_Start+0x78>
 8b6:	fe 01       	movw	r30, r28
 8b8:	ee 5f       	subi	r30, 0xFE	; 254
 8ba:	fe 4f       	sbci	r31, 0xFE	; 254
 8bc:	b0 82       	st	Z, r11
 8be:	3e 96       	adiw	r30, 0x0e	; 14
 8c0:	31 82       	std	Z+1, r3	; 0x01
 8c2:	20 82       	st	Z, r2
 8c4:	38 97       	sbiw	r30, 0x08	; 8
 8c6:	80 81       	ld	r24, Z
 8c8:	90 e0       	ldi	r25, 0x00	; 0
 8ca:	88 0f       	add	r24, r24
 8cc:	99 1f       	adc	r25, r25
 8ce:	88 0f       	add	r24, r24
 8d0:	99 1f       	adc	r25, r25
 8d2:	be 01       	movw	r22, r28
 8d4:	84 5e       	subi	r24, 0xE4	; 228
 8d6:	9d 4f       	sbci	r25, 0xFD	; 253
 8d8:	d0 dc       	rcall	.-1632   	; 0x27a <enqueue>
 8da:	10 de       	rcall	.-992    	; 0x4fc <Dispatch>
 8dc:	9a cf       	rjmp	.-204    	; 0x812 <OS_Start+0x78>
 8de:	c5 de       	rcall	.-630    	; 0x66a <preemption>
 8e0:	98 cf       	rjmp	.-208    	; 0x812 <OS_Start+0x78>
 8e2:	fe 01       	movw	r30, r28
 8e4:	ee 5f       	subi	r30, 0xFE	; 254
 8e6:	fe 4f       	sbci	r31, 0xFE	; 254
 8e8:	10 82       	st	Z, r1
 8ea:	be 01       	movw	r22, r28
 8ec:	84 e1       	ldi	r24, 0x14	; 20
 8ee:	92 e0       	ldi	r25, 0x02	; 2
 8f0:	c4 dc       	rcall	.-1656   	; 0x27a <enqueue>
 8f2:	04 de       	rcall	.-1016   	; 0x4fc <Dispatch>
 8f4:	8e cf       	rjmp	.-228    	; 0x812 <OS_Start+0x78>
 8f6:	fe 01       	movw	r30, r28
 8f8:	ee 5f       	subi	r30, 0xFE	; 254
 8fa:	fe 4f       	sbci	r31, 0xFE	; 254
 8fc:	84 e0       	ldi	r24, 0x04	; 4
 8fe:	80 83       	st	Z, r24
 900:	70 96       	adiw	r30, 0x10	; 16
 902:	11 82       	std	Z+1, r1	; 0x01
 904:	10 82       	st	Z, r1
 906:	3c 97       	sbiw	r30, 0x0c	; 12
 908:	80 81       	ld	r24, Z
 90a:	91 81       	ldd	r25, Z+1	; 0x01
 90c:	b2 01       	movw	r22, r4
 90e:	cd d1       	rcall	.+922    	; 0xcaa <__udivmodhi4>
 910:	6b 01       	movw	r12, r22
 912:	e0 80       	ld	r14, Z
 914:	f1 80       	ldd	r15, Z+1	; 0x01
 916:	e0 91 18 02 	lds	r30, 0x0218
 91a:	f0 91 19 02 	lds	r31, 0x0219
 91e:	30 97       	sbiw	r30, 0x00	; 0
 920:	39 f4       	brne	.+14     	; 0x930 <OS_Start+0x196>
 922:	e8 e1       	ldi	r30, 0x18	; 24
 924:	f2 e0       	ldi	r31, 0x02	; 2
 926:	d1 83       	std	Z+1, r29	; 0x01
 928:	c0 83       	st	Z, r28
 92a:	d3 83       	std	Z+3, r29	; 0x03
 92c:	c2 83       	std	Z+2, r28	; 0x02
 92e:	83 c0       	rjmp	.+262    	; 0xa36 <OS_Start+0x29c>
 930:	9f 01       	movw	r18, r30
 932:	2a 5f       	subi	r18, 0xFA	; 250
 934:	3e 4f       	sbci	r19, 0xFE	; 254
 936:	d9 01       	movw	r26, r18
 938:	8d 91       	ld	r24, X+
 93a:	9c 91       	ld	r25, X
 93c:	b2 01       	movw	r22, r4
 93e:	b5 d1       	rcall	.+874    	; 0xcaa <__udivmodhi4>
 940:	8b 01       	movw	r16, r22
 942:	d9 01       	movw	r26, r18
 944:	2d 91       	ld	r18, X+
 946:	3c 91       	ld	r19, X
 948:	c6 16       	cp	r12, r22
 94a:	d7 06       	cpc	r13, r23
 94c:	4c f4       	brge	.+18     	; 0x960 <OS_Start+0x1c6>
 94e:	d0 93 19 02 	sts	0x0219, r29
 952:	c0 93 18 02 	sts	0x0218, r28
 956:	ce 5e       	subi	r28, 0xEE	; 238
 958:	de 4f       	sbci	r29, 0xFE	; 254
 95a:	f9 83       	std	Y+1, r31	; 0x01
 95c:	e8 83       	st	Y, r30
 95e:	6b c0       	rjmp	.+214    	; 0xa36 <OS_Start+0x29c>
 960:	c7 01       	movw	r24, r14
 962:	b2 01       	movw	r22, r4
 964:	a2 d1       	rcall	.+836    	; 0xcaa <__udivmodhi4>
 966:	4c 01       	movw	r8, r24
 968:	c0 16       	cp	r12, r16
 96a:	d1 06       	cpc	r13, r17
 96c:	81 f4       	brne	.+32     	; 0x98e <OS_Start+0x1f4>
 96e:	c9 01       	movw	r24, r18
 970:	b2 01       	movw	r22, r4
 972:	9b d1       	rcall	.+822    	; 0xcaa <__udivmodhi4>
 974:	88 16       	cp	r8, r24
 976:	99 06       	cpc	r9, r25
 978:	0c f0       	brlt	.+2      	; 0x97c <OS_Start+0x1e2>
 97a:	5d c0       	rjmp	.+186    	; 0xa36 <OS_Start+0x29c>
 97c:	d0 93 19 02 	sts	0x0219, r29
 980:	c0 93 18 02 	sts	0x0218, r28
 984:	ce 5e       	subi	r28, 0xEE	; 238
 986:	de 4f       	sbci	r29, 0xFE	; 254
 988:	f9 83       	std	Y+1, r31	; 0x01
 98a:	e8 83       	st	Y, r30
 98c:	54 c0       	rjmp	.+168    	; 0xa36 <OS_Start+0x29c>
 98e:	df 01       	movw	r26, r30
 990:	ae 5e       	subi	r26, 0xEE	; 238
 992:	be 4f       	sbci	r27, 0xFE	; 254
 994:	2d 91       	ld	r18, X+
 996:	3c 91       	ld	r19, X
 998:	21 15       	cp	r18, r1
 99a:	31 05       	cpc	r19, r1
 99c:	09 f4       	brne	.+2      	; 0x9a0 <OS_Start+0x206>
 99e:	43 c0       	rjmp	.+134    	; 0xa26 <OS_Start+0x28c>
 9a0:	79 01       	movw	r14, r18
 9a2:	ba ef       	ldi	r27, 0xFA	; 250
 9a4:	eb 1a       	sub	r14, r27
 9a6:	be ef       	ldi	r27, 0xFE	; 254
 9a8:	fb 0a       	sbc	r15, r27
 9aa:	d7 01       	movw	r26, r14
 9ac:	8d 91       	ld	r24, X+
 9ae:	9c 91       	ld	r25, X
 9b0:	b2 01       	movw	r22, r4
 9b2:	7b d1       	rcall	.+758    	; 0xcaa <__udivmodhi4>
 9b4:	8b 01       	movw	r16, r22
 9b6:	d7 01       	movw	r26, r14
 9b8:	8d 91       	ld	r24, X+
 9ba:	9c 91       	ld	r25, X
 9bc:	b2 01       	movw	r22, r4
 9be:	75 d1       	rcall	.+746    	; 0xcaa <__udivmodhi4>
 9c0:	c0 16       	cp	r12, r16
 9c2:	d1 06       	cpc	r13, r17
 9c4:	94 f0       	brlt	.+36     	; 0x9ea <OS_Start+0x250>
 9c6:	7e 01       	movw	r14, r28
 9c8:	15 c0       	rjmp	.+42     	; 0x9f4 <OS_Start+0x25a>
 9ca:	e9 01       	movw	r28, r18
 9cc:	ca 5f       	subi	r28, 0xFA	; 250
 9ce:	de 4f       	sbci	r29, 0xFE	; 254
 9d0:	88 81       	ld	r24, Y
 9d2:	99 81       	ldd	r25, Y+1	; 0x01
 9d4:	b2 01       	movw	r22, r4
 9d6:	69 d1       	rcall	.+722    	; 0xcaa <__udivmodhi4>
 9d8:	8b 01       	movw	r16, r22
 9da:	88 81       	ld	r24, Y
 9dc:	99 81       	ldd	r25, Y+1	; 0x01
 9de:	b2 01       	movw	r22, r4
 9e0:	64 d1       	rcall	.+712    	; 0xcaa <__udivmodhi4>
 9e2:	c0 16       	cp	r12, r16
 9e4:	d1 06       	cpc	r13, r17
 9e6:	34 f4       	brge	.+12     	; 0x9f4 <OS_Start+0x25a>
 9e8:	e7 01       	movw	r28, r14
 9ea:	ee 5e       	subi	r30, 0xEE	; 238
 9ec:	fe 4f       	sbci	r31, 0xFE	; 254
 9ee:	d1 83       	std	Z+1, r29	; 0x01
 9f0:	c0 83       	st	Z, r28
 9f2:	21 c0       	rjmp	.+66     	; 0xa36 <OS_Start+0x29c>
 9f4:	c0 16       	cp	r12, r16
 9f6:	d1 06       	cpc	r13, r17
 9f8:	41 f4       	brne	.+16     	; 0xa0a <OS_Start+0x270>
 9fa:	88 16       	cp	r8, r24
 9fc:	99 06       	cpc	r9, r25
 9fe:	2c f4       	brge	.+10     	; 0xa0a <OS_Start+0x270>
 a00:	ee 5e       	subi	r30, 0xEE	; 238
 a02:	fe 4f       	sbci	r31, 0xFE	; 254
 a04:	f1 82       	std	Z+1, r15	; 0x01
 a06:	e0 82       	st	Z, r14
 a08:	16 c0       	rjmp	.+44     	; 0xa36 <OS_Start+0x29c>
 a0a:	ee 5e       	subi	r30, 0xEE	; 238
 a0c:	fe 4f       	sbci	r31, 0xFE	; 254
 a0e:	01 90       	ld	r0, Z+
 a10:	f0 81       	ld	r31, Z
 a12:	e0 2d       	mov	r30, r0
 a14:	d9 01       	movw	r26, r18
 a16:	ae 5e       	subi	r26, 0xEE	; 238
 a18:	be 4f       	sbci	r27, 0xFE	; 254
 a1a:	2d 91       	ld	r18, X+
 a1c:	3c 91       	ld	r19, X
 a1e:	21 15       	cp	r18, r1
 a20:	31 05       	cpc	r19, r1
 a22:	99 f6       	brne	.-90     	; 0x9ca <OS_Start+0x230>
 a24:	e7 01       	movw	r28, r14
 a26:	ee 5e       	subi	r30, 0xEE	; 238
 a28:	fe 4f       	sbci	r31, 0xFE	; 254
 a2a:	d1 83       	std	Z+1, r29	; 0x01
 a2c:	c0 83       	st	Z, r28
 a2e:	d0 93 1b 02 	sts	0x021B, r29
 a32:	c0 93 1a 02 	sts	0x021A, r28
 a36:	62 dd       	rcall	.-1340   	; 0x4fc <Dispatch>
 a38:	ec ce       	rjmp	.-552    	; 0x812 <OS_Start+0x78>
 a3a:	88 e1       	ldi	r24, 0x18	; 24
 a3c:	92 e0       	ldi	r25, 0x02	; 2
 a3e:	37 dc       	rcall	.-1938   	; 0x2ae <dequeue>
 a40:	90 93 0e 02 	sts	0x020E, r25
 a44:	80 93 0d 02 	sts	0x020D, r24
 a48:	fc 01       	movw	r30, r24
 a4a:	e8 5f       	subi	r30, 0xF8	; 248
 a4c:	fe 4f       	sbci	r31, 0xFE	; 254
 a4e:	20 81       	ld	r18, Z
 a50:	30 e0       	ldi	r19, 0x00	; 0
 a52:	22 0f       	add	r18, r18
 a54:	33 1f       	adc	r19, r19
 a56:	22 0f       	add	r18, r18
 a58:	33 1f       	adc	r19, r19
 a5a:	bc 01       	movw	r22, r24
 a5c:	c9 01       	movw	r24, r18
 a5e:	84 5e       	subi	r24, 0xE4	; 228
 a60:	9d 4f       	sbci	r25, 0xFD	; 253
 a62:	0b dc       	rcall	.-2026   	; 0x27a <enqueue>
 a64:	02 de       	rcall	.-1020   	; 0x66a <preemption>
 a66:	60 91 0f 02 	lds	r22, 0x020F
 a6a:	70 91 10 02 	lds	r23, 0x0210
 a6e:	fb 01       	movw	r30, r22
 a70:	ee 5f       	subi	r30, 0xFE	; 254
 a72:	fe 4f       	sbci	r31, 0xFE	; 254
 a74:	a0 82       	st	Z, r10
 a76:	80 91 12 02 	lds	r24, 0x0212
 a7a:	90 91 13 02 	lds	r25, 0x0213
 a7e:	88 0f       	add	r24, r24
 a80:	99 1f       	adc	r25, r25
 a82:	88 0f       	add	r24, r24
 a84:	99 1f       	adc	r25, r25
 a86:	88 5b       	subi	r24, 0xB8	; 184
 a88:	9d 4f       	sbci	r25, 0xFD	; 253
 a8a:	f7 db       	rcall	.-2066   	; 0x27a <enqueue>
 a8c:	37 dd       	rcall	.-1426   	; 0x4fc <Dispatch>
 a8e:	c1 ce       	rjmp	.-638    	; 0x812 <OS_Start+0x78>
 a90:	e0 91 12 02 	lds	r30, 0x0212
 a94:	f0 91 13 02 	lds	r31, 0x0213
 a98:	ee 0f       	add	r30, r30
 a9a:	ff 1f       	adc	r31, r31
 a9c:	ee 0f       	add	r30, r30
 a9e:	ff 1f       	adc	r31, r31
 aa0:	e8 5b       	subi	r30, 0xB8	; 184
 aa2:	fd 4f       	sbci	r31, 0xFD	; 253
 aa4:	80 81       	ld	r24, Z
 aa6:	91 81       	ldd	r25, Z+1	; 0x01
 aa8:	89 2b       	or	r24, r25
 aaa:	09 f4       	brne	.+2      	; 0xaae <OS_Start+0x314>
 aac:	41 c0       	rjmp	.+130    	; 0xb30 <OS_Start+0x396>
 aae:	80 91 12 02 	lds	r24, 0x0212
 ab2:	90 91 13 02 	lds	r25, 0x0213
 ab6:	88 0f       	add	r24, r24
 ab8:	99 1f       	adc	r25, r25
 aba:	88 0f       	add	r24, r24
 abc:	99 1f       	adc	r25, r25
 abe:	88 5b       	subi	r24, 0xB8	; 184
 ac0:	9d 4f       	sbci	r25, 0xFD	; 253
 ac2:	f5 db       	rcall	.-2070   	; 0x2ae <dequeue>
 ac4:	bc 01       	movw	r22, r24
 ac6:	e0 91 12 02 	lds	r30, 0x0212
 aca:	f0 91 13 02 	lds	r31, 0x0213
 ace:	dc 01       	movw	r26, r24
 ad0:	a6 5f       	subi	r26, 0xF6	; 246
 ad2:	be 4f       	sbci	r27, 0xFE	; 254
 ad4:	8d 91       	ld	r24, X+
 ad6:	9c 91       	ld	r25, X
 ad8:	ee 0f       	add	r30, r30
 ada:	ff 1f       	adc	r31, r31
 adc:	e8 59       	subi	r30, 0x98	; 152
 ade:	fd 4f       	sbci	r31, 0xFD	; 253
 ae0:	91 83       	std	Z+1, r25	; 0x01
 ae2:	80 83       	st	Z, r24
 ae4:	fe 01       	movw	r30, r28
 ae6:	e8 5f       	subi	r30, 0xF8	; 248
 ae8:	fe 4f       	sbci	r31, 0xFE	; 254
 aea:	90 81       	ld	r25, Z
 aec:	fb 01       	movw	r30, r22
 aee:	e8 5f       	subi	r30, 0xF8	; 248
 af0:	fe 4f       	sbci	r31, 0xFE	; 254
 af2:	80 81       	ld	r24, Z
 af4:	98 17       	cp	r25, r24
 af6:	68 f4       	brcc	.+26     	; 0xb12 <OS_Start+0x378>
 af8:	fe 01       	movw	r30, r28
 afa:	e7 5f       	subi	r30, 0xF7	; 247
 afc:	fe 4f       	sbci	r31, 0xFE	; 254
 afe:	90 81       	ld	r25, Z
 b00:	fb 01       	movw	r30, r22
 b02:	e7 5f       	subi	r30, 0xF7	; 247
 b04:	fe 4f       	sbci	r31, 0xFE	; 254
 b06:	80 83       	st	Z, r24
 b08:	c8 5f       	subi	r28, 0xF8	; 248
 b0a:	de 4f       	sbci	r29, 0xFE	; 254
 b0c:	88 81       	ld	r24, Y
 b0e:	31 97       	sbiw	r30, 0x01	; 1
 b10:	80 83       	st	Z, r24
 b12:	fb 01       	movw	r30, r22
 b14:	ee 5f       	subi	r30, 0xFE	; 254
 b16:	fe 4f       	sbci	r31, 0xFE	; 254
 b18:	b0 82       	st	Z, r11
 b1a:	36 96       	adiw	r30, 0x06	; 6
 b1c:	80 81       	ld	r24, Z
 b1e:	90 e0       	ldi	r25, 0x00	; 0
 b20:	88 0f       	add	r24, r24
 b22:	99 1f       	adc	r25, r25
 b24:	88 0f       	add	r24, r24
 b26:	99 1f       	adc	r25, r25
 b28:	84 5e       	subi	r24, 0xE4	; 228
 b2a:	9d 4f       	sbci	r25, 0xFD	; 253
 b2c:	a6 db       	rcall	.-2228   	; 0x27a <enqueue>
 b2e:	0c c0       	rjmp	.+24     	; 0xb48 <OS_Start+0x3ae>
 b30:	e0 91 12 02 	lds	r30, 0x0212
 b34:	f0 91 13 02 	lds	r31, 0x0213
 b38:	ee 0f       	add	r30, r30
 b3a:	ff 1f       	adc	r31, r31
 b3c:	e8 59       	subi	r30, 0x98	; 152
 b3e:	fd 4f       	sbci	r31, 0xFD	; 253
 b40:	8f ef       	ldi	r24, 0xFF	; 255
 b42:	9f ef       	ldi	r25, 0xFF	; 255
 b44:	91 83       	std	Z+1, r25	; 0x01
 b46:	80 83       	st	Z, r24
 b48:	80 91 0f 02 	lds	r24, 0x020F
 b4c:	90 91 10 02 	lds	r25, 0x0210
 b50:	dc 01       	movw	r26, r24
 b52:	a7 5f       	subi	r26, 0xF7	; 247
 b54:	be 4f       	sbci	r27, 0xFE	; 254
 b56:	2c 91       	ld	r18, X
 b58:	2c 91       	ld	r18, X
 b5a:	fc 01       	movw	r30, r24
 b5c:	e8 5f       	subi	r30, 0xF8	; 248
 b5e:	fe 4f       	sbci	r31, 0xFE	; 254
 b60:	20 83       	st	Z, r18
 b62:	9f ef       	ldi	r25, 0xFF	; 255
 b64:	9c 93       	st	X, r25
 b66:	81 dd       	rcall	.-1278   	; 0x66a <preemption>
 b68:	54 ce       	rjmp	.-856    	; 0x812 <OS_Start+0x78>
 b6a:	df 91       	pop	r29
 b6c:	cf 91       	pop	r28
 b6e:	1f 91       	pop	r17
 b70:	0f 91       	pop	r16
 b72:	ff 90       	pop	r15
 b74:	ef 90       	pop	r14
 b76:	df 90       	pop	r13
 b78:	cf 90       	pop	r12
 b7a:	bf 90       	pop	r11
 b7c:	af 90       	pop	r10
 b7e:	9f 90       	pop	r9
 b80:	8f 90       	pop	r8
 b82:	7f 90       	pop	r7
 b84:	6f 90       	pop	r6
 b86:	5f 90       	pop	r5
 b88:	4f 90       	pop	r4
 b8a:	3f 90       	pop	r3
 b8c:	2f 90       	pop	r2
 b8e:	08 95       	ret

00000b90 <Task_Create>:
 b90:	cf 93       	push	r28
 b92:	df 93       	push	r29
 b94:	20 91 09 02 	lds	r18, 0x0209
 b98:	30 91 0a 02 	lds	r19, 0x020A
 b9c:	23 2b       	or	r18, r19
 b9e:	a1 f0       	breq	.+40     	; 0xbc8 <Task_Create+0x38>
 ba0:	f8 94       	cli
 ba2:	c0 e0       	ldi	r28, 0x00	; 0
 ba4:	d2 e0       	ldi	r29, 0x02	; 2
 ba6:	99 83       	std	Y+1, r25	; 0x01
 ba8:	88 83       	st	Y, r24
 baa:	5b 83       	std	Y+3, r21	; 0x03
 bac:	4a 83       	std	Y+2, r20	; 0x02
 bae:	6c 83       	std	Y+4, r22	; 0x04
 bb0:	e0 91 0f 02 	lds	r30, 0x020F
 bb4:	f0 91 10 02 	lds	r31, 0x0210
 bb8:	eb 5f       	subi	r30, 0xFB	; 251
 bba:	fe 4f       	sbci	r31, 0xFE	; 254
 bbc:	81 e0       	ldi	r24, 0x01	; 1
 bbe:	80 83       	st	Z, r24
 bc0:	05 db       	rcall	.-2550   	; 0x1cc <Enter_Kernel>
 bc2:	8d 81       	ldd	r24, Y+5	; 0x05
 bc4:	9e 81       	ldd	r25, Y+6	; 0x06
 bc6:	01 c0       	rjmp	.+2      	; 0xbca <Task_Create+0x3a>
 bc8:	7a dd       	rcall	.-1292   	; 0x6be <Kernel_Create_Task>
 bca:	df 91       	pop	r29
 bcc:	cf 91       	pop	r28
 bce:	08 95       	ret

00000bd0 <a_main>:
 bd0:	40 e0       	ldi	r20, 0x00	; 0
 bd2:	50 e0       	ldi	r21, 0x00	; 0
 bd4:	60 e0       	ldi	r22, 0x00	; 0
 bd6:	89 ec       	ldi	r24, 0xC9	; 201
 bd8:	93 e0       	ldi	r25, 0x03	; 3
 bda:	da df       	rcall	.-76     	; 0xb90 <Task_Create>
 bdc:	40 e0       	ldi	r20, 0x00	; 0
 bde:	50 e0       	ldi	r21, 0x00	; 0
 be0:	60 e0       	ldi	r22, 0x00	; 0
 be2:	8a e7       	ldi	r24, 0x7A	; 122
 be4:	91 e0       	ldi	r25, 0x01	; 1
 be6:	d4 df       	rcall	.-88     	; 0xb90 <Task_Create>
 be8:	86 cb       	rjmp	.-2292   	; 0x2f6 <Task_Terminate>
 bea:	08 95       	ret

00000bec <__vector_17>:
	 Task_Terminate();
 }
 

ISR(TIMER1_COMPA_vect)
{
 bec:	1f 92       	push	r1
 bee:	0f 92       	push	r0
 bf0:	0f b6       	in	r0, 0x3f	; 63
 bf2:	0f 92       	push	r0
 bf4:	11 24       	eor	r1, r1
 bf6:	0b b6       	in	r0, 0x3b	; 59
 bf8:	0f 92       	push	r0
 bfa:	2f 93       	push	r18
 bfc:	3f 93       	push	r19
 bfe:	4f 93       	push	r20
 c00:	5f 93       	push	r21
 c02:	6f 93       	push	r22
 c04:	7f 93       	push	r23
 c06:	8f 93       	push	r24
 c08:	9f 93       	push	r25
 c0a:	af 93       	push	r26
 c0c:	bf 93       	push	r27
 c0e:	ef 93       	push	r30
 c10:	ff 93       	push	r31
	volatile PD* curr;
	curr = sleep_queue.head;
 c12:	40 91 18 02 	lds	r20, 0x0218
 c16:	50 91 19 02 	lds	r21, 0x0219
	while(curr!= NULL){
 c1a:	41 15       	cp	r20, r1
 c1c:	51 05       	cpc	r21, r1
 c1e:	39 f1       	breq	.+78     	; 0xc6e <__vector_17+0x82>
 c20:	ca 01       	movw	r24, r20
		if(curr->tick!=0){
 c22:	fc 01       	movw	r30, r24
 c24:	ea 5f       	subi	r30, 0xFA	; 250
 c26:	fe 4f       	sbci	r31, 0xFE	; 254
 c28:	20 81       	ld	r18, Z
 c2a:	31 81       	ldd	r19, Z+1	; 0x01
 c2c:	23 2b       	or	r18, r19
 c2e:	31 f0       	breq	.+12     	; 0xc3c <__vector_17+0x50>
			curr->tick--;
 c30:	20 81       	ld	r18, Z
 c32:	31 81       	ldd	r19, Z+1	; 0x01
 c34:	21 50       	subi	r18, 0x01	; 1
 c36:	31 09       	sbc	r19, r1
 c38:	31 83       	std	Z+1, r19	; 0x01
 c3a:	20 83       	st	Z, r18
		}

		curr = curr->next;
 c3c:	fc 01       	movw	r30, r24
 c3e:	ee 5e       	subi	r30, 0xEE	; 238
 c40:	fe 4f       	sbci	r31, 0xFE	; 254
 c42:	80 81       	ld	r24, Z
 c44:	91 81       	ldd	r25, Z+1	; 0x01

ISR(TIMER1_COMPA_vect)
{
	volatile PD* curr;
	curr = sleep_queue.head;
	while(curr!= NULL){
 c46:	00 97       	sbiw	r24, 0x00	; 0
 c48:	61 f7       	brne	.-40     	; 0xc22 <__vector_17+0x36>
 c4a:	0a c0       	rjmp	.+20     	; 0xc60 <__vector_17+0x74>
		curr = curr->next;
	}
	if(sleep_queue.head!=NULL){
		if(sleep_queue.head->tick == 0)
		{
			Cp->request = WAKE;
 c4c:	e0 91 0f 02 	lds	r30, 0x020F
 c50:	f0 91 10 02 	lds	r31, 0x0210
 c54:	eb 5f       	subi	r30, 0xFB	; 251
 c56:	fe 4f       	sbci	r31, 0xFE	; 254
 c58:	8a e0       	ldi	r24, 0x0A	; 10
 c5a:	80 83       	st	Z, r24
			Enter_Kernel();
 c5c:	b7 da       	rcall	.-2706   	; 0x1cc <Enter_Kernel>
 c5e:	07 c0       	rjmp	.+14     	; 0xc6e <__vector_17+0x82>
		}

		curr = curr->next;
	}
	if(sleep_queue.head!=NULL){
		if(sleep_queue.head->tick == 0)
 c60:	fa 01       	movw	r30, r20
 c62:	ea 5f       	subi	r30, 0xFA	; 250
 c64:	fe 4f       	sbci	r31, 0xFE	; 254
 c66:	80 81       	ld	r24, Z
 c68:	91 81       	ldd	r25, Z+1	; 0x01
 c6a:	89 2b       	or	r24, r25
 c6c:	79 f3       	breq	.-34     	; 0xc4c <__vector_17+0x60>
		{
			Cp->request = WAKE;
			Enter_Kernel();
		}
	}	
	}
 c6e:	ff 91       	pop	r31
 c70:	ef 91       	pop	r30
 c72:	bf 91       	pop	r27
 c74:	af 91       	pop	r26
 c76:	9f 91       	pop	r25
 c78:	8f 91       	pop	r24
 c7a:	7f 91       	pop	r23
 c7c:	6f 91       	pop	r22
 c7e:	5f 91       	pop	r21
 c80:	4f 91       	pop	r20
 c82:	3f 91       	pop	r19
 c84:	2f 91       	pop	r18
 c86:	0f 90       	pop	r0
 c88:	0b be       	out	0x3b, r0	; 59
 c8a:	0f 90       	pop	r0
 c8c:	0f be       	out	0x3f, r0	; 63
 c8e:	0f 90       	pop	r0
 c90:	1f 90       	pop	r1
 c92:	18 95       	reti

00000c94 <main>:

int main() 
{
   OS_Init();
 c94:	9a db       	rcall	.-2252   	; 0x3ca <OS_Init>
   Task_Create( a_main , 0, 0 );
 c96:	40 e0       	ldi	r20, 0x00	; 0
 c98:	50 e0       	ldi	r21, 0x00	; 0
 c9a:	60 e0       	ldi	r22, 0x00	; 0
 c9c:	88 ee       	ldi	r24, 0xE8	; 232
 c9e:	95 e0       	ldi	r25, 0x05	; 5
 ca0:	77 df       	rcall	.-274    	; 0xb90 <Task_Create>
   OS_Start();
 ca2:	7b dd       	rcall	.-1290   	; 0x79a <OS_Start>
}
 ca4:	80 e0       	ldi	r24, 0x00	; 0
 ca6:	90 e0       	ldi	r25, 0x00	; 0
 ca8:	08 95       	ret

00000caa <__udivmodhi4>:
 caa:	aa 1b       	sub	r26, r26
 cac:	bb 1b       	sub	r27, r27
 cae:	51 e1       	ldi	r21, 0x11	; 17
 cb0:	07 c0       	rjmp	.+14     	; 0xcc0 <__udivmodhi4_ep>

00000cb2 <__udivmodhi4_loop>:
 cb2:	aa 1f       	adc	r26, r26
 cb4:	bb 1f       	adc	r27, r27
 cb6:	a6 17       	cp	r26, r22
 cb8:	b7 07       	cpc	r27, r23
 cba:	10 f0       	brcs	.+4      	; 0xcc0 <__udivmodhi4_ep>
 cbc:	a6 1b       	sub	r26, r22
 cbe:	b7 0b       	sbc	r27, r23

00000cc0 <__udivmodhi4_ep>:
 cc0:	88 1f       	adc	r24, r24
 cc2:	99 1f       	adc	r25, r25
 cc4:	5a 95       	dec	r21
 cc6:	a9 f7       	brne	.-22     	; 0xcb2 <__udivmodhi4_loop>
 cc8:	80 95       	com	r24
 cca:	90 95       	com	r25
 ccc:	bc 01       	movw	r22, r24
 cce:	cd 01       	movw	r24, r26
 cd0:	08 95       	ret

00000cd2 <__tablejump2__>:
 cd2:	ee 0f       	add	r30, r30
 cd4:	ff 1f       	adc	r31, r31
 cd6:	88 1f       	adc	r24, r24
 cd8:	8b bf       	out	0x3b, r24	; 59
 cda:	07 90       	elpm	r0, Z+
 cdc:	f6 91       	elpm	r31, Z
 cde:	e0 2d       	mov	r30, r0
 ce0:	19 94       	eijmp

00000ce2 <_exit>:
 ce2:	f8 94       	cli

00000ce4 <__stop_program>:
 ce4:	ff cf       	rjmp	.-2      	; 0xce4 <__stop_program>
